openapi: "3.0.1"
info:
  title: "SCALE Capability Service"
  version: v0.0.7
  description: This API allows UI's to Query Capabilities.
#  PLACEHOLDERs - to be uncommented when implemented
  termsOfService: "http://api.crowncommercial.gov.uk/terms/"
  contact:
    email: "apiteam@crowncommercial.gov.uk"
  license:
    name: "Open Government Licence 3.0"
    url: "https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
#
#
#security:
#  - OAuth2:
#    - read
paths:
  /assessments/tools/{external-tool-id}/dimensions:
    get:
      summary: Return list of capabilities.
      description: Retrieves a list of dimensions for an event within a lot. 
      tags:
        - View Capabilities
      operationId: get-capabilities
      parameters:
        - $ref: '#/components/parameters/ToolParam'
      responses:
        '200':
          description: Capabilities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DimensionDefinition'
        '400':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/400InvalidRequest'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
  /assessments/tools/{external-tool-id}/dimensions/{dimension-id}/data:
    get:
      summary: Return list of capabilities.
      description: Retrieves a list of dimensions for an event within a lot. 
      tags:
        - View Capabilities
      operationId: get-supplier-data
      parameters:
        - $ref: '#/components/parameters/ToolParam'
        - $ref: '#/components/parameters/DimensionParam'
        - $ref: '#/components/parameters/SuppliersParam'
      responses:
        '200':
          description: ok
          content:
            text/csv:
              schema:
                type: string
                example: |
                  Supplier, Requirements, Criteria 1, Criteria 2, Criteria 3\n
                  Supplier 1, Requirement 1, Val 1, Val 2, Val 3 \n
                  Supplier 1, Requirement 2, Val 4, Val 5, Val 6 \n
                  Supplier 1, Requirement 3, Val 7, Val 8, Val 9 \n
                  Supplier 2, Requirement 1, Val 10, Val 11, Val 12 \n
                  Supplier 2, Requirement 2, Val 13, Val 14, Val 15 \n
                  Supplier 2, Requirement 3, Val 16, Val 17, Val 18 \n
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuppliersData'
        '400':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/400InvalidRequest'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
  /assessments:
    post:
      description: Creates a new assessment that the user will score suppliers based on requirements for an event within a lot.
      tags:
        - Manage Assessments
      operationId: create-assessment
      requestBody:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/Assessment'
      responses:
        '201':
          description: Assessment ID for the created assessment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '422':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/422ValidationErrors'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
      summary: Create a new Assessment
    get:
      summary: Return list of assessments.
      description: Retrieves a list of assessments created by user.
      tags:
        - Manage Assessments
      operationId: get-users-assessments
      responses:
        '200':
          description: Assessments List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssessmentSummary'
        '400':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/400InvalidRequest'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
  /assessments/{assessment-id}:
    get:
      summary: Return assessment state.
      description: Retrieves assessment.
      tags:
        - Manage Assessments
      operationId: get-assessment
      parameters:
        - $ref: '#/components/parameters/AssessmentParam'
      responses:
        '200':
          description: Assessment State
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assessment'
        '400':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/400InvalidRequest'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
          
  /assessments/{assessment-id}/dimensions/{dimension-id}:
    put:
      description: Adds/Updates dimension details on an assessment
      tags:
        - Manage Requirements
      operationId: update-dimension
      parameters:
        - $ref: '#/components/parameters/AssessmentParam'
        - $ref: '#/components/parameters/DimensionParam'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/DimensionRequirement'

      responses:
        '201':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequirementId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      summary: Add/Update dimension
      
  
  /assessments/{assessment-id}/dimensions/{dimension-id}/requirements/{requirement-id}:
    parameters:
      - $ref: '#/components/parameters/AssessmentParam'
      - $ref: '#/components/parameters/DimensionParam'
      - $ref: '#/components/parameters/RequirementParam'
    put:
      description: Adds/Updates a requirement on an assessment.
      tags:
        - Manage Requirements
      operationId: update-requirements
      requestBody:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/Requirement'
      responses:
        '201':
          description: Add/update requirement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '422':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/422ValidationErrors'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
      summary: Add/Update requirement
    delete:
      description: Remove a supplier from an event
      tags:
        - Manage Requirements
      operationId: removeSuppliers
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      summary: Remove a requirement
components:
  parameters:
    ToolParam:
      name: external-tool-id
      in: path
      required: true
      description: External Tool ID
      schema:
        $ref: '#/components/schemas/ExternalToolId'
    DimensionParam:
      name: dimension-id
      in: path
      required: true
      description: Dimension ID
      schema:
        $ref: '#/components/schemas/DimensionId'
    AssessmentParam:
      name: assessment-id
      in: path
      required: true
      description: Assessment ID
      schema:
        $ref: '#/components/schemas/AssessmentId'
    RequirementParam:
      name: requirement-id
      in: path
      required: true
      description: Requirement ID
      schema:
        $ref: '#/components/schemas/RequirementId'
        
    SuppliersParam:
      name: suppliers
      in: query
      required: false
      description: List of suppliers
      schema:
        type: array
        items:
            $ref: '#/components/schemas/SupplierId'
      style: form
      explode: false
      example: [GB-COH-123456,GB-DUNS-56789]
      
  schemas:
    ExternalToolId:
      type: string
      description: Defines the assessment tool being used.
      example: 1
    DimensionId:
      type: integer
      description: Dimension ID provided within the capability definition .
      example: 1
    AssessmentId:
      type: integer
      description: Assessment ID provided when a new assessment is created.
      example: 1
      readOnly: true
    RequirementId:
      type: integer
      description: ID provided when a new requirement is added from the options provided in a dimension.
      example: 1
    CriterionId:
      type: string
      description: Value ID provided within the capability definition within a dimension .
      example: 1
    SupplierId:
      type: string
      description: Supplier ID in CCS Format.
      example: GB-COH-123456

    Assessment:
      type: object
      properties:
        assessment-id:
          $ref: '#/components/schemas/AssessmentId'
        external-tool-id:
          $ref: '#/components/schemas/ExternalToolId'
        status:
          $ref: '#/components/schemas/AssessmentStatus'
        dimensionRequirements:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/DimensionRequirement'
        scores:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SupplierScores'

    AssessmentSummary:
      type: object
      properties:
        assessment-id:
          $ref: '#/components/schemas/AssessmentId'
        external-tool-id:
          $ref: '#/components/schemas/ExternalToolId'
        status:
          $ref: '#/components/schemas/AssessmentStatus'

    AssessmentStatus:
      type: string
      enum:
        - active
        - complete
      example: active

    Dimension:
      type: object
      properties:
        dimension-id:
          $ref: '#/components/schemas/DimensionId'
        name:
          type: string
          example: Resource Profile (SC)
          readOnly: true
            
    DimensionDefinition:
      allOf:
        - $ref: '#/components/schemas/Dimension'
        - type: object
          properties:
            weightingRange:
              $ref: '#/components/schemas/WeightingRange'
            options:
              type: array
              items:
                $ref: '#/components/schemas/DimensionOption'
            evaluationCriteria:
              type: array
              items:
                $ref: '#/components/schemas/CriterionDefinition'

    CriteriaSelectionType:
      type: string
      enum:
        - integer
        - select
        - multiselect
      example: multiselect
      readOnly: true
      
    DimensionOption:
      type: object
      properties:
        requirement-id:
          $ref: '#/components/schemas/RequirementId'
        name:
          type: string
          example: Data Analyst
          readOnly: true
        groupRequirement:
          type: boolean
          example: false
          readOnly: true
        groups:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: data
              level:
                type: integer
                example: 1
          readOnly: true
                  
    WeightingRange:
      type: object
      properties:
        min:
          allOf:
            - $ref: '#/components/schemas/Percentage'
          example: 10
        max:
          allOf:
            - $ref: '#/components/schemas/Percentage'
          example: 60
          
    DimensionRequirement:
      allOf:
        - $ref: '#/components/schemas/Dimension'
        - type: object
          properties:
            weighting:
              $ref: '#/components/schemas/Percentage'
            includedCriteria:
              type: array
              items:
                $ref: '#/components/schemas/CriterionDefinition'
            overwriteRequirements:
              type: boolean
              example: false
              writeOnly: true
              description: 'If `true` - all requirements will be replaced. If `false` - requirements will only be added/overwritten. Optional - defaults to `false`.'
            requirements:
              type: array
              items:
                $ref: '#/components/schemas/Requirement'
            
    Requirement:
      allOf:
        - $ref: '#/components/schemas/DimensionOption'
        - type: object
          properties:
            weighting:
              $ref: '#/components/schemas/Percentage'
            values:
              type: array
              items:
                $ref: '#/components/schemas/Criterion'
                
    CriterionDefinition:
      type: object
      properties:
        criterion-id:
          $ref: '#/components/schemas/CriterionId'
        name:
          type: string
          example: via Subcontractors
          readOnly: true
        type:
          $ref: '#/components/schemas/CriteriaSelectionType'
        options:
          type: array
          items:
            type: string
          example:
            - None
            - Baseline Personnel Security Standard (BPSS)
            - Counter Terrorist Check (CTC)
            - Security Check (SC)
            - Developed Vetting (DV)
          readOnly: true
          
    Criterion:
      allOf:
        - $ref: '#/components/schemas/CriterionDefinition'
        - type: object
          properties:
            value:
              oneOf:
                - type: integer
                - type: string
              example: Security Check (SC)
              
    Supplier:
      $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/OrganizationReference'
          
    SuppliersData:
      type: object
      properties:
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/CriterionDefinition'
        data:
          type: array
          items:
            $ref: '#/components/schemas/SupplierData'
          
          
    SupplierData:
      type: object
      properties:
        supplier:
          $ref: '#/components/schemas/Supplier'
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/CriterionData'
            
    CriterionData:
      type: object
      properties:
        criterion-id:
          $ref: '#/components/schemas/CriterionId'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
      
          
    SupplierScores:
      type: object
      properties:
        supplier:
          $ref: '#/components/schemas/Supplier'
        dimensionScores:
          type: array
          items:
            $ref: '#/components/schemas/DimensionScores'
        total:
          description: Supplier score, as a 2 decimal place percentage
          type: number
          format: double
          example: 56.91
          
    DimensionScores:
      type: object
      properties:
        dimension-id:
          $ref: '#/components/schemas/DimensionId'
        name:
          type: string
        score:
          type: number
          format: double
          example: 56.91
        requirementScores:
          type: array
          items:
            $ref: '#/components/schemas/RequirementScore'
            
    Data:
      type: object
      properties:
        name:
          type: string
        value:
          description: Supplier requirement submission value
          type: integer
          example: 2
          
    RequirementScore:
      allOf:
        - $ref: '#/components/schemas/Data'
        - type: object
          properties:
            criterion:
              type: string
            score:
              description: Supplier requirement score, calculated
              type: number
              format: double
              example: 15.75
          
    Percentage:
      type: integer
      minimum: 0
      maximum: 100
      example: 10
      
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/davejhughes/agreement-service/v0.0.6