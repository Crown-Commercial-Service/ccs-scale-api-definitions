components:
#  securitySchemes:
#    OAuth2:
#      type: oauth2
#      flows:
#        authorizationCode:
#          authorizationUrl: http://ccsexample.com/oauth/auth
#          tokenUrl: https://api.crowncommercial.gov.uk/oauth/token
#          scopes:
#            read: Grants read access
#           only read for MVP
  schemas:
#
    AgreementSummary:
      type: object
      properties:
        number:
          type: string
          description: Commercial Agreement Number
          example: RM3733
        name:
          type: string
          description: Commercial Agreement Name
          example: "Technology Products 2"
          
    Agreement:
      title: Agreement (OCDS Package)
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/BAT_initial/common/OCDS_Schema.yaml#/components/schemas/Package'
      type: object
      properties:
        uri:
          example: "https://www.crowncommercial.gov.uk/agreements/RM3733"   
        releases:
          type: object
          description: An array of versions of the Agreement (OCDS Releases)
          title: Agreement Release Summary
          properties:
            ocid:
              description: 'A globally unique identifier for this Open Contracting Process. Composed of an ocid prefix and an identifier for the Agreement.'
              example: 'ocds-b5fd17-RM1234'
            id:
              description: 'Version of the Agreement'
              example: 'RM1234_V1'
            title:
              description: A overall title for this Agreemente.
        publisher:
          type: object
          description: Information to uniquely identify the publisher of this Agreement.
          properties:
            name:
              example: "Crown Commercial Services"
            scheme:
              example: "XX-CCS"
            uid:
              example: "123456789"
            uri:
              example: "https://www.crowncommercial.gov.uk/"
        licence:
          example: "https://www.crowncommercial.gov.uk/publicationpolicyTBA"


#
# Agreement Detail omits some Agreement data in the initial version.
#  - Suppliers will be shown at a Lot level rather than Agreement level
#  - CPV codes are omitted as noted above
#
    AgreementDetail:
      title: Agreement (OCDS Release)
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/BAT_initial/common/OCDS_Schema.yaml#/components/schemas/Release'
      type: object
      properties:
        ocid:
          description: 'A globally unique identifier for this Open Contracting Process. Composed of an ocid prefix and an identifier for the Agreement.'
          example: 'ocds-b5fd17-RM3733'
        id:
          description: 'Version of the Agreement'
          example: 'RM3733_V1'
        title:
          description: A overall title for this Agreements.
          example: "Technology Products 2"
        description:
          description: Short textual description of the commercial agreement
        date:
          description: Effective start date of Commercial Agreement
        tag:
          description: >-
            One or more values from the closed [releaseTag](https://standard.open-contracting.org/1.1/en/schema/codelists/#release-tag) codelist. 
            Tags can be used to filter releases and to understand the kind of information that releases might contain. For an aggreement this
            will always be in the planning stage. In call offs this may be something else from the codelist
          type: array
          items:
            type: string
            enum:
              - planning
              - planningUpdate
        parties:
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/BAT_initial/common/OCDS_Schema.yaml#/components/schemas/Organization'
          type: object
          properties:
            roles:
              type: array
            nullable: true
            items:
              type: string
              # need to DELETE as appropriate items never allowed int an agreement. Rest can be added as part of call off.
              enum:
                - buyer
                - procuringEntity
                - supplier
                - tenderer
                - funder
                - enquirer
                - payer
                - payee
                - reviewBody
                - interestedParty
        planning:
          # Is planning related to the call off's, the agreement creations or both?
          description: >-
            Information from the planning phase of the contracting process. This includes information related 
            to the process of deciding what to contract, when and how. For an Agreement this will be defined in the cqll off.
          pattern: 'null'
          example: 'null'
        buyer:
          description: >-
            A buyer is an entity whose budget will be used to pay for goods, works or services related to a contract. 
            This may be different from the procuring entity who may be specified in the tender data.
            For an Agreement this is null because the call off will define the buyer             
          pattern: 'null'
          example: 'null'
        tender:
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/BAT_initial/common/OCDS_Schema.yaml#/components/schemas/Tender'
          type: object
          title: Tender
          description: This is the template for Tenders in the agreement
          properties:
            id:
              description: 'An identifier for this tender process. This WILL be the same as the ocid for an agreeement, and will be replaced by  an internal identifier for call off tender.'
              pattern: 'ocds-RM[1-9]{4}'
              example: 'ocds-b5fd17-RM3733'
            title:
              description: >-
                A null value that will be replaced by a title for this tender in any 
                call off tender from this agreemnt. This will often be used by 
                applications as a headline to attract interest, and to help analysts 
                understand the nature of this procurement.
              pattern: 'null'
              example: 'null'
            description:
              description: >-
                A null value that will be replaced by a summary description of the 
                tender. This complements any structured information provided using the
                items array. Descriptions should be short and easy to read. 
                Avoid using ALL CAPS.
              pattern: 'null'
              example: 'null'
            status:
              description: >-
                An agreement will allways be planning but will be replaced by the current status of the tender
            procuringEntity:
              description: >-
                A null value that will be replaced by the entity managing the procurement. This may be different
                from the buyer who pays for, or uses, the items being procured.
              pattern: 'null'
              example: 'null'
            items:
              allOf:
                - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/BAT_initial/common/OCDS_Schema.yaml#/components/schemas/Item'
              description: >-
                A null value that will be replaced by an array of goods and services to be purchased, broken into line items
                wherever possible. Items should not be duplicated, but the quantity
                specified instead.
              pattern: 'null'
              example: 'null'
            value:
              allOf:
                - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/BAT_initial/common/OCDS_Schema.yaml#/components/schemas/Value'
              description: >-
                The total upper estimated value of the procurement aloud within the agreement. A negative value
                indicates that the contracting process may involve payments from the
                supplier to the buyer (commonly used in concession contracts).
                A null value can be replaced by a call off but cannot be exceeded. A null value is totally open.
              type: object
              properties:
                  amount:
                    example: 'null'
                  currency:
                    example: 'null'
            minValue:
              allOf:
                - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/BAT_initial/common/OCDS_Schema.yaml#/components/schemas/Value'
              description: >-
                The minimum estimated value of the procurement aloud within the agreement.  A negative value
                indicates that the contracting process may involve payments from the
                supplier to the buyer (commonly used in concession contracts).
                A null value can be replaced by a call off but cannot be ubndercut. A null value is totally open.
              type: object
              properties:
                amount:
                  example: 'null'
                currency:
                  example: 'null'
            procurementMethod:
              description: >-
                The procurement method, from the closed [method](https://standard.open-contracting.org/1.1/e
                /schema/codelists/#method)
                codelist. If null the this can be defined by the user of the Agreement.
              example: 'open'
            awardCriteria:
              description: >-
                The award criteria for the procurement, using the open
                [awardCriteria](https://standard.open-contracting.org/1.1/en/schema/codelists/#award-criteria)
                codelist.
            
                Deprecated Criteria -
                - lowestCost
                - bestProposal
                - bestValueToGovernment  
                - singleBidOnly
                  
                If null the this can be defined by the user of the Agreement.
              example: 'null'
            submissionMethod:
              description: >-
                The methods by which bids are submitted, using the open
                [submissionMethod](https://standard.open-contracting.org/1.1/en/schema/codelists/#submission-metho)
                codelist. If null the this can be defined by the user of the Agreement.
              example: 'null'
            tenderPeriod:
              allOf:
                - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/BAT_initial/common/OCDS_Schema.yaml#/components/schemas/Period'
              description: >-
                The period when the tender is open for submissions. The end date is
                the closing date for tender submissions. For an Agreement the dates will be null to allow 
                the start dates to be specified for each call off. If the duration is specified then the
                call off dates must span a time less than the time specified.
              type: object
              properties:
                startDate:
                  example: 'null'
                endDate:
                  example: 'null'
                maxExtentDate:
                  example: 'null'
                durationInDays:
                  example: 20
            enquiryPeriod:
              allOf:
                - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/BAT_initial/common/OCDS_Schema.yaml#/components/schemas/Period'
              description: >-
                The period during which potential bidders may submit questions and
                requests for clarification to the entity managing procurement. Details
                of how to submit enquiries should be provided in attached notices, or
                in submissionMethodDetails. Structured dates for when responses to
                questions will be made can be provided using tender milestones.
                For an Agreement the dates will be null to allow 
                the start dates to be specified for each call off. If the duration is specified then the
                call off dates must span a time less than the time specified.
              type: object
              properties:
                startDate:
                  example: 'null'
                endDate:
                  example: 'null'
                maxExtentDate:
                  example: 'null'
                durationInDays:
                  example: 20
            hasEnquiries:
              description: >-
                A true/false field to indicate whether any enquiries were received
                during the tender process. Structured information on enquiries that
                were received, and responses to them, can be provided using the
                enquiries extension.
              example: 'null'
            awardPeriod:
              allOf:
                - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/BAT_initial/common/OCDS_Schema.yaml#/components/schemas/Period'
              description: >-
                The period for decision making regarding the contract award. The end
                date should be the date on which an award decision is due to be
                finalized. The start date may be used to indicate the start of an
                evaluation period.
                For an Agreement the dates will be null to allow 
                the start dates to be specified for each call off. If the duration is specified then the
                call off dates must span a time less than the time specified.
              type: object
              properties:
                startDate:
                  example: 'null'
                endDate:
                  example: 'null'
                maxExtentDate:
                  example: 'null'
                durationInDays:
                  example: 20
            contractPeriod:
              allOf:
                - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/BAT_initial/common/OCDS_Schema.yaml#/components/schemas/Period'
              description: >-
                The period over which the contract is estimated or required to be
                active. If the tender does not specify explicit dates, the duration
                field may be used.
                For an Agreement the dates will be null to allow 
                the start dates to be specified for each call off. If the duration is specified then the
                call off dates must span a time less than the time specified although it would be unusual for an agreement to define this..
              type: object
              properties:
                startDate:
                  example: 'null'
                endDate:
                  example: 'null'
                maxExtentDate:
                  example: 'null'
                durationInDays:
                  example: 'null'
            numberOfTenderers:
              description: >- 
                This will not be defined in An Agreement. It will depend on the number of suppliers 
                who join the tender
              example: 'null'
            tenderers:
              description: >-
                All parties who submit a bid on a tender. More detailed information on bids and the bidding organization 
                can be provided using the bid extension. For an Agreement
              example: 'null'
              pattern: 'null'             
            milestones:
              items:
                $ref: '#/components/schemas/AgreementMilestone'
            amendments:
              description: >-
                A tender amendment is a formal change to the tender, and generally
                involves the publication of a new tender notice/release. The rationale
                and a description of the changes made can be provided here. For an Agreement this will be null and 
                will be defined by the call off process
              example: 'null'
              pattern: 'null'
        awards:
          description: >-
            Information from the award phase of the contracting process. There can be more than one award per 
            contracting process e.g. because the contract is split among different providers, or because 
            it is a standing offer. For an Agreement this is null because the call off will define the Award.
          pattern: 'null'
          example: 'null'
        contracts:
          # Should Contracts contain a template contract?
          description: >-
            Information from the contract creation phase of the procurement process.
            For an Agreement this is null because the call off will define the /contracts.
          pattern: 'null'
          example: 'null'
        language:
          # Should Contracts contain option for other home languages??
          allOf:
                - $ref: '#/components/schemas/AgreementLanguage'
          
        relatedProcesses:
          description: >-
            The details of related processes: for example, if this process follows on from one or more other 
            processes, represented under a separate open contracting identifier (ocid). This is commonly used 
            to relate mini-competitions to their parent frameworks or individual tenders to a broader planning 
            process. For an Agreement no related processeses should exist. All processes will relate to agreeemnts. 
          pattern: 'null'
          example: 'null'
#
    LotDetail:
      type: object
      properties:
        number:
          type: string
          description: Lot number
          example: 1
        name:
          type: string
          description: Lot name
          example: Finance
        startDate:
          type: string
          format: date
          description: Effective start date of Lot
          example: yyyy-mm-dd
        endDate:
          type: string
          format: date
          example: yyyy-mm-dd
          description: Effective start date of Lot
        description:
          type: string
          description: Short textual description of the Lot
        type:
          type: string
          enum: ["product","service","product and service"]
        routesToMarket:
          type: array
          description: Routes to Market for the Lot and associated bounds
          items:
            $ref: '#/components/schemas/RouteToMarket'
        sectors:
          type: array
          items:
            type: string
            description: A sector permitted to buy using the Agreement/Lot
        relatedAgreementLots:
          type: array
          items:
            $ref: '#/components/schemas/RelatedAgreementLot'
        buyerNeeds:
          # Lot default text for buyer needs for CaT
          type: array
          items:
            $ref: '#/components/schemas/BuyerNeed'
        # Further to the rules model below can data drive the whole rules evaluation triggering the rules from events in CaT and BaT
        # e.g. a list of events mapped to rules in config. When event happens, if Agreement has rule data then we evaluate the rule. All in a standard function passed event data and Agreement data
        # Assumption that event mapping discussed above is required for MVP
        rules:
          type: array
          items:
                $ref: '#/components/schemas/LotRule'
#
    RelatedAgreementLot:
      type: object
      description: A simple reference to a related Agreement/Lot combination and relationship type
      properties:
        caNumber:
          type: string
          description: Commercial Agreement number
          example: "RM3733"
        lotNumber:
          type: string
          description: Lot number within the Commercial Agreement
          example: "6"
        relationship:
          type: string
          description: "The type of the relationship in machine readable form"
          example: "FurtherCompetitionWhenBudgetExceeded"
#
    BuyingMethod:
      type: string
      enum: ["DirectAward" , "FurtherCompetition", "Marketplace", "EAuction"]
      example: "DirectAward"
#
    RouteToMarket:
      # Route to Market for the Lot complete with the rules which determine when it applies
      type: object
      properties:
        buyingMethods:
          type: array
          items:
            $ref: "#/components/schemas/BuyingMethod"
        buyingSystemURL:
          type: string
          format: uri
          description: The URL to use for the system to progress the procurement (e.g. BaT, CaT, other)
        minimumValue:
          type: number
          format: float
          description: The minimum value for which this Lot applies
        maximumValue:
          type: number
          format: float
          description: The maximum value for which this Lot applies
        location:
          # Need to understand what this is used for and how this is used to build it out
          type: string
          description: PLACEHOLDER. Needs to be an anyOf for National:Regional or individual Regions or even lowest level NUTS2
        minContractLength:
          type: object
          properties:
            unit:
              type: string
              enum: ["day","month","year"]
              description: The unit of the length value
            length:
              type: integer
              format: int64
              description: The number of units
        maxContractLength:
          type: object
          properties:
            unit:
              type: string
              enum: ["day","month","year"]
              description: The unit of the length value
            length:
              type: integer
              format: int64
              description: The number of units
#
    LotRule:
      type: object
      description: Rules such as 'Prices may not rise more than {x} times in any consecutive {y} day period' can be included in the 'other' element - in this case 2 data-points would be required. <br><br>In the above example:<br><br>name="max number of prices rises in period"<br>
        ruleId="maxNumberPriceChangesInPeriod"<br>
        lotAttributes=[ {"numberOfTimes","integer",,3,},{"daysInPeriod" ,"integer",,7,}]<br>
        transactionData= ["priceRisesLastPeriod","product.priceRises"]<br>
        evaluationType="complex"<br><br>
        as here specific logic is required to obtain the number of price rises before evaluating.
      properties:
        name:
          type: string
          description: Name of the rule (3 or 4 word description)
          example: "Price rise limit"
        ruleId:
          type: string
          description: Unique identifier of the rule
        lotAttributes:
          type: array
          items:
            $ref: '#/components/schemas/NameValueType'
        transactionData:
          type: array
          description: Data required from the relevant transaction to be able to evaluate the rule
          items:
            type: object
            properties:
              name:
                type: string
                description: name of the variable
                example: "priceRisesLastPeriod"
              location:
                type: string
                description: Path or other location of the data which can be evaluated by the application
                example: "product.priceRises"
        evaluationType:
          type: string
          description: How the rule should be evaluated -<br>
            equal = rule is true if the lotAttribute is equal to the transactionData<br>
            greater = rule is true if the lotAttribute is greater than the transactionData<br>
            less = rule is true if the lotAttribute is less than the transactionData<br>
            complex = rule specific code is required to evaluate (typically where there are multiple variables)<br>
            flag = rule is always true. The presence of the rule is used to flag that certain behaviour is required. In some cases data may be passed in the lotAttributes.
          enum: [equal , greater, less, complex, flag]
          # regexp requires the expression. Left for post-MVP
          # complex will require specific code to evaluate e.g. 'identify number of price rises in n days'
        service:
          type: string
          description: Name of the service to which the rule applies (in future the Agreement Service may only return rules for the requested services)
          example: "BaT"
#
    NameValueType:
      type: object
      properties:
        name:
          type: string
          description: The name of the 'other' bound to be used as hashmap key
        datatype:
        # decided not to use date as this would actually be duration and that's an integer
          type: string
          enum: [string,integer,number]
          description: the datatype of the 'other' lotBound value
        valueText:
          type: string
        valueInteger:
          type: integer
        valueNumber:
          type: number
        units:
          type: string
          description: The unit of the value given in the value fields e.g. kg, mile, hour
#
    AgreementUpdate:
      type: object
      properties:
        date:
          type: string
          format: date
          description: Date that the update was added
          example: yyyy-mm-dd
        linkUrl:
          type: string
          format: uri
          description: Link to further information regarding the update
        text:
          type: string
          description: Actual update text
#
    LotSummary:
      type: object
      properties:
        number:
          type: string
          description: Lot number
          example: 1
        name:
          type: string
          description: Lot name
          example: "Finance"
#
    LotSupplier:
      type: object
      properties:
        organization: 
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Organization'
        supplierStatus: 
          type: string
          enum: [active,suspended,excluded]
        LotContacts:
          type: array
          items:
            $ref: '#/components/schemas/LotContact'
#
    LotContact:
      type: "object"
      description: "Agreement/Lot specific contacts for the Organization"
      properties:
        contact:
        #OCDS contactPoint as returned from the Org/Contact service
          $ref: "https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/ContactPoint"
        contactId:
          type: string
          description: "Unique identifier of the contact"
        lotContactReason:
        #Open Question: is there a more OCDS compliant term?
          type: string
          description: "Reason (usually application function) for which the contact should be contacted in the context of this Lot"
          example: "batQuoteNotification"
#
    BuyerNeed:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Id of the need (to allow alignment with CaT)
        name:
          type: string
          description: Name of Buyer Need
        text:
          type: string
          description: Text to be displayed for Buyer need
          
      
      
      
      
      
#############          
          
    Release:
      title: OCDS Release
      allOf:
        - $ref: '#/components/schemas/ReleaseSummary'
      properties:
        description:
          title: Description
          type: string
          nullable: true
          description: 'An overall description of this contracting process or release. This does not replace a detailed breakdown of the objects of the contracting process in the planning, tender, award or contracts section.'
      
        date:
            title: Release Date
            description: 'The date this information was first released, or published.'
            type: string
            format: date-time
            #omitWhenMerged: true
        tag:
            title: Release Tag
            description: 'One or more values from the closed [releaseTag](https://standard.open-contracting.org/1.1/en/schema/codelists/#release-tag) codelist. Tags can be used to filter releases and to understand the kind of information that releases might contain.'
            type: array
            items:
              type: string
              enum:
                - planning
                - planningUpdate
                - tender
                - tenderAmendment
                - tenderUpdate
                - tenderCancellation
                - award
                - awardUpdate
                - awardCancellation
                - contract
                - contractUpdate
                - contractAmendment
                - implementation
                - implementationUpdate
                - contractTermination
                - compiled
            #codelist: releaseTag.csv
            #openCodelist: false
            minItems: 1
            #omitWhenMerged: true
        initiationType:
            title: Initiation type
            description: 'The type of initiation process used for this contract, from the closed [initiationType](https://standard.open-contracting.org/1.1/en/schema/codelists/#initiation-type) codelist.'
            type: string
            enum:
              - tender
            #codelist: initiationType.csv
            #openCodelist: false
        parties:
            title: Parties
            description: 'Information on the parties (organizations, economic operators and other participants) who are involved in the contracting process and their roles, e.g. buyer, procuring entity, supplier etc. Organization references elsewhere in the schema are used to refer back to this entries in this list.'
            type: array
            items:
              $ref: '#/components/schemas/Organization'
            uniqueItems: true
        buyer:
            title: Buyer
            description: 'A buyer is an entity whose budget will be used to pay for goods, works or services related to a contract. This may be different from the procuring entity who may be specified in the tender data.'
            allOf:
              - $ref: '#/components/schemas/OrganizationReference'
        planning:
            title: Planning
            description: 'Information from the planning phase of the contracting process. This includes information related to the process of deciding what to contract, when and how.'
            allOf:
              - $ref: '#/components/schemas/Planning'
        tender:
            title: Tender
            description: The activities undertaken in order to enter into a contract.
            allOf:
              - $ref: '#/components/schemas/Tender'
        awards:
            title: Awards
            description: 'Information from the award phase of the contracting process. There can be more than one award per contracting process e.g. because the contract is split among different providers, or because it is a standing offer.'
            type: array
            items:
              $ref: '#/components/schemas/Award'
            uniqueItems: true
        contracts:
            title: Contracts
            description: Information from the contract creation phase of the procurement process.
            type: array
            items:
              $ref: '#/components/schemas/Contract'
            uniqueItems: true
        language:
            title: Release language
            description: 'The default language of the data using either two-letter [ISO639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes), or extended [BCP47 language tags](http://www.w3.org/International/articles/language-tags/). The use of lowercase two-letter codes from [ISO639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) is recommended.'
            nullable: true
            allOf:
              - $ref: '#/components/schemas/Language'
            default: en
        relatedProcesses:
            uniqueItems: true
            items:
              $ref: '#/components/schemas/RelatedProcess'
            description: 'The details of related processes: for example, if this process follows on from one or more other processes, represented under a separate open contracting identifier (ocid). This is commonly used to relate mini-competitions to their parent frameworks or individual tenders to a broader planning process.'
            title: Related processes
            type: array
            

    Planning:
      title: Planning
      description: >-
        Information from the planning phase of the contracting process. Note that
        many other fields can be filled in a planning release, in the appropriate
        fields in other schema sections; these would likely be estimates at this
        stage, e.g. value in tender.
      type: object
      properties:
        rationale:
          title: Rationale
          description: >-
            The rationale for the procurement provided in free text. More detail
            can be provided in an attached document.
          type: string
          nullable: true
          pattern: >-
            '^(rationale_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        budget:
          title: Budget
          description: Details of the budget that funds this contracting process.
          allOf:
            - $ref: '#/components/schemas/Budget'
        documents:
          title: Documents
          description: A list of documents related to the planning process.
          type: array
          items:
            $ref: '#/components/schemas/Document'
        milestones:
          title: Planning milestones
          description: A list of milestones associated with the planning stage.
          type: array
          items:
            $ref: '#/components/schemas/Milestone'
        # patternProperties:
        #  '^(rationale_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
         #   type: string
         #   default: null
         
         
 
            
    TenderRelease:
      title: Tender Release
      description: >-
        Data that must be supplied to publish a draft tender.
      type: object
      required:
        - id
      properties:  
        procurementMethod:
          title: Procurement method
          description: >-
            The procurement method, from the closed
            [method](https://standard.open-contracting.org/1.1/en/schema/codelists/#method)
            codelist.
          type: string
          nullable: true
          #codelist: method.csv
          #openCodelist: false
          allOf:
            - $ref: '#/components/schemas/ProcurementMethods'
        procurementMethodDetails:
          title: Procurement method details
          description: >-
            Additional detail on the procurement method used. This field can be
            used to provide the local name of the particular procurement method
            used.
          type: string
          nullable: true
        procurementMethodRationale:
          title: Procurement method rationale
          description: >-
            Rationale for the chosen procurement method. This is especially
            important to provide a justification in the case of limited tenders or
            direct awards.
          type: string
          nullable: true
        tenderPeriod:
          title: Tender period
          description: >-
              The period when the tender is open for submissions. The end date is
              the closing date for tender submissions.
          allOf:
            - $ref: '#/components/schemas/Period'
          
        enquiryPeriod:
            title: Enquiry period
            description: >-
              The period during which potential bidders may submit questions and
              requests for clarification to the entity managing procurement. Details
              of how to submit enquiries should be provided in attached notices, or
              in submissionMethodDetails. Structured dates for when responses to
              questions will be made can be provided using tender milestones.
            allOf:
            - $ref: '#/components/schemas/Period'
    
    Tender:
      title: Tender
      description: >-
        Data regarding tender process - publicly inviting prospective contractors
        to submit bids for evaluation and selecting a winner or winners.
      type: object
      required:
        - id
      properties:
        id:
          title: Tender ID
          description: >-
            An identifier for this tender process. This may be the same as the
            ocid, or may be an internal identifier for this tender.
          type: string
          minLength: 1
          #versionId: true
        title:
          title: Tender title
          description: >-
            A title for this tender. This will often be used by applications as a
            headline to attract interest, and to help analysts understand the
            nature of this procurement.
          type: string
          nullable: true
        description:
          title: Tender description
          description: >-
            A summary description of the tender. This complements any structured
            information provided using the items array. Descriptions should be
            short and easy to read. Avoid using ALL CAPS.
          type: string
          nullable: true
        status:
          title: Tender status
          description: |-
            The current status of the tender, from the closed
            [tenderStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#tender-status)
            codelist.
          allOf: 
            - $ref: '#/components/schemas/TenderStatus'
          nullable: true
        procuringEntity:
          title: Procuring entity
          description: >-
            The entity managing the procurement. This may be different from the
            buyer who pays for, or uses, the items being procured.
          allOf:
            - $ref: '#/components/schemas/OrganizationReference'
        items:
          title: Items to be procured
          description: >-
            The goods and services to be purchased, broken into line items
            wherever possible. Items should not be duplicated, but the quantity
            specified instead.
          type: array
          items:
            $ref: '#/components/schemas/Item'
          uniqueItems: true
        value:
          title: Value
          description: >-
            The total upper estimated value of the procurement. A negative value
            indicates that the contracting process may involve payments from the
            supplier to the buyer (commonly used in concession contracts).
          allOf:
            - $ref: '#/components/schemas/Value'
        minValue:
          title: Minimum value
          description: >-
            The minimum estimated value of the procurement.  A negative value
            indicates that the contracting process may involve payments from the
            supplier to the buyer (commonly used in concession contracts).
          allOf:
            - $ref: '#/components/schemas/Value'
        procurementMethod:
          title: Procurement method
          description: >-
            The procurement method, from the closed
            [method](https://standard.open-contracting.org/1.1/en/schema/codelists/#method)
            codelist.
          type: string
          nullable: true
          #codelist: method.csv
          #openCodelist: false
          allOf:
            - $ref: '#/components/schemas/ProcurementMethod'
        procurementMethodDetails:
          title: Procurement method details
          description: >-
            Additional detail on the procurement method used. This field can be
            used to provide the local name of the particular procurement method
            used.
          type: string
          nullable: true
        procurementMethodRationale:
          title: Procurement method rationale
          description: >-
            Rationale for the chosen procurement method. This is especially
            important to provide a justification in the case of limited tenders or
            direct awards.
          type: string
          nullable: true
        mainProcurementCategory:
          title: Main procurement category
          description: >-
            The primary category describing the main object of this contracting
            process, from the closed
            [procurementCategory](https://standard.open-contracting.org/1.1/en/schema/codelists/#procurement-category)
              codelist.
          type: string
          nullable: true
          #codelist: procurementCategory.csv
          #openCodelist: false
          enum:
            - goods
            - works
            - services
        additionalProcurementCategories:
          title: Additional procurement categories
          description: >-
            Any additional categories describing the objects of this contracting
            process, using the open
            [extendedProcurementCategory](https://standard.open-contracting.org/1.1/en/schema/codelists/#extended-procurement-category)
            codelist.
          type: array
          nullable: true
          items:
            type: string
            enum:
              - goods  
              - works
              - services
              - consultingServices
          #codelist: extendedProcurementCategory.csv
          #openCodelist: true
        awardCriteria:
          title: Award criteria
          description: |-
            The award criteria for the procurement, using the open
            [awardCriteria](https://standard.open-contracting.org/1.1/en/schema/codelists/#award-criteria)
            codelist.
            
            Deprecated Criteria -
            - lowestCost
            - bestProposal
            - bestValueToGovernment  
            - singleBidOnly
          type: string
          enum:
            - priceOnly   
            - costOnly   
            - qualityOnly   
            - ratedCriteria
            - lowestCost
            - bestProposal
            - bestValueToGovernment  
            - singleBidOnly
          nullable: true
          #codelist: awardCriteria.csv
          #openCodelist: true
        awardCriteriaDetails:
          title: Award criteria details
          description: >-
            Any detailed or further information on the award or selection
            criteria.
          type: string
          nullable: true
        submissionMethod:
          title: Submission method
          description: >-
            The methods by which bids are submitted, using the open
            [submissionMethod](https://standard.open-contracting.org/1.1/en/schema/codelists/#submission-method)
            codelist.
          type: array
          nullable: true
          items:
            type: string
            #codelist: submissionMethod.csv
            #openCodeList: true
        submissionMethodDetails:
            title: Submission method details
            description: >-
              Any detailed or further information on the submission method. This can
              include the address, e-mail address or online service to which bids
              are submitted, and any special requirements to be followed for
              submissions.
            type: string
            nullable: true
        tenderPeriod:
          title: Tender period
          description: >-
              The period when the tender is open for submissions. The end date is
              the closing date for tender submissions.
          allOf:
            - $ref: '#/components/schemas/Period'
          
        enquiryPeriod:
            title: Enquiry period
            description: >-
              The period during which potential bidders may submit questions and
              requests for clarification to the entity managing procurement. Details
              of how to submit enquiries should be provided in attached notices, or
              in submissionMethodDetails. Structured dates for when responses to
              questions will be made can be provided using tender milestones.
            allOf:
            - $ref: '#/components/schemas/Period'
        hasEnquiries:
            title: Has enquiries?
            description: >-
              A true/false field to indicate whether any enquiries were received
              during the tender process. Structured information on enquiries that
              were received, and responses to them, can be provided using the
              enquiries extension.
            type: boolean
            nullable: true
        eligibilityCriteria:
            title: Eligibility criteria
            description: A description of any eligibility criteria for potential suppliers.
            type: string
            nullable: true
        awardPeriod:
            title: Evaluation and award period
            description: >-
              The period for decision making regarding the contract award. The end
              date should be the date on which an award decision is due to be
              finalized. The start date may be used to indicate the start of an
              evaluation period.
            allOf:
            - $ref: '#/components/schemas/Period'
        contractPeriod:
            title: Contract period
            description: >-
              The period over which the contract is estimated or required to be
              active. If the tender does not specify explicit dates, the duration
              field may be used.
            allOf:
            - $ref: '#/components/schemas/Period'
        numberOfTenderers:
            title: Number of tenderers
            description: The number of parties who submit a bid.
            type: integer
            # nullable: true
        tenderers:
            title: Tenderers
            description: >-
              All parties who submit a bid on a tender. More detailed information on
              bids and the bidding organization can be provided using the bid
              extension.
            type: array
            items:
              $ref: '#/components/schemas/OrganizationReference'
            uniqueItems: true
        documents:
            title: Documents
            description: >-
              All documents and attachments related to the tender, including any
              notices. See the
              [documentType](https://standard.open-contracting.org/1.1/en/schema/codelists/#document-type)
              codelist for details of potential documents to include. Common
              documents include official legal notices of tender, technical
              specifications, evaluation criteria, and, as a tender process
              progresses, clarifications and replies to queries.
            allOf:
             - $ref: '#/components/schemas/DocumentList'
        milestones:
            title: Milestones
            description: A list of milestones associated with the tender.
            type: array
            items:
              $ref: '#/components/schemas/Milestone'
        amendments:
            description: >-
              A tender amendment is a formal change to the tender, and generally
              involves the publication of a new tender notice/release. The rationale
              and a description of the changes made can be provided here.
            type: array
            title: Amendments
            items:
              $ref: '#/components/schemas/Amendment'
        amendment:
            title: Amendment
            description: >-
              The use of individual amendment objects has been deprecated. From OCDS
              1.1 information should be provided in the amendments array.
              The single amendment object has been deprecated in favour of
              including amendments in an amendments (plural) array.
            allOf:
              - $ref: '#/components/schemas/Amendment'
            deprecated: true
            #deprecatedVersion: '1.1'
        criteria:
            title: Criteria
            description: 'A list of criteria on which either bidders or items will be judged, evaluated or assessed.'
            allOf:
              - $ref: '#/components/schemas/Criteria'
            uniqueItems: true
            minItems: 1
        enquiries:
            title: Enquiries
            nullable: true
            allOf:
              - $ref: '#/components/schemas/Enquiries'
            description: 'Questions sent to the procuring entity, and the answers given'
            
        selectionCriteria:
            title: Selection criteria
            description: Information about the conditions for participation in a procedure.
            allOf:
              - $ref: '#/components/schemas/SelectionCriteria'
        lots:
          title: Lots
          description: 'A tender process may be divided into lots, where bidders can bid on one or more lots. Details of each lot can be provided here. Items, documents and other features can then reference the lot they are related to using relatedLot. Where no relatedLots identifier is given, the values should be interpreted as applicable to the whole tender. Properties of tender can be overridden for a given Lot through their inclusion in the Lot object.'
          type: array
          items:
            $ref: '#/components/schemas/Lot'
            
        lotDetails:
          title: Lot Details
          description: 'If this tender is divided into lots, details can be provided here of any criteria that apply to bidding on these lots. This extended property is currently focused on fields required by the EU TED data standard'
          type: object
          properties:
            maximumLotsBidPerSupplier:
              title: Maximum lots per supplier
              description: The maximum number of lots that one supplier may bid for as part of this contracting process.
              nullable: true
              type: integer
            maximumLotsAwardedPerSupplier:
              title: Maximum lots per supplier
              description: The maximum number of lots that may be awarded to one supplier as part of this contracting process.
              nullable: true 
              type: integer
            awardCriteriaDetails:
              title: Award criteria details
              description: Any detailed or further information on the award or selection criteria.
              type: string
              nullable: true
        lotGroups:
          title: Lot groups
          description: 'Where the buyer reserves the right to combine lots, or wishes to specify the total value for a group of lots, a lot group is used to capture this information.'
          type: array
          items:
            $ref: '#/components/schemas/LotGroup'
            
        #patternProperties:
        #  '^(title_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
        #  '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
        #  '^(procurementMethodRationale_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
        #  '^(awardCriteriaDetails_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
        #  '^(submissionMethodDetails_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
        #  '^(eligibilityCriteria_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null

  
    Award:
        title: Award
        description: >-
          An award for the given procurement. There can be more than one award per
          contracting process e.g. because the contract is split among different
          providers, or because it is a standing offer.
        type: object
        required:
          - id
        properties:
          id:
            title: Award ID
            description: >-
              The identifier for this award. It must be unique and must not change
              within the Open Contracting Process it is part of (defined by a single
              ocid). See the [identifier
              guidance](https://standard.open-contracting.org/1.1/en/schema/identifiers/)
              for further details.
            oneOf:
              - type: string
              - type: integer
            minLength: 1
          title:
            title: Title
            description: Award title
            type: string
            nullable: true
          description:
            title: Description
            description: Award description
            type: string
            nullable: true
          status:
            title: Award status
            description: >-
              The current status of the award, from the closed
              [awardStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#award-status)
              codelist.
            type: string
            nullable: true
            enum:
              - pending
              - active
              - cancelled
              - unsuccessful
            #codelist: awardStatus.csv
            #openCodeList: false
          date:
            title: Award date
            description: >-
              The date of the contract award. This is usually the date on which a
              decision to award was made.
            type: string
            nullable: true
            format: date-time
          value:
            title: Value
            description: >-
              The total value of this award. In the case of a framework contract
              this may be the total estimated lifetime value, or maximum value, of
              the agreement. There may be more than one award per procurement. A
              negative value indicates that the award may involve payments from the
              supplier to the buyer (commonly used in concession contracts).
            allOf:
                - $ref: '#/components/schemas/Value'
          suppliers:
            title: Suppliers
            description: >-
              The suppliers awarded this award. If different suppliers have been
              awarded different items or values, these should be split into separate
              award blocks.
            type: array
            items:
              $ref: '#/components/schemas/OrganizationReference'
            uniqueItems: true
          items:
            title: Items awarded
            description: >-
              The goods and services awarded in this award, broken into line items
              wherever possible. Items should not be duplicated, but the quantity
              specified instead.
            type: array
            minItems: 1
            items:
              $ref: '#/components/schemas/Item'
            uniqueItems: true
          contractPeriod:
            title: Contract period
            description: The period for which the contract has been awarded.
            allOf:
             - $ref: '#/components/schemas/Period'
          documents:
            title: Documents
            description: >-
              All documents and attachments related to the award, including any
              notices.
            type: array
            items:
              $ref: '#/components/schemas/Document'
            uniqueItems: true
          amendments:
            description: >-
              An award amendment is a formal change to the details of the award, and
              generally involves the publication of a new award notice/release. The
              rationale and a description of the changes made can be provided here.
            type: array
            title: Amendments
            items:
              $ref: '#/components/schemas/Amendment'
          amendment:
            title: Amendment
            description: >-
              The use of individual amendment objects has been deprecated. From OCDS
              1.1 information should be provided in the amendments array.
            allOf:
              - $ref: '#/components/schemas/Amendment'
            deprecated: true
  
          requirementResponses:
            title: Requirement responses
            description: A list of the detailed responses of this award to the requirements of the tender.
            allOf:
              - $ref: '#/components/schemas/RequirementResponses'
            uniqueItems: true
            minItems: 1
          relatedLots:
            title: Related lot(s)
            description: 'If this award relates to one or more specific lots, provide the identifier(s) of the related lot(s) here.'
            nullable: true
            type: array
            items:
              type: string
             
        #patternProperties:
        #  '^(title_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
        #  '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
    Contract:
        type: object
        title: Contract
        description: >-
          Information regarding the signed contract between the buyer and
          supplier(s).
        required:
          - id
          - awardID
        properties:
          id:
            title: Contract ID
            description: >-
              The identifier for this contract. It must be unique and must not
              change within the Open Contracting Process it is part of (defined by a
              single ocid). See the [identifier
              guidance](https://standard.open-contracting.org/1.1/en/schema/identifiers/)
              for further details.
            oneOf:
              - type: string
              - type: integer
            minLength: 1
          awardID:
            title: Award ID
            description: The award.id against which this contract is being issued.
            oneOf:
              - type: string
              - type: integer
            minLength: 1
          title:
            title: Contract title
            description: Contract title
            type: string
            nullable: true
          description:
            title: Contract description
            description: Contract description
            type: string
            nullable: true
          status:
            title: Contract status
            description: >-
              The current status of the contract, from the closed
              [contractStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#contract-status)
              codelist.
            type: string
            nullable: true
            enum:
              - pending
              - active
              - cancelled
              - terminated
            #codelist: contractStatus.csv
            #openCodeList: false
          period:
            title: Period
            description: The start and end date for the contract.
            allOf:
             - $ref: '#/components/schemas/Period'
          value:
            title: Value
            description: >-
              The total value of this contract. A negative value indicates that the
              contract will involve payments from the supplier to the buyer
              (commonly used in concession contracts).
            allOf:
             - $ref: '#/components/schemas/Value'
          items:
            title: Items contracted
            description: >-
              The goods, services, and any intangible outcomes in this contract.
              Note: If the items are the same as the award do not repeat.
            type: array
            minItems: 1
            items:
              $ref: '#/components/schemas/Item'
            uniqueItems: true
          dateSigned:
            title: Date signed
            description: >-
              The date the contract was signed. In the case of multiple signatures,
              the date of the last signature.
            type: string
            nullable: true
            format: date-time
          documents:
            title: Documents
            description: >-
              All documents and attachments related to the contract, including any
              notices.
            allOf:
              - $ref: '#/components/schemas/DocumentList'
            uniqueItems: true
          implementation:
            title: Implementation
            description: >-
              Information related to the implementation of the contract in
              accordance with the obligations laid out therein.
            allOf:
                - $ref: '#/components/schemas/Implementation'
          relatedProcesses:
            uniqueItems: true
            items:
              $ref: '#/components/schemas/RelatedProcess'
            description: >-
              The details of related processes: for example, if this process is
              followed by one or more contracting processes, represented under a
              separate open contracting identifier (ocid). This is commonly used to
              refer to subcontracts and to renewal or replacement processes for this
              contract.
            title: Related processes
            type: array
          milestones:
            title: Contract milestones
            description: >-
              A list of milestones associated with the finalization of this
              contract.
            type: array
            items:
              $ref: '#/components/schemas/Milestone'
          amendments:
            description: >-
              A contract amendment is a formal change to, or extension of, a
              contract, and generally involves the publication of a new contract
              notice/release, or some other documents detailing the change. The
              rationale and a description of the changes made can be provided here.
            type: array
            title: Amendments
            items:
              $ref: '#/components/schemas/Amendment'
          amendment:
            title: Amendment
            description: >-
              The use of individual amendment objects has been deprecated. From OCDS
              1.1 information should be provided in the amendments array.
            allOf:
              - $ref: '#/components/schemas/Amendment'
            deprecated: true
              #description: >-
               # The single amendment object has been deprecated in favour of
             #   including amendments in an amendments (plural) array.
              #deprecatedVersion: '1.1'

          requirementResponses:
            title: Requirement responses
            description: A list of the detailed responses of this contract to the requirements of the tender.
            type: array
            items:
              $ref: '#/components/schemas/RequirementResponse'
            uniqueItems: true
            minItems: 1
       # patternProperties:
       #   '^(title_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
       #     type: string
       #     default: null
       #   '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
       #     type: string
       #     default: null
       
    Implementation:
        type: object
        title: Implementation
        description: Information during the performance / implementation stage of the contract.
        properties:
          transactions:
            title: Transactions
            description: A list of the spending transactions made against this contract
            type: array
            items:
              $ref: '#/components/schemas/Transaction'
            uniqueItems: true
          milestones:
            title: Milestones
            description: >-
              As milestones are completed, the milestone's status and dates should
              be updated.
            type: array
            items:
              $ref: '#/components/schemas/Milestone'
            uniqueItems: true
          documents:
            title: Documents
            description: >-
              Documents and reports that are part of the implementation phase e.g.
              audit and evaluation reports.
            allOf:
              - $ref: '#/components/schemas/Document'
            uniqueItems: true
            
    AgreementMilestone:
      description: >-
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/BAT_initial/common/OCDS_Schema.yaml#/components/schemas/Milestone'
      type: object
      properties:
        dueDate:
          pattern: 'null'
          example: 'null'
        dateMet:
          pattern: 'null'
          example: 'null'
        dateModified:
          pattern: 'null'
          example: 'null'
        status:
          pattern: 'null'
          example: 'null'
    
       
       

    Budget:
        type: object
        title: Budget information
        description: >-
          This section contains information about the budget line, and associated
          projects, through which this contracting process is funded. It draws upon
          the data model of the [Fiscal Data
          Package](https://frictionlessdata.io/specs/fiscal-data-package/), and
          should be used to cross-reference to more detailed information held using
          a Budget Data Package, or, where no linked Budget Data Package is
          available, to provide enough information to allow a user to manually or
          automatically cross-reference with another published source of budget and
          project information.
        properties:
          id:
            title: ID
            description: >-
              An identifier for the budget line item which provides funds for this
              contracting process. This identifier should be possible to
              cross-reference against the provided data source.
            oneOf:
              - type: string
              - type: integer
            nullable: true
          description:
            title: Budget Source
            description: >-
              A short free text description of the budget source. May be used to
              provide the title of the budget line, or the programme used to fund
              this project.
            type: string
            nullable: true
          amount:
            title: Amount
            description: >-
              The value reserved in the budget for this contracting process. A
              negative value indicates anticipated income to the budget as a result
              of this contracting process, rather than expenditure. Where the budget
              is drawn from multiple sources, the budget breakdown extension can be
              used.
            allOf:
             - $ref: '#/components/schemas/Value'
          project:
            title: Project title
            description: >-
              The name of the project through which this contracting process is
              funded (if applicable). Some organizations maintain a registry of
              projects, and the data should use the name by which the project is
              known in that registry. No translation option is offered for this
              string, as translated values can be provided in third-party data,
              linked from the data source above.
            type: string
            nullable: true
          projectID:
            title: Project identifier
            description: >-
              An external identifier for the project that this contracting process
              forms part of, or is funded via (if applicable). Some organizations
              maintain a registry of projects, and the data should use the
              identifier from the relevant registry of projects.
            oneOf:
              - type: string
              - type: integer
            nullable: true
          uri:
            title: Linked budget information
            description: >-
              A URI pointing directly to a machine-readable record about the budget
              line-item or line-items that fund this contracting process.
              Information can be provided in a range of formats, including using
              IATI, the Open Fiscal Data Standard or any other standard which
              provides structured data on budget sources. Human readable documents
              can be included using the planning.documents block.
            type: string
            nullable: true
            format: uri
          source:
            title: Data Source
            description: >-
              (Deprecated in 1.1) Used to point either to a corresponding Budget
              Data Package, or to a machine or human-readable source where users can
              find further information on the budget line item identifiers, or
              project identifiers, provided here.
            type: string
            nullable: true
            deprecated: true
            #  deprecatedVersion: '1.1'
            #  description: >-
            #    The budget data source field was intended to link to
            #    machine-readable data about the budget for a contracting process,
            #    but has been widely mis-used to provide free-text descriptions of
            #    budget providers. As a result, it has been removed from version 1.1.
            #    budget/uri can be used to provide a link to machine-readable budget
            #    information, and budget/description can be used to provide
            #    human-readable information on the budget source.
            format: uri
       # patternProperties:
       #   '^(source_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
       #     type: string
       #     default: null
       #   '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #      type: string
      #      default: null
      #    '^(project_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
       #     type: string
       #     default: null
       
    Transaction:
        type: object
        title: Transaction information
        description: >-
          A spending transaction related to the contracting process. Draws upon the
          data models of the [Fiscal Data
          Package](https://frictionlessdata.io/specs/fiscal-data-package/) and the
          [International Aid Transparency
          Initiative](http://iatistandard.org/activity-standard/iati-activities/iati-activity/transaction/)
          and should be used to cross-reference to more detailed information held
          using a Fiscal Data Package, IATI file, or to provide enough information
          to allow a user to manually or automatically cross-reference with some
          other published source of transactional spending data.
        required:
          - id
        properties:
          id:
            title: ID
            description: >-
              A unique identifier for this transaction. This identifier should be
              possible to cross-reference against the provided data source. For IATI
              this is the transaction reference.
            oneOf:
              - type: string
              - type: integer
            minLength: 1
          source:
            title: Data source
            description: >-
              Used to point either to a corresponding Fiscal Data Package, IATI
              file, or machine or human-readable source where users can find further
              information on the budget line item identifiers, or project
              identifiers, provided here.
            type: string
            nullable: true
            format: uri
          date:
            title: Date
            description: The date of the transaction
            type: string
            nullable: true
            format: date-time
          value:
            title: Value
            description: The value of the transaction.
            allOf:
                - $ref: '#/components/schemas/Value'
          payer:
            allOf:
                - $ref: '#/components/schemas/OrganizationReference'
            title: Payer
            description: >-
              An organization reference for the organization from which the funds in
              this transaction originate.
          payee:
            title: Payee
            description: >-
              An organization reference for the organization which receives the
              funds in this transaction.
            allOf:
                - $ref: '#/components/schemas/OrganizationReference'
          uri:
            title: Linked spending information
            description: >-
              A URI pointing directly to a machine-readable record about this
              spending transaction.
            type: string
            nullable: true
            format: uri
          amount:
            title: Amount
            description: >-
              (Deprecated in 1.1. Use transaction.value instead) The value of the
              transaction. A negative value indicates a refund or correction.
            oneOf:
              - $ref: '#/components/schemas/Value'
            deprecated: true
            #description: >-
            #    This field has been replaced by the `transaction.value` field for
            #    consistency with the use of value and amount elsewhere in the
            #    standard.
            #  deprecatedVersion: '1.1'
          providerOrganization:
            title: Provider organization
            description: >-
              (Deprecated in 1.1. Use transaction.payer instead.) The Organization
              Identifier for the organization from which the funds in this
              transaction originate. Expressed following the Organizational
              Identifier standard - consult the documentation and the codelist.
            oneOf:
              - $ref: '#/components/schemas/Identifier'
            deprecated: true
             # description: >-
             #   This field has been replaced by the `transaction.payer` field to
             #   resolve ambiguity arising from 'provider' being interpreted as
             #   relating to the goods or services procured rather than the flow of
             #   funds between the parties.
              #deprecatedVersion: '1.1'
          receiverOrganization:
            title: Receiver organization
            description: >-
              (Deprecated in 1.1. Use transaction.payee instead). The Organization
              Identifier for the organization which receives the funds in this
              transaction. Expressed following the Organizational Identifier
              standard - consult the documentation and the codelist.
            oneOf:
              - $ref: '#/components/schemas/Identifier'
            deprecated: true
            #  description: >-
            #    This field has been replaced by the `transaction.payee` field to
            #    resolve ambiguity arising from 'receiver' being interpreted as
             #   relating to the goods or services procured rather than the flow of
            #    funds between the parties.
            #  deprecatedVersion: '1.1'
            
    OrganizationReference:
        title: Organization reference
        description: >-
          The id and name of the party being referenced. Used to cross-reference to
          the parties section
        properties:
          name:
            type: string
            nullable: true
            description: >-
              The name of the party being referenced. This must match the name of an
              entry in the parties section.
            title: Organization name
            example: Widgets Inc
            minLength: 1
          id:
            oneOf:
              - type: string
              - type: integer
            description: >-
              The id of the party being referenced. This must match the id of an
              entry in the parties section.
            example: 123
            title: Organization ID
          identifier:
            deprecated: true
            title: Primary identifier
            description: >-
              The primary identifier for this organization. Identifiers that
              uniquely pick out a legal entity should be preferred. Consult the
              [organization identifier
              guidance](https://standard.open-contracting.org/1.1/en/schema/identifiers/)
              for the preferred scheme and identifier to use.
              From version 1.1, organizations should be referenced by their
                identifier and name in a document, and detailed legal identifier
                information should only be provided in the relevant cross-referenced
                entry in the parties section at the top level of a release.
              #deprecatedVersion: '1.1'
            allOf:
              - $ref: '#/components/schemas/Identifier'
            
          address:
            deprecated: true
              #deprecatedVersion: '1.1'
            description: >-
              From version 1.1, organizations should be referenced by their
              identifier and name in a document, and address information should
              only be provided in the relevant cross-referenced entry in the
              parties section at the top level of a release.
              (Deprecated outside the parties section)
            oneOf:
              - $ref: '#/components/schemas/Address'
            
            title: Address
          additionalIdentifiers:
            title: Additional identifiers
            description: >-
              From version 1.1, organizations should be referenced by their
              identifier and name in a document, and additional identifiers for an
              organization should be provided in the relevant cross-referenced
              entry in the parties section at the top level of a release.
              (Deprecated outside the parties section) A list of additional /
              supplemental identifiers for the organization, using the [organization
              identifier guidance]
              (https://standard.open-contracting.org/1.1/en/schema/identifiers/).
              This can be used to provide an internally used identifier for this
              organization in addition to the primary legal entity identifier.
            type: array
            deprecated: true
            #  deprecatedVersion: '1.1'
            items:
              $ref: '#/components/schemas/Identifier'
            uniqueItems: true
           # wholeListMerge: true
            
          contactPoint:
            title: Contact point
            deprecated: true
            description: >-
                From version 1.1, organizations should be referenced by their
                identifier and name in a document, and contact point information for
                an organization should be provided in the relevant cross-referenced
                entry in the parties section at the top level of a release.
                (Deprecated outside the parties section)
            oneOf:
              - $ref: '#/components/schemas/ContactPoint'
        
    Organization:
        title: Organization
        description: A party (organization)
        type: object
        properties:
          name:
            title: Common name
            description: >-
              A common name for this organization or other participant in the
              contracting process. The identifier object provides a space for the
              formal legal name, and so this may either repeat that value, or may
              provide the common name by which this organization or entity is known.
              This field may also include details of the department or sub-unit
              involved in this contracting process.
            type: string
            nullable: true
          id:
            type: string
            description: >-
              The ID used for cross-referencing to this party from other sections of
              the release. This field may be built with the following structure
              {identifier.scheme}-{identifier.id}(-{department-identifier}).
            title: Entity ID
          identifier:
            title: Primary identifier
            description: >-
              The primary identifier for this organization or participant.
              Identifiers that uniquely pick out a legal entity should be preferred.
              Consult the [organization identifier
              guidance](https://standard.open-contracting.org/1.1/en/schema/identifiers/)
              for the preferred scheme and identifier to use.
            allOf:
                - $ref: '#/components/schemas/Identifier'
          additionalIdentifiers:
            title: Additional identifiers
            description: >-
              A list of additional / supplemental identifiers for the organization
              or participant, using the [organization identifier
              guidance](https://standard.open-contracting.org/1.1/en/schema/identifiers/).
              This can be used to provide an internally used identifier for this
              organization in addition to the primary legal entity identifier.
            type: array
            items:
              $ref: '#/components/schemas/Identifier'
            uniqueItems: true
            #wholeListMerge: true
          address:
            title: Address
            description: >-
              An address. This may be the legally registered address of the
              organization, or may be a correspondence address for this particular
              contracting process.
            allOf:
              - $ref: '#/components/schemas/Address'
          contactPoint:
            title: Contact point
            description: Contact details that can be used for this party.
            allOf:
              - $ref: '#/components/schemas/ContactPoint'
          roles:
            title: Party roles
            description: >-
              The party's role(s) in the contracting process, using the open
              [partyRole](https://standard.open-contracting.org/1.1/en/schema/codelists/#party-role)
              codelist.
            type: array
            nullable: true
            items:
              type: string
              enum:
                - buyer
                - procuringEntity
                - supplier
                - tenderer
                - funder
                - enquirer
                - payer
                - payee
                - reviewBody
                - interestedParty
            #codelist: partyRole.csv
            #openCodeList: true
          details:
            type: object
            nullable: true
            description: >-
              Additional classification information about parties can be provided
              using partyDetail extensions that define particular properties and
              classification schemes.
            title: Details
            allOf:
              - $ref: '#/components/schemas/OrganizationDetail'
       # patternProperties:
       #   '^(name_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
       #     type: string
       #     default: null
#
    OrganizationDetail:
      type: object
      description: "Additional attributes for the Organization object required for CCS Organization Service"
      required:
      - creationDate
      - countryCode
      - companyType
      - is_sme
      - is_vcse
      - status
      - active
      properties:
        creationDate:
          description: "Date of organisation creation"
          type: "string"
          example: "DD/MM/YY" 
        countryCode:
          description: "Country code of incorporation"
          type: "string"
          example: "UK" 
        companyType:
          description: "Type of company"
          type: "string"
          example: "Type of company"
        is_sme:
          description: "Is company SME (Small Medium Enterprise)?"
          type: "boolean"
          example: "1"          
        is_vcse:
          description: "IS VCSE?"
          type: "boolean"
          example: "1" 
        status:
          description: "Organisation Status"
          type: "string"
          example: "Organisation status" 
        active:
          description: "Is organisation active?"
          type: "boolean"
          example: "1" 
#           
    Item:
        title: Item
        type: object
        description: 'A good, service, or work to be contracted.'
        required:
          - id
        properties:
          id:
            title: ID
            description: >-
              A local identifier to reference and merge the items by. Must be unique
              within a given array of items.
            oneOf:
              - type: string
              - type: integer
            minLength: 1
          description:
            title: Description
            description: 'A description of the goods, services to be provided.'
            type: string
            nullable: true
          classification:
            title: Classification
            description: The primary classification for the item.
            allOf:
              - $ref: '#/components/schemas/Classification'
          additionalClassifications:
            title: Additional classifications
            description: An array of additional classifications for the item.
            type: array
            items:
              $ref: '#/components/schemas/Classification'
            uniqueItems: true
            #wholeListMerge: true
          quantity:
            title: Quantity
            description: The number of units to be provided.
            type: number
            nullable: true
          unit:
            title: Unit
            description: >-
              A description of the unit in which the supplies, services or works are
              provided (e.g. hours, kilograms) and the unit-price.
            type: object
            properties:
              scheme:
                title: Scheme
                description: >-
                  The list from which identifiers for units of measure are taken,
                  using the open
                  [unitClassificationScheme](https://standard.open-contracting.org/1.1/en/schema/codelists/#unit-classification-scheme)
                  codelist. 'UNCEFACT' is recommended.
                type: string
                nullable: true
                #codelist: unitClassificationScheme.csv
                #openCodeList: true
              id:
                title: ID
                description: >-
                  The identifier from the codelist referenced in the scheme
                  property. Check the codelist for details of how to find and use
                  identifiers from the scheme in use.
                type: string
                nullable: true
                #versionId: true
              name:
                title: Name
                description: Name of the unit.
                type: string
                nullable: true
                pattern: >-
                  '^(name_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$'
              value:
                title: Value
                description: The monetary value of a single unit.
                allOf:
                  - $ref: '#/components/schemas/Value'
              uri:
                title: URI
                description: >-
                  The machine-readable URI for the unit of measure, provided by the
                  scheme.
                format: uri
                type: string
                nullable: true
                
              relatedLot:
                title: Related lot
                description: 'If this item belongs to a lot, provide the identifier of the related lot here.'
                nullable: true
                type: string
           # patternProperties:
           #   '^(name_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
           #     type:
           #       - string
           #       - 'null'
        #patternProperties:
         # '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
         #   type: string
         #   default: null
         
    Amendment:
        title: Amendment
        type: object
        description: Amendment information
        properties:
          date:
            title: Amendment date
            description: The date of this amendment.
            type: string
            nullable: true
            format: date-time
          rationale:
            title: Rationale
            description: An explanation for the amendment.
            type: string
            nullable: true
            pattern: >-
              '^(rationale_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
          id:
            description: 'An identifier for this amendment: often the amendment number'
            type: string
            nullable: true
            title: ID
          description:
            description: >-
              A free text, or semi-structured, description of the changes made in
              this amendment.
            type: string
            nullable: true
            title: Description
          amendsReleaseID:
            description: >-
              Provide the identifier (release.id) of the OCDS release (from this
              contracting process) that provides the values for this contracting
              process **before** the amendment was made.
            type: string
            nullable: true
            title: Amended release (identifier)
          releaseID:
            description: >-
              Provide the identifier (release.id) of the OCDS release (from this
              contracting process) that provides the values for this contracting
              process **after** the amendment was made.
            type: string
            nullable: true
            title: Amending release (identifier)
          changes:
            title: Amended fields
            description: >-
              An array of change objects describing the fields changed, and their
              former values. (Deprecated in 1.1)
            type: array
            items:
              type: object
              properties:
                property:
                  title: Property
                  description: >-
                    The property name that has been changed relative to the place
                    the amendment is. For example if the contract value has changed,
                    then the property under changes within the contract.amendment
                    would be value.amount. (Deprecated in 1.1)
                  type: string
                former_value:
                  title: Former Value
                  description: >-
                    The previous value of the changed property, in whatever type the
                    property is. (Deprecated in 1.1)
                  oneOf:
                    - type: string
                    - type: number
                    - type: integer
                    - type: array
                    - type: object
                  nullable: true
            deprecated: true
              #description: >-
              #  A free-text or semi-structured string describing the changes made in
               # each amendment can be provided in the amendment.description field.
               # To provide structured information on the fields that have changed,
              #  publishers should provide releases indicating the state of the
              #  contracting process before and after the amendment.
             # deprecatedVersion: '1.1'
        #patternProperties:
        #  '^(rationale_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
        
    Classification:
        title: Classification
        description: >-
          A classification consists of at least two parts: an identifier for the
          list (scheme) from which the classification is taken, and an identifier
          for the category from that list being applied. It is useful to also
          publish a text label and/or URI that users can draw on to interpret the
          classification.
        type: object
        properties:
          scheme:
            title: Scheme
            description: >-
              The scheme or codelist from which the classification code is taken.
              For line item classifications, this uses the open
              [itemClassificationScheme](https://standard.open-contracting.org/1.1/en/schema/codelists/#item-classification-scheme)
              codelist.
            type: string
            enum:
              - CPV
              - CPVS
              - GSIN
              - UNSPSC
              - CPC
              - OKDP
              - OKPD
              - CUCOP
            nullable: true
            #codelist: itemClassificationScheme.csv
            #openCodeList: true
          id:
            title: ID
            description: The classification code taken from the scheme.
            oneOf:
              - type: string
              - type: integer
            nullable: true
            #versionId: true
          description:
            title: Description
            description: A textual description or title for the classification code.
            type: string
            nullable: true
          uri:
            title: URI
            description: A URI to uniquely identify the classification code.
            type: string
            nullable: true
            format: uri
        pattern: '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$'
         #   type: string
         #   default: null
         
    Identifier:
        title: Identifier
        description: A unique identifier for a party (organization).
        type: object
        properties:
          scheme:
            title: Scheme
            description: >-
              Organization identifiers should be taken from an existing organization
              identifier list. The scheme field is used to indicate the list or
              register from which the identifier is taken. This value should be
              taken from the [Organization Identifier
              Scheme](https://standard.open-contracting.org/1.1/en/schema/codelists/#organization-identifier-scheme)
              codelist.
            type: string
            enum:
               -  GB-COH
               -  GB-MPR
               -  GB-NIC
               -  GB-CHC
               -  GB-SC
               -  GB-WALEDU
               -  GB-SCOTEDU
               -  GB-GOR
               -  GB-LANI
               -  GB-NHS
            example: GB-COH
            nullable: true
          id:
            title: ID
            description: The identifier of the organization in the selected scheme.
            oneOf:
              - type: string
              - type: integer
            example: abc12345
            nullable: true
            #versionId: true
          legalName:
            title: Legal Name
            description: The legally registered name of the organization.
            type: string
            example: IBM LLC
            nullable: true
          uri:
            title: URI
            description: >-
              A URI to identify the organization, such as those provided by [Open
              Corporates](http://www.opencorporates.com) or some other relevant URI
              provider. This is not for listing the website of the organization:
              that can be done through the URL field of the Organization contact
              point.
            type: string
            example: https://opencorporates.com/companies/us_fl/L16000133146
            nullable: true
            format: uri
        #patternProperties:
        #  '^(legalName_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
         #   type: string
         #   default: null
         
    Address:
        title: Address
        description: An address.
        type: object
        properties:
          streetAddress:
            title: Street address
            type: string
            nullable: true
            description: 'The street address. For example, 1600 Amphitheatre Pkwy.'
          locality:
            title: Locality
            type: string
            nullable: true
            description: 'The locality. For example, Mountain View.'
          region:
            title: Region
            type: string
            nullable: true
            description: 'The region. For example, CA.'
          postalCode:
            title: Postal code
            type: string
            nullable: true
            description: 'The postal code. For example, 94043.'
          countryName:
            title: Country name
            type: string
            nullable: true
            description: 'The country name. For example, United States.'
        #patternProperties:
         # '^(countryName_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
         #   type: string
         #   default: null
         
    ContactPoint:
        title: Contact point
        type: object
        description: >-
          A person, contact point or department to contact in relation to this
          contracting process.
        properties:
          name:
            title: Name
            type: string
            nullable: true
            description: >-
              The name of the contact person, department, or contact point, for
              correspondence relating to this contracting process.
          email:
            title: Email
            type: string
            nullable: true
            description: The e-mail address of the contact point/person.
          telephone:
            title: Telephone
            type: string
            nullable: true
            description: >-
              The telephone number of the contact point/person. This should include
              the international dialing code.
          faxNumber:
            title: Fax number
            type: string
            nullable: true
            description: >-
              The fax number of the contact point/person. This should include the
              international dialing code.
          url:
            title: URL
            type: string
            nullable: true
            description: A web address for the contact point/person.
            format: uri
       # patternProperties:
       #   '^(name_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
       #     type: string
       #     default: null
       
    Value:
        title: Value
        description: Financial values should be published with a currency attached.
        type: object
        properties:
          amount:
            title: Amount
            description: Amount as a number.
            type: number
            nullable: true
          currency:
            title: Currency
            description: >-
              The currency of the amount, from the closed
              [currency](https://standard.open-contracting.org/1.1/en/schema/codelists/#currency)
              codelist.
            allOf: 
              - $ref: '#/components/schemas/Currency'
            nullable: true
            #codelist: currency.csv
            #openCodeList: false

    Period:
        title: Period
        description: >-
          Key events during a contracting process may have a known start date, end
          date, duration, or maximum extent (the latest date the period can extend
          to). In some cases, not all of these fields will have known or relevant
          values.
        type: object
        properties:
          startDate:
            title: Start date
            description: >-
              The start date for the period. When known, a precise start date must
              be provided.
            type: string
            nullable: true
            format: date-time
          endDate:
            title: End date
            description: >-
              The end date for the period. When known, a precise end date must be
              provided.
            type: string
            nullable: true
            format: date-time
          maxExtentDate:
            description: >-
              The period cannot be extended beyond this date. This field can be used
              to express the maximum available date for extension or renewal of this
              period.
            format: date-time
            title: Maximum extent
            type: string
            nullable: true
          durationInDays:
            description: >-
              The maximum duration of this period in days. A user interface can
              collect or display this data in months or years as appropriate, and
              then convert it into days when storing this field. This field can be
              used when exact dates are not known. If a startDate and endDate are
              set, this field, if used, should be equal to the difference between
              startDate and endDate. Otherwise, if a startDate and maxExtentDate are
              set, this field, if used, should be equal to the difference between
              startDate and maxExtentDate.
            title: Duration (days)
            type: integer
            nullable: true
            
    RelatedProcess:
        description: >-
          A reference to a related contracting process: generally one preceding or
          following on from the current process.
        type: object
        title: Related Process
        properties:
          id:
            title: Relationship ID
            description: 'A local identifier for this relationship, unique within this array.'
            type: string
          relationship:
            items:
              type: string
              enum:
                - framework
                - planning
                - parent
                - prior
                - unsuccessfulProcess
                - subContract
                - replacementProcess
                - renewalProcess
            description: >-
              The type of relationship, using the open
              [relatedProcess](https://standard.open-contracting.org/1.1/en/schema/codelists/#related-process)
              codelist.
            title: Relationship
            type: array
            nullable: true
            #codelist: relatedProcess.csv
            #openCodeList: true
          title:
            description: >-
              The title of the related process, where referencing an open
              contracting process, this field should match the tender/title field in
              the related process.
            title: Related process title
            type: string
            nullable: true
          scheme:
            title: Scheme
            description: >-
              The identification scheme used by this cross-reference, using the open
              [relatedProcessScheme](https://standard.open-contracting.org/1.1/en/schema/codelists/#related-process-scheme)
              codelist.
            type: string
            enum:
              - ocid
            nullable: true
            #codelist: relatedProcessScheme.csv
            #openCodeList: true
          identifier:
            description: >-
              The identifier of the related process. If the scheme is 'ocid', this
              must be an Open Contracting ID (ocid).
            title: Identifier
            type: string
            nullable: true
          uri:
            format: uri
            description: >-
              A URI pointing to a machine-readable document, release or record
              package containing the identified related process.
            title: Related process URI
            type: string
            nullable: true
            
    Criteria:      
      title: Criteria
      description: 'A list of criteria on which either bidders or items will be judged, evaluated or assessed.'
      type: array
      items:
          $ref: '#/components/schemas/Criterion'
  
    Criterion:          
      title: Criterion
      description: 'A criterion on which either bidders or items will be judged, evaluated or assessed.'
      required:
        - id
      properties:
        id:
          title: Identifier
          description: 'The identifier for this criterion. It must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid). See the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details.'
          oneOf:
            - type: string
            - type: integer
          minLength: 1
        title:
          title: Title
          description: A title for this criterion.
          nullable: true
          type: string
          minLength: 1
        description:
          title: Description
          description: A description of this criterion. Structured information should be provided in its other fields.
          nullable: true
          type: string
          minLength: 1
        source:
          title: Source
          description: 'Source of response to the requirements specified in the criterion, for example responses may be submitted by tenderers or by an assessment committee at the procuringEntity.'
          nullable: true
          type: string
          #codelist: responseSource.csv
          #openCodelist: false
          enum:
            - tenderer
            - buyer
            - procuringEntity
            - null
        relatesTo:
          title: Related schema element
          description: >-
            'The schema element that the criterion judges, evaluates or assesses. For example criterion may be defined against items or against bidders.'
          
            * Tenderer - The criterion evaluates or assesses a tenderer
            * Item - The criterion evaluates or assesses an item
          nullable: true
          type: string
          #codelist: relatesTo.csv
          #openCodelist: false
          enum:
            - tenderer
            - item
            - null
        relatedItem:
          title: Related item
          description: Where relatesTo = "item" this field must be populated with the id of the item in this tender section which the criterion relates to. Where relatesTo <> "item" this field should be omitted.
          nullable: true
          type: string
          minLength: 1
        requirementGroups:
          title: Requirement groups
          description: A list of requirement groups for this Criterion. A criterion is satisfied by one or more requirement groups being met. A requirement group is met when all requirements in the group are satisfied.
          type: array
          items:
            $ref: '#/components/schemas/RequirementGroup'
          uniqueItems: true
          minItems: 1
      minProperties: 1
      
    RequirementGroup:
      type: object
      title: Requirement group
      description: A requirement group is a set of requirements that must be fulfilled together to validate a criterion.
      required:
        - id
      properties:
        id:
          title: Identifier
          description: 'The identifier for this requirement group. It must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid). See the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details.'
          type: string
          minLength: 1
        description:
          title: Description
          description: A description of this requirement group. Structured information should be provided in the requirements array.
          nullable: true
          type: string
          minLength: 1
        requirements:
          title: Requirements
          description: A list requirements which must all be satisfied for the requirement group to be met.
          type: array
          items:
            $ref: '#/components/schemas/Requirement'
          uniqueItems: true
          minItems: 1
      minProperties: 1
      
    Requirement:
      type: object
      title: Requirement
      description: 'An atomic requirement. Requirements can specify the expected value that the response has to contain, or a range of threshold values within which the response has to fit in. The requirement may apply to a certain period of time.'
      required:
        - id
      properties:
        id:
          title: Requirement identifier
          description: 'The identifier for this requirement. It must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid). See the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details.'
          type: string
          minLength: 1
        title:
          title: Requirement title
          description: The title of this atomic requirement.
          nullable: true
          type: string
          minLength: 1
        description:
          title: Requirement description
          description: A free text description for this atomic requirement.
          nullable: true
          type: string
          minLength: 1
        dataType:
          title: Requirement datatype
          description: The data type in which the requirement response must be provided.
          nullable: true
          type: string
          #codelist: dataType.csv
          #openCodelist: false
          enum:
            - string
            - date-time
            - number
            - integer
            - boolean
            - null
        pattern:
          title: Response validation pattern
          description: A regular expression against which validate the requirement response.
          nullable: true 
          type: string
          minLength: 1
        expectedValue:
          title: Expected value
          description: Used to state the requirement when the response must be particular value.
          nullable: true
          oneOf:
            - type: string
            - type: integer
            - type: number
            - type: boolean

          minLength: 1
        minValue:
          title: Minimum value
          description: Used to state the lower bound of the requirement when the response must be within a certain range.
          nullable: true
          oneOf:
            - type: integer
            - type: number
            
        maxValue:
          title: Maximum value
          description: Used to state the upper bound of the requirement when the response must be within a certain range.
          nullable: true
          oneOf:
            - type: integer
            - type: number
            
        period:
          title: Period
          description: 'Used to specify a particular period the requirement applies to, for example the bidder''s turnover in a given year.'
          allOf:
            - $ref: '#/components/schemas/Period'
      minProperties: 1
      
    RequirementResponses:
      title: Requirement responses
      description: A list of the detailed responses of this award to the requirements of the tender.
      type: array
      items:
          $ref: '#/components/schemas/RequirementResponse'
      uniqueItems: true
      minItems: 1
      
    RequirementResponse:
      type: object
      title: Requirement Response
      description: An assertion that responds to a single requirement. A requirement response provides the value for the requirement and may provide the period to which it applies.
      required:
        - id
        - requirement
      properties:
        id:
          title: Identifier
          description: 'The identifier for this requirement response. It must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid). See the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details.'
          type: string
          minLength: 1
        title:
          title: Title
          description: A title for this requirement response.
          nullable: true
          type: string
          minLength: 1
        description:
          title: Description
          description: A description of this requirement response. Structured information should be provided in its other fields.
          type: string
          minLength: 1
        value:
          title: Value
          description: The value of this requirement response. The value must be of the type defined in the requirement.dataType field.
          oneOf:
            - type: string
            - type: integer
            - type: number
            - type: boolean
          minLength: 1
        period:
          title: Period
          description: The period which the requirement response is applicable to.
          allOf:
            - $ref: '#/components/schemas/Period'
        requirement:
          title: Related requirement
          description: The id and title of the requirement which the response is applicable to.
          allOf:
            - $ref: '#/components/schemas/RequirementReference'
        relatedTenderer:
          title: Related tenderer
          description: Where this requirement response relates to a tenderer and is provided by the buyer or procuring entity this field should be used to reference the entry in the parties section for the tenderer the response relates to.
          allOf:
            - $ref: '#/components/schemas/OrganizationReference'
      minProperties: 1
      
    RequirementReference:
      type: object
      title: Requirement reference
      description: Used to cross reference a requirement.
      required:
        - id
      properties:
        id:
          title: Requirement ID
          description: The id of the requirement which the response is applicable to.
          type: string
          minLength: 1
        title:
          title: Requirement title
          description: The title of the requirement which the response is applicable to.
          nullable: true
          type: string
          minLength: 1
      minProperties: 1
      
    Bid:
      properties:
        requirementResponses:
          title: Requirement responses
          description: 'Questions sent to the procuring entity, and the answers given'
          allOf:
            - $ref: '#/components/schemas/RequirementResponses'
          uniqueItems: true
          minItems: 1
        relatedLots:
          title: Related lot(s)
          description: 'If this bid relates to one or more specific lots, provide the identifier(s) of the related lot(s) here.'
          nullable: true
          type: array
          items:
            type: string
          
    Enquiries:
      title: Enquiries
      description: 'Questions sent to the procuring entity, and the answers given'
      nullable: true      
      type: array
      items:
          $ref: '#/components/schemas/Enquiry'
      uniqueItems: true
      minItems: 1
      
      
    Enquiry:
        type: object
        title: Enquiry
        description: 'A question related to this contracting process, generally sent during the enquiry period.'
        properties:
          id:
            title: Identifier
            description: A unique identifier for the enquiry.
            nullable: true
            type: string
          date:
            title: Date
            description: The date the enquiry was received or processed.
            type: string
            nullable: true
            
            format: date-time
          author:
            title: Question author
            description: 'The identifier and name of the party asking this question. Questioners may be listed in the parties array with a role of ''enquirer''. Procurement policies vary on whether or not the identity of those asking questions should be disclosed, or at which stage this information may be disclosed. When the identity of the questioner cannot be disclosed leave the author section blank. Display systems should interpret this as an anonymous question.'
            allOf:
              - $ref: '#/components/schemas/OrganizationReference'
          title:
            title: Question title
            description: The subject line of the question.
            type: string
            nullable: true
          description:
            title: Description
            description: The body of the question.
            type: string
            nullable: true
          answer: 
            title: Answer
            description: 'The answer to this question, when available.'
            type: string
            nullable: true
          dateAnswered:
            title: Date answered
            description: The date the answer to the question was provided.
            type: string
            nullable: true
            format: date-time
          relatedItem:
            title: Related item
            description: 'If this question relates to a specific line-item, this field contains the line-item identifier.'
            type: string
            nullable: true
          relatedLot:
            title: Related lot
            description: 'Where lots are used, if this question relates to a specific lot, this field contains the lot identifier.'
            type: string
            nullable: true
          threadID:
            title: Thread identifier
            description: If this question and answer forms part of a discussion thread (e.g. the question is a follow up to a previous answer) an optional thread identifier can be used to associate together multiple enquiries.
            type: string
            nullable: true
 
            
    Lot:
      title: Lots
      description: A lot is a grouping of items within a tender that can be bid on or awarded together.
      type: object
      properties:
        id:
          title: Lot ID
          type: string
          description: 'A local identifier for this lot, such as a lot number. This is used in relatedLots references at the item, document and award level.'
        title:
          title: Title
          nullable: true
          type: string
          description: A title for this lot.
        description:
          title: Description
          description: A description of this lot.
          type: string
          nullable: true
        status:
          title: Lot Status
          description: The current status of the process related to this lot.
          nullable: true
          type: string
          #codelist: tenderStatus.csv
          #openCodelist: false
          enum:
            - planning
            - planned
            - active
            - cancelled
            - unsuccessful
            - complete
            - withdrawn
            - null
        value:
          title: Lot value
          allOf:
            - $ref: '#/components/schemas/Value'
          description: The maximum estimated value of this lot.
        contractPeriod:
          title: Contract period
          description: 'The period over which the contract is estimated or required to be active. If the lot does not specify explicit dates, the duration field may be used.'
          allOf:
            - $ref: '#/components/schemas/Period'
        selectionCriteria:
          title: Selection criteria
          description: Information about the conditions for participation in a lot.
          allOf:
            - $ref: '#/components/schemas/SelectionCriteria'
            
    LotGroup:
      title: Lot group
      description: 'Where the buyer reserves the right to combine lots, or wishes to specify the total value for a group of lots, a lot group is used to capture this information.'
      type: object
      properties:
        id:
          title: Lot group identifier
          type: string
          description: A local identifier for this group of lots.
        relatedLots:
          title: Related lot(s)
          description: A list of the identifiers of the lots that form this group. Lots may appear in more than one group.
          nullable: true
          type: array
          items:
            type: string
        optionToCombine:
          title: Option to combine
          description: The buyer reserves the right to combine the lots in this group when awarding a contract.
          type: boolean
          nullable: true
        maximumValue:
          title: Maximum value
          description: The maximum estimated value of the lots in this group. This may be lower than the sum total of lot values
          allOf:
           - $ref: '#/components/schemas/Value'
  
          
    SelectionCriteria:
      title: Selection criteria
      description: Information about conditions for participation.
      type: object
      properties:
        criteria:
          title: Selection criteria
          description: The selection criteria.
          type: array
          items:
            $ref: '#/components/schemas/SelectionCriterion'
            #wholeListMerge: true
          uniqueItems: true
          minItems: 1
        description:
            title: Description
            description: The description of the criteria used to select the economic operators who will be allowed to bid.
            type: string
            nullable: true
      minProperties: 1
      
    SelectionCriterion:
      title: Selection criterion
      description: Information about the selection criterion.
      type: object
      properties:
        type:
            title: Type
            description: The type of the criterion.
            nullable: true
            type: string
            enum:
              - technical
              - economic
              - suitability
              - other
              - null
            #codelist: selectionCriterionType.csv
            #openCodelist: false
        description:
            title: Description
            description: The description of the criterion.
            nullable: true
            type: string
            minLength: 1
        minimum:
            title: Minimum value or level
            description: The minimum value or level of compliance a candidate needs to meet in order to participate.
            type: string
            nullable: true
            minLength: 1
      minProperties: 1
  

      
    Timestamp:
      type: string
      format: date-time
      example: '2020-02-16T07:14:54.617Z'
      readOnly: true
      
      
    Email:
      type: string
      format: email
      example: support@crowncommercial.org.uk
      
          
    
    TerminationTypes:
      description: >-
        Ways to terminate a tender. There are several types-

          * cancelled
          * unsucessful
          * complete
          * withdrawn
      type: array
      items:
        $ref: '#/components/schemas/TerminationType'
      example: [
        "cancelled",
        "unsuccessful",
        "complete",
        "withdrawn"
        ]
        
    ProcurementMethods:
      description: >-
        Different Options for procurement. There are several types-

          * open
          * selective
          * limited
          * direct
      type: array
      items:
        $ref: '#/components/schemas/ProcurementMethod'
      example: [
        "open",
        "selective",
        "limited",
        "direct"
        ]
        



# Reusable Enums    

          
    TerminationType:
      title: RFx Termination Types
      description: >-
        Subset of the codes in [tenderStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#tender-status) codelist.
        This subset are those used to terminate an RFx.
      type: object
      properties:
        terminationType:
          type: string
          enum:
            - cancelled
            - unsuccessful
            - complete
            - withdrawn.
            
    ProcurementMethod:
      title: Procurement Methods
      description: >-
        A contracting process aims to fulfill the requirements identified at the planning stage. The procurement method is the procedure 
        used to purchase the relevant works, goods or services. The method codelist draws upon the definitions of open, selective and limited 
        provided by the WTO Government Procurement Agreement, and adds an additional ‘direct’ code for awards without competition..
      type: string
      enum:
        - open
        - selective
        - limited
        - direct
          

    
    ProcessStage:
      title: Contracting Process Stages
      description: >-
        There are several stages to a contracting process defined by
        [OCDS].(https://standard.open-contracting.org/1.1/en/getting_started/contracting_process/) - 
        * Planning
        * Initiation
        * Award
        * Contract
        * Implementation
        
        Not all contracting processes have all stages. For example, direct contracting might start with the award of a contract. However, there will still be information that can be disclosed about the budgets, specifications and selection process even in this case.
      type: string
      enum:
          - Planning
          - Initiation
          - Award
          - Contract
          - Implementation
      example: Planning
      
          
    TenderStatus:
          title: Tender status
          description: |-
            The current status of the tender, from the closed
            [tenderStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#tender-status)
            codelist.
          type: string
          #codelist: tenderStatus.csv
          #openCodelist: false
          enum:
            - planning
            - planned
            - active
            - cancelled
            - unsuccessful
            - complete
            - withdrawn
            
            
    AgreementLanguage:
      title: Language
        # Should Contracts contain option for other home languages??
          description: >-
              The language of the linked document using either two-letter
              [ISO639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes), or
              extended [BCP47 language
              tags](http://www.w3.org/International/articles/language-tags/). The
              use of lowercase two-letter codes from
              [ISO639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) is
              recommended unless there is a clear user need for distinguishing the
              language subtype. CCS agreements will only be written in UK languages and generally English.
          type: string
          # en=English, cy= Welsh, ga=Irish, gd=Scottish
          enum:
              - en
              - cy
              - ga
              - gd 
          example: 'en'
 


