components:
  schemas:
  
    OrderID:
      type: string
      description: The ID of the order within BaT
      example: R793138650
      readOnly: true
    
    BasketID:
      type: string
      description: The ID of the basket within BaT
      example: R793138650
      readOnly: true
    
    CatalogueID:
      type: number
      format: integer
      example: 1234
      readOnly: true
      
    CatalogueHistory:
      type: array
      items:
        $ref: '#/components/schemas/CatalogueUopdate'
      
    Catalogue:
      type: object
      description: Metadata about a Catalogue
      required:
        - id
#         - quantity
      properties: 
        id:  
          type: string
          readOnly: true
          format: uuid
          description: 'ID of the stock item'
          example: 222
        agreement:  
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/agreements/agreements-service.yaml#/components/schemas/AgreementSummary'
        supplier:  
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Organization'

    CatalogueUpdate:
      oneOf:
        - $ref: '#/components/schemas/FileUpdate'
        - $ref: '#/components/schemas/CatalogueRecordUpdate'
          
    CatalogueList:
      type: array
      items:
        $ref: '#/components/schemas/CatalogueID'
             
    FileUpdate:
      type: object
      description: Details of a file Upload
      properties: 
        date:  
          description: 'Time upload took place'
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Timestamp'
        url:
          type: string
          format: uri
          description: URI for the file. Should be a perma-link and can be used as a key for file uploaded
        name:
          type: string
          description: document name
        fileformat:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/FileFormat'

    CatalogueRecordUpdate:
      type: object
      description: Details of catalogue update
      properties: 
        date:  
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Timestamp'
        before:
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Item'
        after:
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Item'

    Payment:
      type: object
      description: Generic object to hold details of payment data through checkout
      properties:
        paymentDate:
          type: string
          format: date-time
          example: "2020-12-25T17:32:28Z"
        paymentMethod:
          type: string
          enum: [invoice,card]
          example: invoice
        paymentMethodDetails:
          oneOf:
            - $ref: '#/components/schemas/InvoicePayment'
            - $ref: '#/components/schemas/CardPayment'
          
    # More fields to go in here
    InvoicePayment:
      type: object
      description: Data related to an invoice Payment
      properties:
        paymentAmount:
          type: number
          example: 399.99
        paymentTerms:
          type: string
          description: payment terms e.g. days to pay
          example: 60 day payment          

    # More fields to go in here
    CardPayment:
      type: object
      description: Data related to an card Payment - to be PCI Compliant
      properties:
        paymentAmount:
          type: number
          example: 399.99

    # Probably more here - does OCDS have a price?
    Price:
      type: object
      description: Summary of prices. Total, product, delivery, VAT
      properties:
        totalPrice:
          type: number
          description: The total price covered by this object
          example: 10.99
        deliveryPrice:
          type: number
          description: The delivery price covered by this object
          example: 10.99
        tax:
          type: number
          description: The total price covered by this object
          example: 10.99
          
    ProductID:
      type: number
      format: integer
      example: 1234
      readOnly: true
        
    ItemID:
      type: number
      format: integer
      example: 1234
      readOnly: true

    ItemCatalogID:
      type: number
      description: The ID of the instance of the Item in the specific Catalog (where the Catalogue is Supplier specific)
      format: integer
      example: 1234
      readOnly: true

      
    Item:
      type: object
      description: Details of catalogue update
      properties:
        id:   
          allOf:
            - $ref: '#/components/schemas/ItemID'
        catalogue:  
          allOf:
            - $ref: '#/components/schemas/CatalogueID'
        summary:  
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Item'
        stock:
          allOf:
            - $ref: '#/components/schemas/StockList'
        
    ProductList:
      type: array
      description: A list of unique products within a catalogue. The total stock of that product within the catalogue is without regard to location. The breakdown is provided in the product stock list. 
      items:
        $ref: '#/components/schemas/Product'

    ShareScope:
      type: string
      description: The scope of the data to be returned/shared. Defaults to the user.
      enum: [user,organisation,buyergroup]
    
    StockItem:
      type: object
      description: Items of stock
      required:
        - id
        - quantity
      properties: 
        id:  
          type: string
          readOnly: true
          format: uuid
          description: 'ID of the stock item'
          example: 222
        product:  
          $ref: '#/components/schemas/ProductID'
        catalogue:  
          $ref: '#/components/schemas/CatalogueID'
        location:
          type: object
          description: location of the stock
          properties:
            address:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Address'
        qantitity:
          type: number
          format: int32
          description: 'Quantity of stock available'
          example: 222
        
    StockList:
      type: array
      items:
        $ref: '#/components/schemas/StockItem'

    OrderBase:
      type: object
      description: Basic object for a basket containing all data for the Active basket.
      properties:
        id:
          $ref: '#/components/schemas/OrderID'
        totalPrice:
          $ref: '#/components/schemas/Price'
        ownerUser: # Do we make these 2 IDs for summary and full data for detail?
          oneOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/ContactPoint'
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/UserID'
        ownerOrganization:
          oneOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Organization'
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/OrgID'
        lastUpdatedDate:
          type: string
          format: date-time
          example: "2020-12-25T17:32:28Z"
        deliveryAddresses:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAddress'
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'

    OrderBaseSummary:
      type: object
      description: Basic object for a basket containing all data for the Active basket.
      properties:
        id:
          $ref: '#/components/schemas/OrderID'
        totalPrice:
          $ref: '#/components/schemas/Price'
        ownerUserEmail: # Should this be name?
            type: string
            description: The email address of the user who created the order
            example: Joe.Smith@crowncommercial.gov.uk
        ownerOrganizationName:
            type: string
            description: The name of the Buyer Organisation
            example: Crown Commercial Service
        lastUpdatedDate:
          type: string
          format: date-time
          example: "2020-12-25T17:32:28Z"
        lineItemNumber:
          type: number
          format: integer
          description: The number of line items in the order

    LineItem:
      type: object
      properties:
        item:
          oneOf:
            - $ref: '#/components/schemas/ItemID'
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Item'
        itemDeliveryAddressID:
          type: number
          format: integer
          example: 1234
        itemPrice:
          $ref: '#/components/schemas/Price'
        quantity:
          type: number
          description: The number of the Item being purchased (for this delivery address)
          format: integer
          example: 5
        supplierItems:
          type: array
          items:
            $ref: '#/components/schemas/SupplierOrderItem'
            
    SupplierCatalogueItemList:
      type: array
      description: A list of items within a supplier catalogue.
      items:
        $ref: '#/components/schemas/SupplierCatalogueItem'

    SupplierOrderItem:
      type: object
      description: Supplier details for the line item
      properties:
        supplierOrganization:
          oneOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Organization'
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/OrgID'
        quantity:
          type: number
          format: integer
          description: The number of the product to be supplied by this supplier
          example: 3
        productCatalogID:
          # Supplier information about the Item.  Not aware of any but if there's some then this should have a detail object that can be returned
          $ref: '#/components/schemas/ItemCatalogID'
        supplierItemPrice:
          $ref: '#/components/schemas/Price'         
            
    DeliveryAddress:
      type: object
      properties:
        address:
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Address'
        deliveryNotes:
          type: string
          description: Notes supporting the delivery address
          example: Leave delivery with Security
        deliveryContact:
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/ContactPoint'
        deliveryAddressID:
          type: number
          format: integer
          example: 1234

    SupplierOrder:
      allOf:
        - $ref: '#/components/schemas/OrderBase'
      type: object
      properties:
        invoiceAddress:
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Address'
        payment:
          $ref: '#/components/schemas/Payment'
        purchaseOrderNumber:
          type: string
          description: Buyer purchase order number
          example: PO1234
        orderStatus:
          type: string
          description: The status of the order (through the checkout/sales process)
          enum: [created,addressesDefined,paymentDefined,issuedToSupplier,accepted,completed]
          readOnly: true
        