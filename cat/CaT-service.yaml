openapi: 3.0.0

info:
  title: Tenders API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.13
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing

paths:
# Start of end points for managing profiles

  /tenders/users/{user-id}:
    parameters:
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/UserParam'
    put:
      tags:
        - Profile Management
      description: Registers an existing Conclave user to use Tenders API or updates the existing record with the latest data in Conclave.
      operationId: app.registerUser

      responses:
        '200':
          description: Success (for object update).
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/RegisterUserResponse'
                  - type: object
                    properties:
                      userAction:
                        example: existed
            
        '201':
          description: Success (for object creation). Its information is available in the
            data field at the top level of the response body. The API URL where
            the object can be retrieved is also returned in the Location header of the response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/RegisterUserResponse'
                  - type: object
                    properties:
                      userAction:
                        example: created
        '400':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/400InvalidRequest'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        default:
          description: successful operation
      summary: Register user to use Tenders (Jaggaer)
      
    get:
      description: Get the user (including roles)
      tags:
        - Profile Management
      operationId: app.findUser
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '409':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/409Conflict'        
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
      security:
        - openID:
            - read
            - write
      summary: Check User registered to use Tenders API (Jaggaer)
      
  /tenders/orgs/{org-id}:
    parameters:
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/OrgParam'
    put:
      tags:
        - Profile Management
      description: Updates an existing Tenders API Org with Conclave organisation details (Conclave access only).
      operationId: app.updateOrg
      responses:
        '200':
          description: Success (for object update).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrgResponse'


        '400':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/400InvalidRequest'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        default:
          description: successful operation
      summary: Update org details in Tenders (Jaggaer)
      
      
# Start of end points for Salesforce to eSourcing Project 

  /tenders/projects/salesforce:
    post:
      tags:
        - eSourcing
        - Create Procurement Project       
      description: Creates a new CCS procurement case in the Jaggaer eSourcing platform.
      operationId: app.createProcurementCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesforceProjectTender'
      responses:
        '201':
          description: Success (for object creation). Its information is available in the
            data field at the top level of the response body. The API URL where
            the object can be retrieved is also returned in the Location header of the response.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DraftProcurementProject'
                  - $ref: '#/components/schemas/SalesforceProjectTender200Response'                
        '400':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/400InvalidRequest'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
        '504':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/504GatewayTimeout'
        default:
          description: successful operation
      summary: Create Project from an Salesforce data
   
  
  /tenders/projects/deltas:
    get:
      deprecated: true
      tags:
        - eSourcing  
      summary: "US3-6 - Update an ITT event's details (in Salesforce) when it has been published on the eSourcing platform to the invited suppliers."
      operationId: app.putstatus   
      parameters:
      - in: query
        name: "lastSuccessRun"
        schema:
          type: string
          format: date-time
        example: "dd/mm/yy:hh:mm:ss"
        required: true
        description: "Date and Time stamp of last successful run."
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Release'        
          description: "Accepted"
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'


# End of end points for Salesforce to eSourcing Project



  '/cat/account/{self}/tsandcs':
    parameters:
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SelfParam'

    get:
      description: Retrieve the terms and conditions required for CaT and if the user has signed up to them.
      tags:
        - Ts and Cs
      operationId: Ts and Cs
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/TsAndCs'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - openID:
            - read
            - write
      summary: Ts and Cs
      
  '/cat/organisations/{org-id}/teams':
    parameters:
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/OrgParam'

    get:
      description: Retrieve a list of CaT teams created by the organisation.
      tags:
        - Teams
      operationId: Org Teams
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamList'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      summary: List of organisations teams
      security:
        - OAuth2:
            - buyer
    post:
      description: Create a new Team.
      tags:
        - Teams
      operationId: Create Team
      requestBody:
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/Team'

      responses:
        '201':
            description: TeamID for the newly created Team
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/TeamId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Create a new team
      
  '/cat/organisations/{org-id}/teams/{team-id}':
    parameters:
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/TeamParam'


    delete:
      description: Delete the CaT team within the organisation.
      tags:
        - Teams
      operationId: Delete Team
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Delete team
      
  '/cat/organisations/{org-id}/teams/{team-id}/members':
    parameters:
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/TeamParam'


    get:
      description: Retrieve a list of members of a team..
      tags:
        - Teams
      operationId: Team Members
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberList'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: List of Team members
    
  '/cat/organisations/{org-id}/teams/{team-id}/members/{team-member-id}':
    parameters:
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/TeamParam'
      - $ref: '#/components/parameters/TeamMemberParam'

      
    put:
      description: Add a team member to a team.
      tags:
        - Teams
      operationId: Add Team Member
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMember'
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success'
        '201':
          description: Added the Team Member who didnt exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Add team member

    delete:
      description: Delete the CaT team within the organisation.
      tags:
        - Teams
      operationId: Delete Team Member
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberList'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Delete a team member from the team.
      
  '/cat/accounts/{self}/teams':
    parameters:
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SelfParam'


    get:
      description: Retrieve a list of CaT teams that the user is a member of.
      tags:
        - Teams
      operationId: Users Teams
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamList'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: List of users teams
      
      
  '/tenders/event-types':
    get:
      description: Retrieve a list of Event (RFx) Types we can choose from
      tags:
        - Base Data
      operationId: rfx Types
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventType'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: List Procurement Event types
      
  '/tenders/projects/defaultName/agreements/{agreement-id}/lots/{lot-id}':
    parameters:
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/AgreementParam'
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/LotParam'


    get:
      deprecated: true
      description: Retrieve a default name for a Procurement Case using a given agreement.
      tags:
        - Create Procurement Project
      operationId: Default Name
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultName'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get Default Name
      
      
  '/tenders/projects/GMTransfer':
    post:
      description: Create a new Team.
      tags:
        - Create Procurement Project
      operationId: CreateGMCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftProcurementProject'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Tranfer from Guided Match
      
  /tenders/projects/FMTransfer:
    post:
      deprecated: true
      description: Create Facilities Management procurement case.
      tags:
        - Create Procurement Project
      operationId: CreateFMCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftProcurementProject'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Transfer from Facilities Managment
      
  /tenders/projects/BaTTransfer:
    post:
      deprecated: true
      description: Create procurement case based on BaT data when it becomes apparent more suited to CaT.
      tags:
        - Create Procurement Project
      operationId: CreateBaTTransfer
      requestBody:
        content:
          application/json:
            schema:
               $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftProcurementProject'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Transfer from Buy a Thing
      
      
  /tenders/projects/agreements:
    post:
      description: Create a new procurement for the chosen Agreement.
      tags:
        - Create Procurement Project
      operationId: CreateAgreementCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgreementDetails'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftProcurementProject'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Create Project from an Agreement (SCC-440)
      
  /tenders/projects/{proc-id}/name:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
    put:
      deprecated: false
      description: Replace the name transferred or created for the procurement automatically with what the user wants.
      tags:
        - Create Procurement Project
      operationId: ConfirmProcurementProject
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: ProcurementProjectName
              properties:
                name:
                  type: string
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Confirm procurement project
      
        
  /tenders/projects:
    get:
      description: Lists the projects the user has access too within the filters imposed. Filters include active/archived, summary/OCDS, 
      tags:
        - Manage Procurement Project
      operationId: RettrieveProcurementProjects
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectPackageSummary'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Retrieve procurement projects that match criteria
      
      
  /tenders/projects/{proc-id}:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
    get:
      description: Confirm the details transfered or created for the agreement are what the user wants.
      tags:
        - Manage Procurement Project
      operationId: ProjectPackage
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectPackage'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Retrieve the OCDS Package for a given project
      
      
      
  /tenders/projects/{proc-id}/close/options:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'


    get:
      description: Get the options available to close a project.
      tags:
        - Manage Procurement Project
      operationId: ProcurementProjectCloseOptions
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTerminationType'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get options to close project  
      
  /tenders/projects/{proc-id}/users:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
    get:
      description: Get the users who can edit the project.
      tags:
        - Manage Procurement Project
      operationId: GetProjectUsers
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberList'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get project users

  /tenders/projects/{proc-id}/event-types:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
    get:
      description: Retrieve a list of Event (RFx) Types we can choose from
      tags:
        - Manage Procurement Project
      operationId: rfx Types applicable to project
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventType'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: List Procurement Event types applicable to project
      
  /tenders/projects/{proc-id}/users/{user-id}:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/UserParam'


    delete:
      description: Get the options available to close a project.
      tags:
        - Manage Procurement Project
      operationId: DeleteProjectUsers
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberList'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Remove the users access to the project
      
    put:
      description: Add project access for the user.
      tags:
        - Manage Procurement Project
      operationId: AddProjectUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamMember'
              
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberList'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Add a project user 
      
      
  /tenders/projects/{proc-id}/events/{event-id}/questions:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'


    get:
      description: Get the Needs required for this Event
      tags:
        - Define Procurement Event
      operationId: Get Event Questions
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Criterion'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get all Questions at all levels.
      
    
  /tenders/projects/{proc-id}/events/{event-id}/criteria:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'


    get:
      description: Get the Needs required for this Event
      tags:
        - Define Procurement Event
      operationId: Get Eval Criterion
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EvalCriteria'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get Event Evaluation Criteria
      
  /tenders/projects/{proc-id}/events/{event-id}/criteria/{criterion-id}/groups:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: '#/components/parameters/CriterionParam'


    get:
      description: Get the Needs required for this Event
      tags:
        - Define Procurement Event
      operationId: GetEvalCriterionGroup
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuestionGroup'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get Event Evaluation Criteria Groups
      
    post:
      description: Create a Group within this Evaluation Criteria
      tags:
        - Define Procurement Event
      operationId: CreateEvalCriterionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionGroup'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Create a question group
      
 
 
  /tenders/projects/{proc-id}/events/{event-id}/criteria/{criterion-id}/groups/{group-id}:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: '#/components/parameters/CriterionParam'
      - $ref: '#/components/parameters/GroupParam'

      
    put:
      description: Edit group details within an evaluation criteria
      tags:
        - Define Procurement Event
      operationId: EditEvalCriterionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionGroup'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Edit a Question Group
    
    delete:
      description: Delete a Group within this Eval
      tags:
        - Define Procurement Event
      operationId: DeleteEvalCriterionGroup
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuestionGroup'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Delete Question Group
      
  /tenders/projects/{proc-id}/events/{event-id}/criteria/{criterion-id}/groups/{group-id}/questions:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: '#/components/parameters/CriterionParam'
      - $ref: '#/components/parameters/GroupParam'


    get:
      description: Get the Needs required for this Event
      tags:
        - Define Procurement Event
      operationId: Get Eval Criterion Group Questions
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get questions in a Group
      
    post:
      description: Create a Question within this group. This only allowed where multi-answer is true for questions within the group.
      tags:
        - Define Procurement Event
      operationId: CreateEvalGroupQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Add a question
      
  /tenders/projects/{proc-id}/events/{event-id}/criteria/{criterion-id}/groups/{group-id}/questions/{question-id}:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: '#/components/parameters/CriterionParam'
      - $ref: '#/components/parameters/GroupParam'
      - $ref: '#/components/parameters/QuestionParam'


    get:
      description: Get the details of a question held within its structure
      tags:
        - Define Procurement Event
      operationId: GetEvalCriterionGroupQuestion
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get question details
      
    put:
      description: Edit Question details within its structure
      tags:
        - Define Procurement Event
      operationId: EditEvalCriterionGroupQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Edit a Question details
      
    delete:
      description: Delete a question. This only allowed where multi-answer is true for questions within the group.
      tags:
        - Define Procurement Event
      operationId: DeleteEvalCriterionGroupQuestion
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Delete a Question
      
      
  /tenders/projects/{proc-id}/events/{event-id}/needs/{question-id}/forms:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: '#/components/parameters/NeedParam'


    get:
      deprecated: true
      description: Get form data for this need.
      tags:
        - Define Procurement Event
      operationId: HLNeedForm
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Criterion'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get HL Need forms
      
    put:
      deprecated: true
      description: Updates form data for a High Level Need.
      tags:
        - Define Procurement Event
      operationId: updateHLNeedForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Requirement'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Confirm procurement case
      
  /tenders/projects/{proc-id}/events/{event-id}/needs/{question-id}/documents:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: '#/components/parameters/NeedParam'


    get:
      deprecated: true
      description: Get documents associated with the need for a given event in a Procurement Project.
      tags:
        - Define Procurement Event
      operationId: HLNeedDocument
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Document'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get Default Name
      
    put:
      deprecated: true
      description: Update Document for a High Level Need for the project.
      tags:
        - Define Procurement Event
      operationId: updateHLNeedDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Document'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Update HL Need document
      
      
  /tenders/projects/{proc-id}/close:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'


    put:
      description: Close the Procurement Project with an option allowed.
      tags:
        - Manage Procurement Project
      operationId: ProcurementProjectClose
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Close procurement project
        
      
      
  /tenders/projects/{proc-id}/status:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
    get:
      description: Get Events status's for this Project (Is this the same as get RFx's?)
      tags:
        - Manage Procurement Project
      operationId: RFXStatus
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/ProcessStage'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get get Event statuses on Procurement Project
      

  /tenders/projects/{proc-id}/events:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
    get:
      description: Get Event's for this Project. In OCDS this is the related cases of Type
      tags:
        - Manage Procurement Project
      operationId: GetRFXs
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventSummary'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get Event's for the Procurement Project
            
      
    post:
      description: Creates a new Event for the Procurement Project.
      tags:
        - Manage Procurement Project
      operationId: createCaseRFx
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEvent'
                          
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSummary'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Create a Procurement Event
      
  /tenders/projects/{proc-id}/events/{event-id}/name:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
    put:
      deprecated: true
      description: Replace the name created for the event automatically with what the user wants.
      tags:
        - Manage Procurement Project
      operationId: updateRFxName
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: ProcurementEventName
              properties:
                name:
                  type: string
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Update Procurement Event name
      
      
  /tenders/projects/{proc-id}/events/{event-id}/needs:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
    get:
      deprecated: true
      description: Get the needs required for the Event for this Project
      tags:
        - Define Procurement Event
      operationId: needs
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Criterion'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get Event Needs
      
      
  /tenders/projects/{proc-id}/events/{event-id}/Needs/{question-id}/documents:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: '#/components/parameters/NeedParam'


    get:
      deprecated: true
      description: Get documents associated with the need for a given event in a Procurement Project.
      tags:
        - Define Procurement Event
      operationId: NeedDocument
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Document'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get Default Name
      
    put:
      deprecated: true
      description: Creates a new RFx for the case.
      tags:
        - Define Procurement Event
      operationId: updateNeedDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Document'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Confirm procurement case
      
  /tenders/projects/{proc-id}/events/{event-id}/suppliers:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'

    get:
      description: List all suppliers on an event
      tags:
        - Define Procurement Event
      operationId: Suppliers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/OrganizationReference'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: List suppliers on an event

    post:
      description: Add a supplier to an event
      tags:
        - Define Procurement Event
      operationId: addSupplier
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/OrganizationReference'
      responses:
        '201':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/OrganizationReference'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Add a supplier to an event
      
  /tenders/projects/{proc-id}/events/{event-id}/suppliers/{supplier-id}:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SupplierParam'


    delete:
      description: Remove a supplier from an event
      tags:
        - Define Procurement Event
      operationId: removeSuppliers
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Remove a supplier from an event
      

  /tenders/projects/{proc-id}/events/{event-id}:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'


    get:
      description: Gets Summary Data for RFx
      tags:
        - Define Procurement Event
      operationId: RFxSummary
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get RFx Summary
      
    put:
      description: Update an existing procurement event. Only those event attributes defined in the `UpdateEvent` schema can be updated. If an invalid value is provided for an attribute, then no updates will be applied and a validation error message will be returned. Once eventType has been changed from 'TBD' to a valid value, it cannot then be updated again.
      tags:
        - Manage Procurement Project
      operationId: updateCaseRFx
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEvent'
                          
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSummary'
        '400':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/400InvalidRequest'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Update a Procurement Event
      
  /tenders/projects/{proc-id}/events/{event-id}/documents:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'

    get:
      description: Get summary information of documents attached to an event
      tags:
        - Define Procurement Event
      operationId: getDocuments
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentSummary'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get documents attached to an event
      
    put:
      description: Add/update a document attached to an event
      tags:
        - Define Procurement Event
      operationId: updateDocument
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: binary
                  description: The document file content
                description:
                  type: string
                  description: Description of document
                audience:
                  $ref: '#/components/schemas/DocumentAudienceType'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSummary'
        '400':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/400InvalidRequest'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Add/update a document attached to an event
      
  /tenders/projects/{proc-id}/events/{event-id}/documents/{document-id}:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: '#/components/parameters/DocumentParam'

    get:
      description: Download a document attached to an event
      tags:
        - Define Procurement Event
      operationId: getDocument
      responses:
        '200':
          description: ok
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            application/msword:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
                format: binary
            application/vnd.oasis.opendocument.spreadsheet:
              schema:
                type: string
                format: binary
            application/vnd.oasis.opendocument.text:
              schema:
                type: string
                format: binary
            application/vnd.ms-powerpoint:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                type: string
                format: binary
            application/rtf:
              schema:
                type: string
                format: binary
            application/vnd.ms-excel:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
                format: binary
            application/zip:
              schema:
                type: string
                format: binary
            application/vnd.google-earth.kml+xml application/vnd.google-earth.kmz:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            text/csv:
              schema:
                type: string
                format: binary
            text/plain:
              schema:
                type: string
                format: binary
            
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Download a document attached to an event
      
  /tenders/projects/{proc-id}/events/{event-id}/publish/options:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'

    get:
      description: Get the options for publishing an event to the market
      tags:
        - Manage Procurement Project
      operationId: GoToMarketOptions
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_CodeLists.yaml#/components/schemas/ProcurementMethod'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get Go to market options for an event
      
  /tenders/projects/{proc-id}/events/{event-id}/publish:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'


    put:
      description: Publish the Event to the market.
      tags:
        - Manage Procurement Project
      operationId: GotoMarket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishDates'
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Go to market for an event
      
  /tenders/projects/{proc-id}/events/{event-id}/publish/extend:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'

    put:
      description: Extend the end date for responses to the Event.
      tags:
        - Manage Procurement Project
      operationId: extendRFx
      requestBody:
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/ExtendCriteria'
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Extend the event
      
  /tenders/projects/{proc-id}/events/{event-id}/status:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'


    get:
      description: Gets the status of a an event within a process.
      tags:
        - Manage Procurement Project
      operationId: RFxStatus
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/ProcessStage'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get Event status
      
  /tenders/projects/{proc-id}/events/{event-id}/responses:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'


    get:
      description: Get responses from all suppliers
      tags:
        - View Responses
      operationId: allResponses
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseSummary'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get all responses to an RFx
      
  /tenders/projects/{proc-id}/events/{event-id}/responses/{supplier-id}:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SupplierParam'


    get:
      description: Get responses from a supplier
      tags:
        - View Responses
      operationId: SupplierResponses
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/RequirementResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get responses from a supplier to an RFx
  
  
  /tenders/projects/{proc-id}/events/{event-id}/responses/{supplier-id}/needs:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SupplierParam'


    get:
      description: Get a list of HL Needs within the response for the RFx within the Procurement event. (May only ever be one in List). Indicates which have mandatory details complete. Offline will just verify file exists)
      tags:
        - View Responses
      operationId: HLNeedsResponse
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/RequirementResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get responses to a need
      
  /tenders/projects/{proc-id}/events/{event-id}/responses/{supplier-id}/needs/{question-id}/forms:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SupplierParam'
      - $ref: '#/components/parameters/NeedParam'


    get:
      description: 'Gets the response data held within the needs form specified (May be blank, pre-populated or contain data previously entered)'
      tags:
        - View Responses
      operationId: HLNeedsFormResponse
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/RequirementResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get response details
    put:
      description: Updates Suppliers response to High Level needs fields
      tags:
        - Supplier Responds
      operationId: updateHLNeedFormResponse
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Update form response
      
  /tenders/projects/{proc-id}/events/{event-id}/responses/{supplier-id}/needs/{question-id}/documents:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SupplierParam'
      - $ref: '#/components/parameters/NeedParam'


    get:
      description: Gets a file that can be updated off line and then uploaded when complete. (Should this always be blank or only the first time?)
      tags:
        - View Responses
      operationId: HLNeedsDocumentResponse
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Document'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get response details
    post:
      description: Replaces the response file stored against this need.
      tags:
        - Supplier Responds
      operationId: updateHLNeedDocumentResponse
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Document'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Update document response
  /tenders/projects/{proc-id}/Events/{event-id}/responses/suppliers/{supplier-id}/complete:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SupplierParam'


    post:
      description: Indicates that the Supplier is happy for the response to go to the Buyer
      tags:
        - Supplier Responds
      operationId: supplierResponseComplete
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Supplier Complete
      
  /tenders/projects/{proc-id}/events/{event-id}/messages:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'

    get:
      description: 'Gets a list of messages for the user relating to this event'
      tags:
        - Messaging
      operationId: listMessages
      parameters:
      - $ref: '#/components/parameters/MessageDirectionParam'
      - $ref: '#/components/parameters/MessageSortParam'
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageSummary'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Request messages for an event
    post:
      description: Create a new message.
      tags:
        - Messaging
      operationId: createMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Create a message for an event
      
  /tenders/projects/{proc-id}/events/{event-id}/messages/{message-id}:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: '#/components/parameters/MessageParam'
    get:
      description: 'Gets a message for the user relating to this event'
      tags:
        - Messaging
      operationId: MessageDetails
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Request a message for an event
      
  /tenders/projects/{proc-id}/events/{event-id}/messages/{message-id}/attachments:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: '#/components/parameters/MessageParam'
    post:
      description: Create a new attachment for a message.
      tags:
        - Messaging
      operationId: createAttachment
      requestBody:
        content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            application/msword:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
                format: binary
            application/vnd.oasis.opendocument.spreadsheet:
              schema:
                type: string
                format: binary
            application/vnd.oasis.opendocument.text:
              schema:
                type: string
                format: binary
            application/vnd.ms-powerpoint:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                type: string
                format: binary
            application/rtf:
              schema:
                type: string
                format: binary
            application/vnd.ms-excel:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
                format: binary
            application/zip:
              schema:
                type: string
                format: binary
            application/vnd.google-earth.kml+xml application/vnd.google-earth.kmz:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            text/csv:
              schema:
                type: string
                format: binary
            text/plain:
              schema:
                type: string
                format: binary
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Create an attachment for message
      
  /tenders/projects/{proc-id}/events/{event-id}/messages/{message-id}/attachments/{document-id}:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: '#/components/parameters/MessageParam'
      - $ref: '#/components/parameters/DocumentParam'
    get:
      description: 'Gets a message attachment'
      tags:
        - Messaging
      operationId: retrieveAttachement
      responses:
        '200':
          description: ok
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            application/msword:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
                format: binary
            application/vnd.oasis.opendocument.spreadsheet:
              schema:
                type: string
                format: binary
            application/vnd.oasis.opendocument.text:
              schema:
                type: string
                format: binary
            application/vnd.ms-powerpoint:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                type: string
                format: binary
            application/rtf:
              schema:
                type: string
                format: binary
            application/vnd.ms-excel:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
                format: binary
            application/zip:
              schema:
                type: string
                format: binary
            application/vnd.google-earth.kml+xml application/vnd.google-earth.kmz:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            text/csv:
              schema:
                type: string
                format: binary
            text/plain:
              schema:
                type: string
                format: binary
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Download an attachment for the message.
      
    delete:
      description: Remove an attachment from an message
      tags:
        - Messaging
      operationId: removeAttachment
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success'

        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      
  /tenders/projects/{proc-id}/events/{event-id}/q-and-a:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
    get:
      description: 'Retrieve all the Question and Answer items created for an event'
      tags:
        - Q&A
      operationId: retrieveQ&A
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QandA'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
            - supplier
      summary: List all the Q&A for an event
      
    post:
      description: Create a new Question and Answer item for an event.
      tags:
        - Q&A
      operationId: createQ&A
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QandA'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Create Q&A item for an event
      
  /tenders/projects/{proc-id}/events/{event-id}/q-and-a/{q&a-id}:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: '#/components/parameters/QandAParam'
    put:
      description: Edit a Question and Answer item
      tags:
        - Q&A
      operationId: editQ&A
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QandA'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Edit existing Q&A event
      
  /tenders/projects/{proc-id}/events/{event-id}/responses/export:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'

    get:
      description: Export all responses for all suppliers on an RFx
      tags:
        - View Responses
      operationId: exportAllResponses
      responses:
        '200':
          description: ok
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            application/msword:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
                format: binary
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Export all responses

  /tenders/projects/{proc-id}/events/{event-id}/scores:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'


    get:
      description: Get scores for all suppliers on an RFx
      tags:
        - Scoring
      operationId: allScores
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '400':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/400InvalidRequest'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get all scores for an RFx
  /tenders/projects/{proc-id}/events/{event-id}/scores/suppliers/{supplier-id}/':
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SupplierParam'


    put:
      description: Updates a suppliers score for an RFx
      tags:
        - Scoring
      operationId: SupplierScore
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Update supplier score
      
  /tenders/events:
    get:
      description: |
        Gets Events that have not been responded to
        * Procurements Events Issued (Supplier)
        * Responses to Procurement events (Buyer)
        * Procurement Events Closed (Buyer/Supplier)
        * Procurement Events Terminated (Supplier)
        * Request for further Information (Supplier)
        * Response to further information (Buyer)
        * Awards (Supplier)
        * Procurement Cases Terminated (Supplier)
        * Contract Signature (Buyer/Supplier) 
      tags:
        - Notification
      operationId: events
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Get all scores for an RFx
      

  /tenders/projects/{proc-id}/events/{event-id}/termination/options:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
      - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Params.yaml#/components/parameters/SupplierParam'


    get:
      description: Respond to a Request for further information
      tags:
        - Manage Procurement Project
      operationId: terminateOptions
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminationTypes'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Request options for termination
      
  /tenders/projects/{proc-id}/events/{event-id}/termination:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'


    put:
      description: Terminate the RFx
      tags:
        - Manage Procurement Project
        - eSourcing
      operationId: terminate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminationType'
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'

      security:
        - OAuth2:
            - buyer
      summary: Terminate RFx
      
  /tenders/projects/{proc-id}/events/{event-id}/awards/:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'


    put:
      description: Awards the contract to a supplier. RFx must be of type RFP
      tags:
        - Manage Procurement Project
      operationId: award
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Award'
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - buyer
      summary: Award Procurement
      
  /tenders/projects/{proc-id}/events/{event-id}/signed/:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'


    put:
      description: Indicate the contract has been signed.
      tags:
        - Manage Procurement Project
      operationId: signed
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Contract'
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/200Success'
        '401':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/401Unauthorized'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '429':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/429TooManyRequests'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
        '502':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/502BadGateway'
      security:
        - OAuth2:
            - write
        - openID:
            - write
      summary: Sign Procurement
components:

  parameters:
    
    TeamParam:
      name: team-id
      in: path
      required: true
      description: Team ID
      schema:
        $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        
    TeamMemberParam:
      name: team-member-id
      in: path
      required: true
      description: Team member ID
      schema:
        $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
   
        
    GMParam:
      name: guided-match-history-id
      in: query
      required: true
      description: Guided Match History ID
      schema:
        $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        
    FMParam:
      name: fm-id
      in: query
      required: true
      description: Facilities Management Transfer ID
      schema:
        $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        
    ProcurementParam:
      name: proc-id
      in: path
      required: true
      description: Procurement Project ID
      schema:
        $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/ProcurementProjectId'
        
    EventParam:
      name: event-id
      in: path
      required: true
      description: Procurement Event ID
      schema:
        $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/ProcurementEventId' 

    QandAParam:
      name: q&a-id
      in: path
      required: true
      description: Question and Answer item ID
      schema:
        $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        
    MessageParam:
      name: message-id
      in: path
      required: true
      description: Message ID
      schema:
        $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
    
    MessageSortParam:
      name: sort
      in: query
      required: true
      description: Sort Field
      schema:
        $ref: '#/components/schemas/MessageSort'
    
    PageParam:
      name: page
      in: query
      required: false
      description: Page Number
      schema:
        $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
    
    PageSizeParam:
      name: page-size
      in: query
      required: false
      description: Number of items per page
      schema:
        $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        
    MessageDirectionParam:
      name: message-direction
      in: query
      required: false
      description: Sent vs Received
      schema:
        $ref: '#/components/schemas/MessageDirection'
        
    CriterionParam:
      name: criterion-id
      in: path
      required: true
      description: Criterion ID
      schema:
        type: string
        example: 1
        readOnly: true
        
    GroupParam:
      name: group-id
      in: path
      required: true
      description: Question Group ID
      schema:
        type: string
        example: 1
        readOnly: true
        
    QuestionParam:
      name: question-id
      in: path
      required: true
      description: Question ID
      schema:
        type: string
        example: 1
        readOnly: true
    
    NeedParam:
      name: question-id
      in: path
      required: true
      description: Procurement Need ID
      schema:
        $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
        
    DocumentParam:
      name: document-id
      in: path
      required: true
      description: Document ID
      schema:
        type: string
        example: YnV5ZXJANzYxMzg0OUBjYXQtamFnZ2Flci1maWxlLXRlc3QtMi50eHQ=
        readOnly: true


  schemas:
  
    SalesforceProjectTender:
      type: object
      required:
        - subject
        - procurementReference
        - rfx
      properties:
        tenderReferenceCode:
          type: string
          example: project_1078
        subject:
          type: string
          example: Project for Provision of Face Masks
        procurementReference:
          type: string
          example: '324233324'
        rfx:
          $ref: '#/components/schemas/SalesforceRfx'
          
    SalesforceRfx:
      title: Rfx
      type: object
      required:
        - shortDescription
        - value
        - publishDate
        - closeDate
        - procurementRoute
      properties:
        shortDescription:
          type: string
          example: RFQ for Provision of PPE
        rfiFlag:
          type: string
          example: "1"
        value:
          type: string
          example: 0
        templateReferenceCode:
          type: string
          example: itt_543
        qualEnvStatus:
          type: string
          example: 0
        techEnvStatus:
          type: string
          example: 1
        commEnvStatus:
          type: string
          example: 0
        publishDate:
          type: string
          example: '2021-01-28T12:00:00.000+00:00'
        closeDate:
          type: string
          example: '2021-02-27T12:00:00.000+00:00'
        visibilityEGComments:
          type: string
          example: 1
        rankingStrategy:
          type: string
          example: BEST_TECHNICAL_SCORE
        procurementRoute:
          type: string
          example: Call Off (Competition)
        frameworkName:
          type: string
          example: TT3242
        frameworkLotNumber:
          type: string
          example: Lot 1
        frameworkRMNumber:
          type: string
          example: 12345
          
    SalesforceProjectTender200Response:
      type: object
      properties:
        tenderReferenceCode:
          type: string
          description: project code (project id)
          example: project_1063
        rfxReferenceCode:
          type: string
          description: the itt code (tender id)
          example: itt_586   
                 
    TeamId:
      type: number
      format: integer
      example: 1234
      readOnly: true
      

    TeamMemberId:
      type: number
      format: integer
      example: 1234

    TeamList:
      type: array
      items:
        $ref: '#/components/schemas/Team'
        
    Team:
      type: object
      description: Team who work together on bids or procurements
      required:
        - name
      properties: 
        id:
          description: 'Unique Identifier for the team.'
          readOnly: true
          allOf: 
            - $ref: '#/components/schemas/TeamId'
        organisation:  
          description: Organisation that has defined the team
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/OrgId'
        name:  
          type: string
          default: UAH
          description: Name given to the team within the organisation
          example: Procurment Team A
          
    TeamMemberList:
      type: array
      items:
        $ref: '#/components/schemas/TeamMember'
        
    TeamMember:
      type: object
      description: Team who work together on bids or procurements
      required:
        - id
        - name
      properties: 
        OCDS:
          allOf:
            - $ref: '#/components/schemas/TeamMemberOCDS'
        nonOCDS:
          allOf:
            - $ref: '#/components/schemas/TeamMemberNonOCDS'
        
    TeamMemberOCDS:
      type: object
      description: OCDS compliant user details
      required:
        - id
        - name
      properties: 
        id:  
          type: string
          readOnly: true
          description: 'ID of the team member'
          example: 222
        contact:
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/ContactPoint'
            - type: object
              properties:
                name:
                  description: Name of the team member
                email:
                  description: eMail address of the team member
                telephone:
                  description: Telephone number of the team member
                faxNumber:
                  description: Fax number of the team member
                url:
                  description: URL of the team member
                  
    TeamMemberNonOCDS:
      type: object
      description: Non OCDS compliant user details
      required:
        - id
        - name
      properties: 
        teamMember:  
          type: boolean
          description: 'Is the user a Team Member on the project'
          example: true
        emailRecipient:  
          type: boolean
          description: 'Is the user an EMail recipient of the current event on the project'
          example: true
        projectOwner:  
          type: boolean
          description: 'Is the user the project owner'
          example: false
          
    UpdateTeamMember:
      type: object
      properties:
          userType:
            $ref: '#/components/schemas/UpdateTeamMemberType'
              
    UpdateTeamMemberType:
      description: 
        Defines which new permission should be granted to a project Team Member
      type: string
      enum:
        - EMAIL_RECIPIENT
        - TEAM_MEMBER
        - PROJECT_OWNER
              
    # See openapi-generator issue: https://github.com/OpenAPITools/openapi-generator/issues/7342
    # Hence why we are repeating the validation attributes here, until a fix is issued
    AgreementDetails:
      type: object
      required:
        - agreementId
        - lotId
      properties:
        agreementId:
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/AgreementId'
          readOnly: false
          pattern: 'RM[0-9]{4}([.][0-9]{1,2})?'
        lotId:
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/LotId'
          readOnly: false
          pattern: '([a-zA-Z0-9]+[ ]*)+'
          maxLength: 20
          
    ExtendCriteria:
      description: 
        Data required to extend the period for tender submissions. It must not exceed the orginal extention limit defined on a tender.
      type: object
      properties:
        endDate:
            title: End date
            description: 
              The new end date for the period. 
            type: string
            nullable: true
            format: date-time
            
            
    ProjectPackageSummary:
      title: Project Package Summary
      description: 
        The project summary contains (non-OCDS) summary information about the project. Following the URI will provide the project details in OIDC format.
      type: object
      properties:
        uri:
          title: Package identifier
          description: The URI of this package that identifies it uniquely in the world.
          type: string
          example: 'https://www.crowncommercial.gov.uk/tenders/projects/{proc-id}'
          format: uri
        publishedDate:
          title: Published date (last updated)
          description: 'The date that this package was published. If this package is generated ''on demand'', this date should reflect the date of the last change to the underlying contents of the package.'
          type: string
          format: date-time
          example: 017-10-12T10:08:54-04:00
        projectId:
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/ProcurementProjectId'
        projectName:
          example: RM6118-Lot 2-Crown Commercial Services
          type: string
        supportId:
          example: project_1055
          type: string
        activeEvent:
          $ref: '#/components/schemas/EventSummary'

           
              
    ProjectPackage:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/RecordPackage'
        - type: object
          properties:
            uri:
              title: Package identifier
              description: The URI of this package that identifies it uniquely in the world.
              type: string
              example: 'https://www.crowncommercial.gov.uk/tenders/projects/{proc-id}'
              format: uri
      title: Project Package
      description: The record package contains a list of Event records within a single procurement project along with some publishing metadata. The Event Records pull together all the releases of a procurement under a single Open Contracting ID and compile them into the latest version of the information along with the history of any data changes.
    
              
              
    
    TerminationTypes:
      title: Termination Options
      description: |
        Ways to terminate a tender. There are several types-

          * cancelled
          * unsucessful
          * complete
          * withdrawn
      type: array
      items:
        $ref: '#/components/schemas/TerminationType'
      example: [
        "cancelled",
        "unsuccessful",
        "complete",
        "withdrawn"
        ]
        
          
    TerminationType:
      # Remove comments to get full codelist.
      #allOf:
      #  - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/TenderStatus'
      title: Termination Type
      description: 
        Subset of the codes in [tenderStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#tender-status) codelist.
        This subset are those used to terminate an RFx.
      type: string
      enum:
        - cancelled
        - unsuccessful
        - complete
        - withdrawn
      example: "cancelled"
        
    DefineEventType:
      description: |
        Define event type for POST/PUT (writes).  
        Generic term for an event put out to the market. There are several types-

          * EOI - Expression of Interest
          * RFI - Request for Information
          * FCA - Further Competition Assessment
          * DAA - Direct Award Assessment
          * DA  - Direct Award
          * FC  - Further Competition
      type: string
      enum:
          - EOI
          - RFI
          - CA
          - DA
          - FC
          
    ViewEventType:
      description: |
        Event type for GETs (read only).
        Generic term for an event put out to the market. There are several types-

          * EOI - Expression of Interest
          * RFI - Request for Information
          * FCA - Further Competition Assessment
          * DAA - Direct Award Assessment
          * DA  - Direct Award
          * FC  - Further Competition
          * TBD - To Be Determined
          
        Note - TBD is not a real event type and must be defined before going to market.
      type: string
      enum:
          - EOI
          - RFI
          - CA
          - DA
          - FC
          - TBD
    
    EventType:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/DefineEventType'
        description:
          type: string
          description: Description of the Event Type
        preMarketActivity:
          type: boolean
          description: If set to 'true' indicates the Event Type is a pre-market activity
        
#    EventStatus:
#      description: 
#        Generic term for an event put out to the market. Each is an optional procurement step in the procurement process. This call shows the current status of each in the procurement process.
#      allOf:
#        - $ref: '#/components/schemas/EventSummary'
#        - type: object
#          properties:
#            projectId: 
#              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/ProcurementProjectId'
#              #description: project_1055 mapped to CaT (project ID) 00002468
          
    NonOCDSEventSummary:
      description: 
        Generic term for an event put out to the market. Each is an optional procurement step in the procurement process. This call shows the current status of each in the procurement process.
      type: object
      properties:   
        eventSupportId:
          type: string
          example: itt_2468
          description: ID to allow support staff to support this event. 
        eventType:
          $ref: '#/components/schemas/ViewEventType'
          

    EventSummary:
      allOf:
        - type: object
          description: 
            Generic term for an event put out to the market. Each is an optional procurement step in the procurement process. This call shows the current status of each in the procurement process.
          properties:   
            id:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/ProcurementEventId'
                #type: string
                #example: 00013579
                #description: itt_2468 mapped to CaT (eventId) 00013579
            title:
              title: Tender title
              description: 
                A title for this tender. This will often be used by applications as a
                headline to attract interest, and to help analysts understand the
                nature of this procurement.
              type: string
              nullable: true
            eventStage:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/ReleaseTag'
            status:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/TenderStatus'
        - $ref: '#/components/schemas/NonOCDSEventSummary'

    EventDetailNonOCDS:
      allOf:
        - $ref: '#/components/schemas/NonOCDSEventSummary'
        - type: object
          properties:
            responseVisibility:
              type: string
              example: Blind
              description: When responses will be made visible to the buyer
              enum:
                - blind
                - visible
            # May be required post MDP
            #groupBids:
            #  type: boolean
            #  default: false
            #  description: Can a group of organisation cooperate to provide a single bid
            responseViewing:
              type: string
              example: sealed-parallel
              description: When responses will be made visible to the buyer
              enum:
                - sealed-parallel
                - sealed-sequential
                - unsealed
            # covered by Tender.awardCriteria
            #responseRanking:
            #  type: string
            #  example: Best Tech Score
            #  description: Whats this? (Sounds like Award Criteria - Price Only, Cost Only, Qualty Only, Rated Criteria)
            #  enum:
            #    - Best Tech Score
            #    - No ranking
            scoringMethod:
              type: string
              example: Percentage Weight
              description: Method used to score responses
              enum:
                - Percentage Weight
            techWeight:
              type: integer
              example: Percentage Weight
              description: Highest score that can be awarded, lowest being zero.
            weightVisible:
              type: boolean
              description: Should the weighting be visible to suppliers.
            assessmentSupplierTarget:
              $ref: '#/components/schemas/AssessmentSupplierTarget'
            eventCreated:
              type: string
              format: date-time
              description: Date/time - Event Created
            buyerQuestions:
              type: array
              items:
                $ref: '#/components/schemas/EvalCriteria'
              description: Defines the questions that the buyer should answer to create the event along with answers given.

    EventDetailOCDS:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Tender'
        - type: object
          properties:
            description:
              deprecated: true
            status:
              deprecated: true
            items:
              deprecated: true
            minValue:
              deprecated: true
            procurementMethodDetails:
              deprecated: true
            procurementMethodRationale:
              deprecated: true
            mainProcurementCategory:
              deprecated: true
            additionalProcurementCategories:
              deprecated: true
            awardCriteriaDetails:
              deprecated: true
            submissionMethod:
              deprecated: true
            submissionMethodDetails:
              deprecated: true
            tenderPeriod:
              allOf:
                - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Period'
                - type: object
                  properties:
                    maxExtentDate:
                      deprecated: true
                    durationInDays:
                      deprecated: true
            enquiryPeriod:
              allOf:
                - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Period'
                - type: object
                  properties:
                    maxExtentDate:
                      deprecated: true
                    durationInDays:
                      deprecated: true
            hasEnquiries:
              deprecated: true
            eligibilityCriteria:
              deprecated: true
            awardPeriod:
              deprecated: true
            contractPeriod:
              deprecated: true
            numberOfTenderers:
              deprecated: true
            tenderers:
              deprecated: true
            documents:
              deprecated: true
            milestones:
              deprecated: true
            amendments:
              deprecated: true
            competitive:
              deprecated: true
            lots:
              type: array
              items:
                allOf:
                  - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Lot'
                  - type: object
                    properties:
                      techniques:
                        allOf:
                          - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/Techniques'
                          - type: object
                            properties:
                              frameworkAgreement:
                                allOf:
                                  - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/FrameworkAgreement'
                                  - type: object
                                    properties:
                                      minimumParticipants:
                                        deprecated: true
                                      maximumParticipants:
                                        deprecated: true
                                      method:
                                        deprecated: true
                                      periodRationale:
                                        deprecated: true
                                      buyerCategories:
                                        deprecated: true
                                      value:
                                        deprecated: true
                                      period:
                                        deprecated: true
                              hasDynamicPurchasingSystem:
                                deprecated: true
                              dynamicPurchasingSystem:
                                deprecated: true
                              hasElectronicAuction:
                                deprecated: true
                              electronicAuction:
                                deprecated: true
            lotDetails:
              deprecated: true
            lotGroups:
              deprecated: true
            enquiries:
              deprecated: true
            criteria:
              deprecated: true
            selectionCriteria:
              deprecated: true
            techniques:
              allOf:
                - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/Techniques'
                - type: object
                  properties:
                    frameworkAgreement:
                      allOf:
                        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/FrameworkAgreement'
                        - type: object
                          properties:
                            minimumParticipants:
                              deprecated: true
                            maximumParticipants:
                              deprecated: true
                            method:
                              deprecated: true
                            periodRationale:
                              deprecated: true
                            buyerCategories:
                              deprecated: true
                            value:
                              deprecated: true
                            period:
                              deprecated: true
                            description:
                              example: RM6118
                              description: Reference number to agreement being used (Is this not part of the project not the event?)
                    hasDynamicPurchasingSystem:
                      deprecated: true
                    dynamicPurchasingSystem:
                      deprecated: true
                    hasElectronicAuction:
                      deprecated: true
                    electronicAuction:
                      deprecated: true

    CreateEventOCDS:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Tender'
        - type: object
          properties:
            status:
              readOnly: true
            procuringEntity:
              readOnly: true
            items:
              deprecated: true
            minValue:
              deprecated: true
            procurementMethodDetails:
              deprecated: true
            procurementMethodRationale:
              deprecated: true
            mainProcurementCategory:
              deprecated: true
            additionalProcurementCategories:
              deprecated: true
            awardCriteriaDetails:
              deprecated: true
            submissionMethod:
              deprecated: true
            submissionMethodDetails:
              deprecated: true
            tenderPeriod:
              readOnly: true
            enquiryPeriod:
              deprecated: true
            hasEnquiries:
              readOnly: true
            eligibilityCriteria:
              deprecated: true
            awardPeriod:
              deprecated: true
            contractPeriod:
              deprecated: true
            numberOfTenderers:
              readOnly: true
            tenderers:
              readOnly: true
            documents:
              readOnly: true
            milestones:
              deprecated: true
            amendments:
              deprecated: true
            competitive:
              deprecated: true
            lots:
              readOnly: true
            lotDetails:
              deprecated: true
            lotGroups:
              deprecated: true
            enquiries:
              readOnly: true
            criteria:
              readOnly: true
            selectionCriteria:
              deprecated: true
            techniques:
              readOnly: true
    
    CreateEvent:
      type: object
      properties:
        nonOCDS:
          type: object
          properties:
            eventType:
              $ref: '#/components/schemas/DefineEventType'
        OCDS:
          $ref: '#/components/schemas/CreateEventOCDS'
          
    UpdateEvent:
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          minLength: 1
          example: New name
        eventType:
          $ref: '#/components/schemas/DefineEventType'
        assessmentSupplierTarget:
          $ref: '#/components/schemas/AssessmentSupplierTarget'
          
    AssessmentSupplierTarget:
      type: integer
      description: Defines the number of suppliers the buyer wishes to leave and assesment with. If not present the user cannot delete during an FC or DA assessment. 
      example: 5

    EventDetail:
      description: 
        Generic term for an event put out to the market. Each is an optional procurement step in the procurement process. This call shows the current status of each in the procurement process.
      type: object
      properties:
        nonOCDS:
          $ref: '#/components/schemas/EventDetailNonOCDS'
        OCDS:
          $ref: '#/components/schemas/EventDetailOCDS'
            
    ProjectTerminationType:
      #allOf:
      #  - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/TenderStatus'
      title: Project Termination Options
      description: 
        Subset of the codes in [tenderStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#tender-status) codelist.
        These are the statuses which the user can close the project. If the response is null then the project cannot be closed.
      type: array
      items:
        type: string
        enum:
          - cancelled
          - unsuccessful
          - complete
          - withdrawn.

              
    DraftProcurementProject:
      type: object
      properties:
        procurementID:
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/ProcurementProjectId'
        eventId:
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/ProcurementEventId'
        defaultName:
          $ref: '#/components/schemas/DefaultName'
              
    DefaultName:
      type: object
      properties:
        name:
          type: string
          example: <agreementId>-<lotId>-<org>
        components:
          type: object
          properties:
            agreementId:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/AgreementId'
            lotId:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/LotId'
            org:
              type: string
              example: CCS
              
    EvalCriteria:
      description: 
        Details of an Evaluation type. This is known as an Envelope or Criterion
      type: object
      properties:
          id:
            title: Identifier
            description: 'The identifier for this criterion. It must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid). See the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details.'
            type: string
            minLength: 1
            readOnly: true
          title:
            title: Title
            description: A title for this criterion.
            nullable: true 
            type: string
            minLength: 1          
          description:
            title: Description
            description: A description of this criterion. Structured information should be provided in its other fields.
            nullable: true
            type: string
            minLength: 1 
          relatesTo:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists_Ext.yaml#/components/schemas/RelatesTo'
          relatedItems:
            type: string
          requirementGroups:
            type: array
            items:
              $ref: '#/components/schemas/QuestionGroup'
            minItems: 1
            
            
    QuestionGroup:
      description: 
        This is an arbitrary grouping of questions to make it within an individual Evaluation. Known as a Requirement Group in OCDS
      type: object
      properties:
        nonOCDS:
          type: object
          properties:
            prompt:
              type: string
              description: Provides a prompt to request the user to answer the question. 
              example: Specify each question you are requesting an answer to
            task:
              type: string
              description: Provides text to describe the task the user must undertake to define the question.
              example: Add Information you are looking for
            mandatory:
              description: Defines if the user must answer the question to proceed.
              type: boolean
            order:
              description: 
                Defines an order of the qustion group to be displayed in UI
              type: integer
        OCDS:
            # overrides: https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/RequirementGroup
            type: object
            properties:
              id:
                title: Identifier
                description: 'The identifier for this question group. It must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid). See the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details.'
                type: string
                minLength: 1
                readOnly: true
              description: 
                title: Description
                description: A description of this question group.
                nullable: true
                type: string
                minLength: 1  
              requirements:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
                minItems: 1
       
 
    Question:
      description: 
        A question that must be answered by the supplier as part of a tender or a question answered by the buyer to provide information to support the supplier.
      type: object
      properties:
        nonOCDS:
          type: object
          properties:
            questionType:
              $ref: '#/components/schemas/QuestionType'
            answered: 
              description: 
                Defines a the buyer or supplier has answered
              type: boolean
            mandatory: 
              description: 
                Defines a the buyer or supplier must answer the question before a tender or response is published
              type: boolean
            multiAnswer:
              description: 
                Defines a the buyer can add new questions of this type
              type: boolean
            order:
              description: 
                Defines an order of the question to be displayed in UI
              type: integer
            length:
              description: 
                Defines the maximum length of the question answer to be displayed in UI
              type: integer
            options:
              description: 
                Defines options
              type: array
              items:
                type: object
                properties:
                  text:
                    description: 
                      Defines the text to be displayed for an option
                    type: string
                  value:
                    description: 
                      Defines value that the selection represents
                    type: string
                  selected:
                    description: 
                      Indicates if the UI should show it as selected
                    type: boolean
                  tableDefinition:
                    $ref: '#/components/schemas/TableDefinition'
            tableData:
              $ref: '#/components/schemas/TableDefinition'
            dependency:
              description: 
                Describes any dependency this question has on another question
              type: object
              properties:
                conditional:
                  $ref: '#/components/schemas/QuestionDependancy'
                relationships:
                  $ref: '#/components/schemas/QuestionRelationship'
        OCDS:
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Requirement'
          
    TableDefinition:
      type: object
      properties:
        titles:
          type: object
          properties:
            columns:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/TitleDefinition'
                  - type: object
                    properties:
                      id: 
                        minimum: 0
            rows:
              type: array
              items:
                $ref: '#/components/schemas/TitleDefinition'
        data:
          type: array
          items:
            $ref: '#/components/schemas/TableData'
                
                
    TableData:
      type: object
      properties:
        row:
          type: integer
          minimum: 1
          description: ID of one of the rows specified title definition
        cols:
          type: array
          description: one item per column defined in title definition
          items:
            oneOf:
              - type: string
              - type: integer
              - type: number
              - type: boolean
                
    TitleDefinition:
      type: object
      properties:
        id: 
          type: integer
          minimum: 1
        name:
          type: string
        dataType:
          type: string
          enum:
            - string
            - integer
        
    
    QuestionType:
      type: string
      description: |
        Type of question to be displayed
          * Value (provides information in the expectedValue from buyer or supplier) 
          * Range (provides a range for the expectedValue from buyer)
          * SingleSelect (Provides a single select from options from the buyer or supplier)
          * MultiSelect (Provides a multi select from options from the buyer or supplier)
          * SingleSelectWithOptions (Provides options from the buyer to use in a single select for the supplier)
          * MultiSelectWithOptions (Provides options from the buyer to use in a multiselect select for the supplier)
          * Document (Requires a document from a supplier)
          * DocumentWithTemplate (provides document from the buyer to be used as a template for the supplier)
          * Address (provides an address from buyer or supplier using a post code manual input)
          * KeyValuePair (provides two related values)
          * Text (provides an text field similar to text area in UI)
          * Monetary (provides a field to input a monetary value)
          * Integer (provides a field that will only allow monetary values)
          * Date (provides input that will only allow a date) 
          * DateTime (provides input that will only allow a date and time)
          * Percentage (provides input that will only allow a percentage value)
          * ReadMe (provides guidance to the user)
          * Duration (provides input that will allow a length of time to be specified)
          * Table (provides input to define a table)
      enum:
        - Value
        - Range
        - SingleSelect
        - MultiSelect
        - SingleSelectWithOptions
        - MultiSelectWithOptions
        - Document
        - DocumentWithTemplate
        - Address
        - KeyValuePair
        - Text
        - Monetary
        - Integer
        - Date
        - DateTime
        - Percentage
        - ReadMe
        - Duration
        - Table
        
    QuestionDependancy:
      type: object
      description: 
        Describes the condition when this question should be shown based on another question.
      properties:
        dependentOnId:
          type: string
        dependencyType:
          $ref: '#/components/schemas/DependencyType'
        dependencyValue:
          oneOf:
            - type: string
              format: date
            - type: integer
            - type: boolean
    
    DependencyType:
      type: string
      description: |
        Type of relationship to dependent field
          * GreaterThan (Dependent value greater than dependencyValue) 
          * EqualTo (Dependent value equal to the dependencyValue)
          * LessThan (Dependent value less than the dependency value)
          * Inside (Dependent value inside a range or period)
          * Outside (Dependent value outside a range or period)
          * NotNull (Any Dependent value has been provided)
      enum:
        - GreaterThan
        - EqualTo
        - LessThan
        - Inside
        - Outside
        - NotNull
        
    QuestionRelationship:
      type: array
      description: 
        Describes the relationships the answers provided to a question.
      items:
        type: object
        properties:
          dependentOnId:
            type: string
          relationshipType:
            $ref: '#/components/schemas/RelationshipType'
                
    RelationshipType:
      type: string
      description: |
        Type of relationship to dependent field
          * GreaterThan (Question value greater than dependent question value) 
          * EqualTo (Question value equal to dependent question value)
          * LessThan (Question value less than dependent question value)
          * Inside (Question value inside a range or period defined in dependent question)
          * Outside (Question value outside a range or period defined in dependent question)
          * Alternative (Either question or dependent question may contain an answer not both)
      enum:
        - GreaterThan
        - EqualTo
        - LessThan
        - Inside
        - Outside
        - Alternative
        
  

    ResponseSummary:
      description: 
        This is summary of the responses from suppliers
  
      type: object
      properties:
        supplier: 
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/OrganizationReference'
        responseState: 
          type: string
          description: |
            Defines how far the supplier has progressed in providing a response
              * None - No response has been supplied
              * Draft - The supplier has added some response data but not submitted
              * Submitted - The supplier has met all criteria to submit an confirmed they wish to do so.
          enum:
            - None
            - Draft
            - Submitted
        readState: 
          type: string
          description: |
            Defines if the buyer has reacted to the supplier response
              * Waiting - The Buyer is waiting for a response to be submitted
              * Unread - The buyer has not opened the response
              * Read - The buyer has opened the response 
          enum:
            - Draft
            - Unread
            - Read

    GetUserResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            type: string
            enum:
              - buyer
              - supplier

    RegisterUserResponse:
      type: object
      properties:
        userAction:
          type: string
          description: |
            What action if any was taken for the user
              * created - Supplier user not found in sales platform and was created
              * existed - User existed already in sales platform and was updated
          enum:
            - created
            - existed
        organisationAction:
          type: string
          description: |
            What action if any was taken for the organisation
              * created - Supplier org not found in sales platform and was created
              * existed - Supplier org or Buyer already in sales platform - no action        
              * pending - Buyer org not found in sales platform and was created in pending state
          enum:
            - created
            - existed
            - pending
        roles:
          type: array
          items:
            type: string
            enum:
              - buyer
              - supplier                
    
    UpdateOrgResponse:
      type: object
      properties:
        organisationAction:
          type: string
          description: |
            What action if any was taken for the organisation
              * nonRequired - No action taken (buyer orgs cannot currently be updated via this method)
              * created - Not Currently in use (Orgs cannot currently be created via this method)
              * existed - Org existed already in sales platform and was updated (supplier orgs only)
              * pending - Not currently in use (Orgs cannot currently be created via this method)
          enum:
            - nonRequired
            - created
            - existed
            - pending
          example: existed
        roles:
          type: array
          items:
            type: string
            enum:
              - buyer
              - supplier
            example: supplier
            
    DocumentAudienceType:
      description: Intended audience for a document
      type: string
      enum:
        - buyer
        - supplier
              
    DocumentSummary:
      description: Metadata relating to an attached document
      type: object
      properties:
          id:
            type: string
          fileName: 
            type: string  
          fileSize:
            type: integer
            format: int64
          description: 
            type: string  
          audience:
            $ref: '#/components/schemas/DocumentAudienceType'
            
    PublishDates:
      description: Metadata relating to an attached document
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        endDate: 
          type: string 
          format: date-time
      required:
        - endDate

    QandA:
      description: Question and Answer item
      type: object
      properties:
        question:
          type: string
        answer:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        created: 
          type: string 
          format: date-time
          readOnly: true
      required:
        - question
        - answer
        - lastUpdated
        - created

    CaTMessage:
      type: object
      properties:
        OCDS:    
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Enquiry'
            - type: object
              properties:
                id:
                  readOnly: true
                date:
                  readOnly: true
                author:
                  readOnly: true
                relatedLot:
                  readOnly: true
                description:
                  deprecated: true
                answer:
                  deprecated: true
                dateAnswered:
                  deprecated: true
                relatedItem:
                  deprecated: true
                threadID:
                  deprecated: true
        nonOCDS:
          type: object
          properties:
            read:
              type: boolean
              description: Indicates if the message has been read by the user. (null if direction is SENT)
            direction:
              type: string
              enum:
                - SENT
                - RECEIVED
              description: Indicates if the user sent the message or recieved the message
              readOnly: true
              
    MessageSummary:
      description: summary of message between buyer and supplier
      allOf:
        - $ref: '#/components/schemas/CaTMessage'
        - type: object
          properties:
            nonOCDS:
              type: object
              properties:
                counts:
                  $ref: '#/components/schemas/MessageTotals'
                links:
                  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Links'
    
    MessageTotals:
      type: object
      properties:
        pageTotal:
          type: integer
        messagesTotal:
          type: integer
                  
    MessageDirection:
      type: string
      enum:
        - SENT
        - RECEIVED
        - ALL
      description: Indicates if the user sent the message or recieved the message
      readOnly: true
      
    MessageSort:
      type: string
      enum:
        - DATE
        - AUTHOR
        - TITLE
      description: Indicates if the user sent the message or recieved the message
      readOnly: true
        
    Message:
      description: Message between buyer and supplier
      allOf:
        - $ref: '#/components/schemas/CaTMessage'
        - type: object
          properties:
            OCDS:
              properties:
                description:
                  deprecated: false
            nonOCDS:
              type: object
              properties:
                answerId:
                  type: string
                  title: Identifier
                  description: A unique identifier of for a message containing answer
                  readOnly: true
                parentId:
                  type: string
                  title: Identifier
                  description: A unique identifier of for a message containing answer (Null if first message in a thread)
                isBroadcast:
                  type: boolean
                  description: Indicates if the buyer sent the message to the author of the a parent message or to all suppliers
                receiverList:
                  type: array
                  items:
                    $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/OrganizationReference'
                  readOnly: true
                  description: lists the organisations the message has been sent to. (Messages from supplier will only show buyer)
                readList:
                  type: array
                  items:
                    $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/ContactPoint'
                  readOnly: true
                  description: lists users who have read the message and their organiation.
                attachments:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  readOnly: true
                  description: list attachments sent with the message.
                   
  securitySchemes:
    openID:
      type: openIdConnect
      openIdConnectUrl: 'https://accounts.google.com/.well-known/openid-configuration'
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/v2/auth'
          tokenUrl: 'https://oauth2.googleapis.com/token'
          scopes:
            openid: Standard scope
            email: email
            profile: profile
            supplier: Grants access to act as a supplier
            buyer: Grants access to act as a buyer
            admin: Grants access to admin operations