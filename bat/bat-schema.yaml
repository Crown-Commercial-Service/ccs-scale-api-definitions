components:
  schemas:
  
    OrderID:
      type: string
      description: The ID of the order within BaT
      example: R793138650
      readOnly: true
    
    CatalogueID:
      type: number
      format: integer
      example: 1234
      readOnly: true
      
    Catalogue:
      type: object
      description: Metadata about a Catalogue
      required:
        - id
#         - quantity
      properties: 
        id:  
          type: string
          readOnly: true
          format: uuid
          description: 'ID of the stock item'
          example: 222
        agreement:  
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/agreements/agreements-service.yaml#/components/schemas/AgreementSummary'
        supplier:  
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Organization'

    CatalogueUpdate:
      oneOf:
        - $ref: '#/components/schemas/FileUpdate'
        - $ref: '#/components/schemas/CatalogueRecordUpdate'
          
    CatalogueList:
      type: array
      items:
        $ref: '#/components/schemas/CatalogueID'
             
    FileUpdate:
      type: object
      description: Details of a file Upload
      properties: 
        date:  
          description: 'Time upload took place'
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Timestamp'
        url:
          type: string
          format: uri
          description: URI for the file. Should be a perma-link and can be used as a key for file uploaded
        name:
          type: string
          description: document name
        fileformat:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/FileFormat'

    CatalogueRecordUpdate:
      type: object
      description: Details of catalogue update
      properties: 
        date:  
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Timestamp'
        before:
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Item'
        after:
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Item'

    Payment:
      type: object
      description: Generic object to hold details of payment data through checkout
      properties:
        paymentDate:
          type: string
          format: date-time
          example: "2020-12-25T17:32:28Z"
        paymentMethod:
          type: string
          enum: [invoice,card]
          example: invoice
        paymentMethodDetails:
          oneOf:
            - $ref: '#/components/schemas/InvoicePayment'
            - $ref: '#/components/schemas/CardPayment'
          
    # More fields to go in here
    InvoicePayment:
      type: object
      description: Data related to an invoice Payment
      properties:
        paymentAmount:
          type: number
          example: 399.99
        paymentTerms:
          type: string
          description: payment terms e.g. days to pay
          example: 60 day payment          

    # More fields to go in here
    CardPayment:
      type: object
      description: Data related to an card Payment - to be PCI Compliant
      properties:
        paymentAmount:
          type: number
          example: 399.99

    # Probably more here - does OCDS have a price?
    Price:
      type: object
      description: Summary of prices. Total, product, delivery, VAT
      properties:
        totalPrice:
          type: number
          description: The total price covered by this object
          example: 10.99
        deliveryPrice:
          type: number
          description: The delivery price covered by this object
          example: 10.99
        tax:
          type: number
          description: The total price covered by this object
          example: 10.99
          
        
    ProductID:
      type: number
      format: integer
      example: 1234
      readOnly: true

    ProductCatalogID:
      type: number
      description: The ID of the instance of the Product in the specific Catalog (where the Catalogue is Supplier specific)
      format: integer
      example: 1234
      readOnly: true

      
    Product:
      type: object
      description: Details of catalogue update
      properties:
        id:   
          allOf:
            - $ref: '#/components/schemas/ProductID'
        catalogue:  
          allOf:
            - $ref: '#/components/schemas/CatalogueID'
        summary:  
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Item'
        stock:
          allOf:
            - $ref: '#/components/schemas/StockList'
        
    ProductList:
      type: array
      description: A list of unique products within a catalogue. The total stock of that product within the catalogue is without regard to location. The breakdown is provided in the product stock list. 
      items:
        $ref: '#/components/schemas/Product'

    OrderScope:
      type: string
      description: The scope of the Orders to be returned. Defaults to the user.
      enum: [user,organisation,buyergroup]
      readOnly: true
    
    StockItem:
      type: object
      description: Items of stock
      required:
        - id
        - quantity
      properties: 
        id:  
          type: string
          readOnly: true
          format: uuid
          description: 'ID of the stock item'
          example: 222
        product:  
          $ref: '#/components/schemas/ProductID'
        catalogue:  
          $ref: '#/components/schemas/CatalogueID'
        location:
          type: object
          description: location of the stock
          properties:
            address:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Address'
        qantitity:
          type: number
          format: int32
          description: 'Quantity of stock available'
          example: 222
        
    StockList:
      type: array
      items:
        $ref: '#/components/schemas/StockItem'
        
    LineItem:
      allOf:
        # OCDS Item is id, description, classification, additionalClassifications, quantity, unit
        # Classification is scheme, id, description, uri - see https://standard.open-contracting.org/latest/en/schema/codelists/#item-classification-scheme - we will probably use UNSPSC but specific scheme is to be determined. Note that this classification is different to Spree's Taxon.
       - $ref:  'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-scale-api-definitions/master/common/OCDS_Schema.yaml#/components/schemas/Item'
      # - type: object
         # All of the other properties required for a Marketplace Basket item 