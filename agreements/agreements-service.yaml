{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "SCALE Commercial Agreements Service",
    "description" : "This API allows access to CCS Commercial Agreement data. This is used both to provide information to users and to govern the behaviour of other systems for example 'Buy a Thing' and 'Contract for a Thing', where processes may differ based on the configuration of the underlying Commercial Agreement and Lot.",
    "termsOfService" : "http://api.crowncommercial.gov.uk/terms/",
    "contact" : {
      "email" : "apiteam@crowncommercial.gov.uk"
    },
    "license" : {
      "name" : "Open Government Licence 3.0",
      "url" : "https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
    },
    "version" : "0.0.11"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/Crown-Commercial/Agreements/0.0.11",
    "description" : "SwaggerHub API Auto Mocking"
  }, {
    "url" : "https://virtserver.swaggerhub.com/trear590/agreements-api2/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  }, {
    "url" : "https://dev.api.crowncommercial.gov.uk/agreements-service",
    "description" : "Dev environment"
  } ],
  "security" : [ {
    "ApiKeyAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "Agreement",
    "description" : "Operations at Agreement level",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://apis.crowncommercial.gov.uk"
    }
  }, {
    "name" : "Lot",
    "description" : "Operations at Lot level",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://apis.crowncommercial.gov.uk"
    }
  } ],
  "paths" : {
    "/agreements" : {
      "get" : {
        "tags" : [ "Agreement" ],
        "summary" : "Returns an array of all configured Commercial Agreements",
        "description" : "Returns an array of Commercial Agreement Ids, names and simple descriptions",
        "operationId" : "get-agreements",
        "responses" : {
          "200" : {
            "description" : "Collection of Commercial Agreement summary entities",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AgreementSummary"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      }
    },
    "/agreements/{agreement-id}" : {
      "get" : {
        "tags" : [ "Agreement" ],
        "summary" : "Returns details of the specified Commercial Agreement",
        "description" : "Returns the definition of the specified Commercial Agreement",
        "operationId" : "get-agreement-detail",
        "parameters" : [ {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Commercial Agreement detail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgreementDetail"
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Agreement" ],
        "summary" : "Updates details for specified Commercial Agreement",
        "description" : "updates data for specified Commercial Agreement",
        "operationId" : "update-agreement-detail",
        "parameters" : [ {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AgreementDetail"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Commercial Agreement documents",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgreementBasicInfo"
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      }
    },
    "/agreements/{agreement-id}/documents" : {
      "get" : {
        "tags" : [ "Agreement" ],
        "summary" : "Returns details of the specified Commercial Agreement documents",
        "description" : "Returns the documents for the specified Commercial Agreement",
        "operationId" : "get-agreement-documents",
        "parameters" : [ {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Commercial Agreement documents",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Document"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      }
    },
    "/agreements/{agreement-id}/lots" : {
      "get" : {
        "tags" : [ "Lot" ],
        "summary" : "Returns details of all of the Lots for this Commercial Agreement",
        "description" : "Returns data about the Lots, both general information and parameters required to govern the behaviour of applications using this data",
        "operationId" : "get-agreement-lots",
        "parameters" : [ {
          "name" : "buyingMethod",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/BuyingMethod"
          }
        }, {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Lot details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LotDetail"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Lot" ],
        "summary" : "updates details of all of the Lots for this Commercial Agreement",
        "description" : "updates data about the Lots, both general information and parameters required to govern the behaviour of applications using this data",
        "operationId" : "update-agreement-lots",
        "parameters" : [ {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/LotDetail"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Lot details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201"
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      }
    },
    "/agreements/{agreement-id}/lots/{lot-id}" : {
      "get" : {
        "tags" : [ "Lot" ],
        "summary" : "Returns details of the specified Lot for this Commercial Agreement",
        "description" : "Returns data about the Lot, both general information and parameters required to govern the behaviour of applications using this data",
        "operationId" : "get-lot-details-for-agreement",
        "parameters" : [ {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        }, {
          "name" : "lot-id",
          "in" : "path",
          "description" : "Lot",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LotId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Lot details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LotDetail"
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Lot" ],
        "summary" : "Updates details of the specified Lot for this Commercial Agreement",
        "description" : "Updates data about the Lot, both general information and parameters required to govern the behaviour of applications using this data",
        "operationId" : "update-lot-details-for-agreement",
        "parameters" : [ {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        }, {
          "name" : "lot-id",
          "in" : "path",
          "description" : "Lot",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LotId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LotDetail"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Lot details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LotBasicInfo"
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      }
    },
    "/agreements/{agreement-id}/lots/{lot-id}/suppliers" : {
      "get" : {
        "tags" : [ "Lot" ],
        "summary" : "Returns the supplier list for the Lot",
        "description" : "Returns details of the suppliers for the specified Lot for this Commercial Agreement",
        "operationId" : "get-lot-suppliers",
        "parameters" : [ {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        }, {
          "name" : "lot-id",
          "in" : "path",
          "description" : "Lot",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LotId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Lot supplier details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LotSupplier"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Lot" ],
        "summary" : "update the supplier list for the Lot",
        "description" : "update the suppliers for the specified lot",
        "operationId" : "put-lot-suppliers",
        "parameters" : [ {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        }, {
          "name" : "lot-id",
          "in" : "path",
          "description" : "Lot",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LotId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/LotSupplier"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Lot suppliers update summary",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LotSuppliersUpdateSummary"
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Lot" ],
        "summary" : "patch supplier information - contact details or organization",
        "description" : "patch supplier information - contact details or organization",
        "operationId" : "patch-lot-suppliers",
        "parameters" : [ {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        }, {
          "name" : "lot-id",
          "in" : "path",
          "description" : "Lot",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LotId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/lotid_suppliers_body"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Lot supplier",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LotSupplier"
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      }
    },
    "/agreements/{agreement-id}/lots/{lot-id}/suppliers/export" : {
      "get" : {
        "tags" : [ "Lot" ],
        "summary" : "Exports the supplier list for the Lot. Marked as deprecated as needs investigation into whether this is required",
        "description" : "Returns details of the suppliers for the specified Lot for this Commercial Agreement in a file",
        "operationId" : "get-lot-suppliers-export",
        "parameters" : [ {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        }, {
          "name" : "lot-id",
          "in" : "path",
          "description" : "Lot",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LotId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "string",
                  "format" : "text"
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/agreements/{agreement-id}/updates" : {
      "get" : {
        "tags" : [ "Agreement" ],
        "summary" : "Returns any updates added to the Agreement",
        "description" : "Returns updates recorded for the specified Commercial Agreement",
        "operationId" : "get-agreement-updates",
        "parameters" : [ {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Commercial Agreement updates",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AgreementUpdate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      }
    },
    "/agreements/{agreement-id}/lots/{lot-id}/event-types" : {
      "get" : {
        "tags" : [ "Lot" ],
        "summary" : "Returns the Event Types for the Lot",
        "description" : "Returns details of the Event Types that can be run for the specified Lot for this Commercial Agreement",
        "operationId" : "get-lot-event-types",
        "parameters" : [ {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        }, {
          "name" : "lot-id",
          "in" : "path",
          "description" : "Lot",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LotId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Event Types",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventType"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      }
    },
    "/agreements/{agreement-id}/lots/{lot-id}/event-types/{event-type}/data-templates" : {
      "get" : {
        "tags" : [ "Lot" ],
        "summary" : "Returns the template for use in an event",
        "description" : "Returns details of templates that define the expected information a buyer should answer to create requirements for a supplier when creating an event. These will be specific to an Event Type that can be run for the specified Lot for this Commercial Agreement",
        "operationId" : "get-lot-data-template",
        "parameters" : [ {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        }, {
          "name" : "lot-id",
          "in" : "path",
          "description" : "Lot",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LotId"
          }
        }, {
          "name" : "event-type",
          "in" : "path",
          "description" : "Event Type",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/DefineEventType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Data Templates",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataTemplate"
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      }
    },
    "/agreements/{agreement-id}/lots/{lot-id}/event-types/{event-type}/document-templates" : {
      "get" : {
        "tags" : [ "Lot" ],
        "summary" : "Returns the template for use in an event",
        "description" : "Returns details of templates that define the expected information a buyer should answer to create requirements for a supplier when creating an event. These will be specific to an Event Type that can be run for the specified Lot for this Commercial Agreement",
        "operationId" : "get-lot-document-templates",
        "parameters" : [ {
          "name" : "agreement-id",
          "in" : "path",
          "description" : "Agreement",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/AgreementId"
          }
        }, {
          "name" : "lot-id",
          "in" : "path",
          "description" : "Lot",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/LotId"
          }
        }, {
          "name" : "event-type",
          "in" : "path",
          "description" : "Event Type",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/DefineEventType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Document Templates",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentTemplate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "403" : {
            "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                }
              }
            }
          },
          "404" : {
            "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "410" : {
            "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_410"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "500" : {
            "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "502" : {
            "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_502"
                }
              }
            }
          },
          "503" : {
            "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_503"
                }
              }
            }
          },
          "504" : {
            "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_504"
                }
              }
            }
          },
          "505" : {
            "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_505"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AgreementSummary" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "$ref" : "#/components/schemas/AgreementId"
          },
          "name" : {
            "type" : "string",
            "description" : "Commercial Agreement Name",
            "example" : "Technology Products 2"
          }
        }
      },
      "AgreementDetail" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "$ref" : "#/components/schemas/AgreementId"
          },
          "name" : {
            "type" : "string",
            "description" : "Commercial Agreement Name",
            "example" : "Technology Products 2"
          },
          "description" : {
            "type" : "string",
            "description" : "Short textual description of the commercial agreement"
          },
          "startDate" : {
            "type" : "string",
            "description" : "Effective start date of Commercial Agreement",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "description" : "Effective end date of Commercial Agreement",
            "format" : "date"
          },
          "detailUrl" : {
            "type" : "string",
            "description" : "URL of the Agreement detail page on the CCS website",
            "format" : "uri",
            "example" : "https://www.crowncommercial.gov.uk/agreements/RM3733"
          },
          "owner" : {
            "$ref" : "#/components/schemas/Organization"
          },
          "contacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Contact"
            }
          },
          "benefits" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Short description of the benefit"
            }
          },
          "lotAssessmentTool" : {
            "$ref" : "#/components/schemas/AssessmentId"
          },
          "preDefinedLotRequired" : {
            "type" : "boolean",
            "description" : "Defines if a project can be set up without defining a lot. The lot is defined as an assessment provided by the agreement."
          },
          "lots" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LotSummary"
            }
          }
        }
      },
      "AgreementBasicInfo" : {
        "type" : "object",
        "properties" : {
          "lastUpdatedDate" : {
            "type" : "string",
            "description" : "Last Updated Date",
            "format" : "date",
            "readOnly" : true
          },
          "lastUpdatedBy" : {
            "type" : "string",
            "description" : "System last updated By",
            "readOnly" : true,
            "example" : "Digital Marketplace",
            "enum" : [ "Salesforce", "UI", "Digital Marketplace" ]
          },
          "originalInsertedDate" : {
            "type" : "string",
            "description" : "original inserted date - used to differentiate between UPDATE and INSERT of agreement as same endpoint being used ie) PUT",
            "format" : "date",
            "readOnly" : true
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/AgreementSummary"
        } ]
      },
      "LotBasicInfo" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "$ref" : "#/components/schemas/LotId"
          },
          "lastUpdatedDate" : {
            "type" : "string",
            "description" : "Last Updated Date",
            "format" : "date",
            "readOnly" : true
          },
          "lastUpdatedBy" : {
            "type" : "string",
            "description" : "System last updated By",
            "readOnly" : true,
            "example" : "Digital Marketplace",
            "enum" : [ "Salesforce", "UI", "Digital Marketplace" ]
          },
          "originalInsertedDate" : {
            "type" : "string",
            "description" : "original inserted date - used to differentiate between UPDATE and INSERT of lot as same endpoint being used ie) PUT",
            "format" : "date",
            "readOnly" : true
          }
        }
      },
      "LotDeletionInfo" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "$ref" : "#/components/schemas/LotId"
          },
          "removedDate" : {
            "type" : "string",
            "description" : "Last Updated Date",
            "format" : "date",
            "readOnly" : true
          },
          "removedBy" : {
            "type" : "string",
            "description" : "System last updated By",
            "readOnly" : true,
            "example" : "Digital Marketplace",
            "enum" : [ "Salesforce", "UI", "Digital Marketplace" ]
          },
          "originalInsertedDate" : {
            "type" : "string",
            "description" : "original inserted date - used to differentiate between UPDATE and INSERT of lot as same endpoint being used ie) PUT",
            "format" : "date",
            "readOnly" : true
          }
        }
      },
      "LotDetail" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Lot name",
            "example" : "Finance"
          },
          "startDate" : {
            "type" : "string",
            "description" : "Effective start date of Lot",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "description" : "Effective end date of Lot",
            "format" : "date"
          },
          "description" : {
            "type" : "string",
            "description" : "Short textual description of the Lot"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "product", "service", "product and service" ]
          },
          "routesToMarket" : {
            "type" : "array",
            "description" : "Routes to Market for the Lot and associated bounds",
            "items" : {
              "$ref" : "#/components/schemas/RouteToMarket"
            }
          },
          "supplierCount" : {
            "type" : "number",
            "description" : "The number of suppliers listed under the lot that can be considered for an award under the lot."
          },
          "sectors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "A sector permitted to buy using the Agreement/Lot"
            }
          },
          "relatedAgreementLots" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RelatedAgreementLot"
            }
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LotRule"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/LotBasicInfo"
        } ]
      },
      "RelatedAgreementLot" : {
        "type" : "object",
        "properties" : {
          "caNumber" : {
            "$ref" : "#/components/schemas/AgreementId"
          },
          "lotNumber" : {
            "$ref" : "#/components/schemas/LotId"
          },
          "relationship" : {
            "type" : "string",
            "description" : "The type of the relationship in machine readable form",
            "example" : "FurtherCompetitionWhenBudgetExceeded"
          }
        },
        "description" : "A simple reference to a related Agreement/Lot combination and relationship type"
      },
      "BuyingMethod" : {
        "type" : "string",
        "example" : "DirectAward",
        "enum" : [ "DirectAward", "FurtherCompetition", "Marketplace", "EAuction" ]
      },
      "RouteToMarket" : {
        "type" : "object",
        "properties" : {
          "buyingMethods" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuyingMethod"
            }
          },
          "buyingSystemUrl" : {
            "type" : "string",
            "description" : "The URL to use for the system to progress the procurement (e.g. BaT, CaT, other)",
            "format" : "uri"
          },
          "minimumValue" : {
            "type" : "number",
            "description" : "The minimum value for which this Lot applies",
            "format" : "float"
          },
          "maximumValue" : {
            "type" : "number",
            "description" : "The maximum value for which this Lot applies",
            "format" : "float"
          },
          "location" : {
            "type" : "string",
            "description" : "PLACEHOLDER. Needs to be an anyOf for National:Regional or individual Regions or even lowest level NUTS2"
          },
          "minContractLength" : {
            "$ref" : "#/components/schemas/RouteToMarket_minContractLength"
          },
          "maxContractLength" : {
            "$ref" : "#/components/schemas/RouteToMarket_minContractLength"
          }
        }
      },
      "LotRule" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the rule (3 or 4 word description)",
            "example" : "Price rise limit"
          },
          "ruleId" : {
            "type" : "string",
            "description" : "Unique identifier of the rule"
          },
          "lotAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NameValueType"
            }
          },
          "transactionData" : {
            "type" : "array",
            "description" : "Data required from the relevant transaction to be able to evaluate the rule",
            "items" : {
              "$ref" : "#/components/schemas/LotRule_transactionData"
            }
          },
          "evaluationType" : {
            "type" : "string",
            "description" : "How the rule should be evaluated -<br> equal = rule is true if the lotAttribute is equal to the transactionData<br> greater = rule is true if the lotAttribute is greater than the transactionData<br> less = rule is true if the lotAttribute is less than the transactionData<br> complex = rule specific code is required to evaluate (typically where there are multiple variables)<br> flag = rule is always true. The presence of the rule is used to flag that certain behaviour is required. In some cases data may be passed in the lotAttributes.",
            "enum" : [ "equal", "greater", "less", "complex", "flag" ]
          },
          "service" : {
            "type" : "string",
            "description" : "Name of the service to which the rule applies (in future the Agreement Service may only return rules for the requested services)",
            "example" : "BaT"
          }
        },
        "description" : "Rules such as 'Prices may not rise more than {x} times in any consecutive {y} day period' can be included in the 'other' element - in this case 2 data-points would be required. <br><br>In the above example:<br><br>name=\"max number of prices rises in period\"<br> ruleId=\"maxNumberPriceChangesInPeriod\"<br> lotAttributes=[ {\"numberOfTimes\",\"integer\",,3,},{\"daysInPeriod\" ,\"integer\",,7,}]<br> transactionData= [\"priceRisesLastPeriod\",\"product.priceRises\"]<br> evaluationType=\"complex\"<br><br> as here specific logic is required to obtain the number of price rises before evaluating."
      },
      "NameValueType" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the 'other' bound to be used as hashmap key"
          },
          "datatype" : {
            "type" : "string",
            "description" : "the datatype of the 'other' lotBound value",
            "enum" : [ "string", "number" ]
          },
          "valueText" : {
            "type" : "string"
          },
          "valueNumber" : {
            "type" : "number"
          },
          "units" : {
            "type" : "string",
            "description" : "The unit of the value given in the value fields e.g. kg, mile, hour"
          }
        }
      },
      "AgreementUpdate" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "description" : "Date that the update was added",
            "format" : "date"
          },
          "linkUrl" : {
            "type" : "string",
            "description" : "Link to further information regarding the update",
            "format" : "uri"
          },
          "text" : {
            "type" : "string",
            "description" : "Actual update text"
          }
        }
      },
      "LotSummary" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "$ref" : "#/components/schemas/LotId"
          },
          "name" : {
            "type" : "string",
            "description" : "Lot name",
            "example" : "Finance"
          }
        }
      },
      "LotSuppliersUpdateSummary" : {
        "type" : "object",
        "properties" : {
          "lastUpdatedDate" : {
            "type" : "string",
            "description" : "Last Updated Date",
            "format" : "date",
            "readOnly" : true
          },
          "lastUpdatedBy" : {
            "type" : "string",
            "description" : "System last updated By",
            "example" : "Digital Marketplace",
            "enum" : [ "Salesforce", "UI", "Digital Marketplace" ]
          },
          "supplierCount" : {
            "type" : "number",
            "description" : "The number of suppliers listed under the lot that can be considered for an award under the lot."
          }
        }
      },
      "LotSupplierBasicInfo" : {
        "type" : "object",
        "properties" : {
          "supplierStatus" : {
            "type" : "string",
            "enum" : [ "active", "suspended", "excluded" ]
          },
          "lastUpdatedDate" : {
            "type" : "string",
            "description" : "Last Updated Date",
            "format" : "date",
            "readOnly" : true
          },
          "lastUpdatedBy" : {
            "type" : "string",
            "description" : "System last updated By",
            "example" : "Digital Marketplace",
            "enum" : [ "Salesforce", "UI", "Digital Marketplace" ]
          }
        }
      },
      "LotSupplier" : {
        "type" : "object",
        "properties" : {
          "organization" : {
            "$ref" : "#/components/schemas/Organization"
          },
          "lotContacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Contact"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/LotSupplierBasicInfo"
        } ]
      },
      "Contact" : {
        "type" : "object",
        "properties" : {
          "contact" : {
            "$ref" : "#/components/schemas/ContactPoint_1"
          },
          "contactId" : {
            "type" : "string",
            "description" : "Unique identifier of the contact"
          },
          "contactReason" : {
            "type" : "string",
            "description" : "Reason (usually application function) for which the contact should be contacted in the context of this Lot",
            "example" : "batQuoteNotification"
          }
        },
        "description" : "Agreement/Lot specific contacts for the Organization"
      },
      "EventType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EventType"
        }, {
          "type" : "object",
          "properties" : {
            "mandatory" : {
              "type" : "boolean",
              "description" : "Indicates if the event must be carried out as part of the procurement.",
              "readOnly" : true
            },
            "templateGroups" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/TemplateGroup"
              }
            }
          }
        } ]
      },
      "DataTemplate" : {
        "type" : "array",
        "description" : "A JSON structure that defines templates for data to be collected from a buyer to create a tender. These are grouped into Criteria. Each criterion can either:\n    \n    * Generate questions to be anwered on line by the supplier\n    * Provide support information for the supplier\n    \nThe criteria are made up of questions to be asked of the buyer to support the two options. Questions may be broken in logical groups within each criteria.\n\n",
        "items" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/EvalCriteria"
          }, {
            "type" : "object",
            "properties" : {
              "relatesTo" : {
                "type" : "string"
              },
              "relateItems" : {
                "type" : "string"
              },
              "requirementGroups" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/QuestionGroup"
                }, {
                  "type" : "object",
                  "properties" : {
                    "OCDS" : {
                      "type" : "object",
                      "properties" : {
                        "requirements" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Question"
                          }
                        }
                      }
                    }
                  }
                } ]
              }
            }
          } ]
        }
      },
      "DocumentTemplate" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Document"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "deprecated" : true
            },
            "documentType" : {
              "deprecated" : true
            },
            "title" : {
              "deprecated" : true
            },
            "description" : {
              "deprecated" : true
            },
            "datePublished" : {
              "deprecated" : true
            },
            "dateModified" : {
              "deprecated" : true
            },
            "format" : {
              "deprecated" : true
            },
            "language" : {
              "deprecated" : true
            },
            "relatedLots" : {
              "deprecated" : true
            }
          }
        } ]
      },
      "Errors" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "detail" : {
            "type" : "string"
          }
        }
      },
      "AgreementId" : {
        "pattern" : "RM[0-9]{4}(.[0-9]{1,2})?",
        "type" : "string",
        "readOnly" : true,
        "example" : "RM1234"
      },
      "Document" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Document_1"
        }, {
          "$ref" : "#/components/schemas/Document_2"
        }, {
          "type" : "object",
          "properties" : {
            "fileName" : {
              "type" : "string",
              "format" : "binary",
              "writeOnly" : true
            }
          }
        } ]
      },
      "Document_1" : {
        "title" : "Document",
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "ID",
            "minLength" : 1,
            "description" : "A local, unique identifier for this document. This field is used to keep track of multiple revisions of a document through the compilation from release to record mechanism.",
            "oneOf" : [ {
              "type" : "string"
            }, {
              "type" : "integer"
            } ]
          },
          "documentType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DocumentType"
            } ]
          },
          "title" : {
            "title" : "Title",
            "type" : "string",
            "description" : "The document title.",
            "nullable" : true
          },
          "description" : {
            "title" : "Description",
            "type" : "string",
            "description" : "A short description of the document. Descriptions are recommended to not exceed 250 words. In the event the document is not accessible online, the description field can be used to describe arrangements for obtaining a copy of the document.",
            "nullable" : true
          },
          "url" : {
            "title" : "URL",
            "type" : "string",
            "description" : "A direct link to the document or attachment. The server providing access to this document ought to be configured to correctly report the document mime type.",
            "format" : "uri",
            "nullable" : true
          },
          "datePublished" : {
            "title" : "Date published",
            "type" : "string",
            "description" : "The date on which the document was first published. This is particularly important for legally important documents such as notices of a tender.",
            "format" : "date-time",
            "nullable" : true
          },
          "dateModified" : {
            "title" : "Date modified",
            "type" : "string",
            "description" : "Date that the document was last modified",
            "format" : "date-time",
            "nullable" : true
          },
          "format" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FileFormat"
            } ]
          },
          "language" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Language"
            } ]
          }
        },
        "description" : "Links to, or descriptions of, external documents can be attached at various locations within the standard. Documents can be supporting information, formal notices, downloadable forms, or any other kind of resource that ought to be made public as part of full open contracting."
      },
      "DocumentType" : {
        "title" : "Document type",
        "type" : "string",
        "description" : "A classification of the document described, using the open [documentType](https://standard.open-contracting.org/latest/en/schema/codelists/#document-type) codelist.",
        "nullable" : true,
        "enum" : [ "plannedProcurementNotice", "tenderNotice", "awardNotice", "contractNotice", "completionCertificate", "procurementPlan", "biddingDocuments", "techninalSpecifications", "evalutionCriteria", "evaluationReports", "contractDraft", "contractSigned", "contractArrangements", "contractSchedule", "physicalProgressReport", "financialProgressReport", "finalAudit", "hearingNotice", "marketStudies", "eligibilityCriteria", "clarifications", "shortlistedFirms", "environmentalImpact", "assetAndLiability", "riskProvisions", "winningBid", "complaints", "contractAnnexe", "contractGuarantees", "subContract", "needsAssessment", "FeasibilityStudy", "projectPlan", "billOfQuantity", "bidders", "conflictOfInterest", "debarments", "illustration", "submissionDocuments", "contractSummary", "cancellationDetails" ]
      },
      "FileFormat" : {
        "title" : "File Format",
        "type" : "string",
        "description" : "The format of the document, using the open [IANA Media Types](http://www.iana.org/assignments/media-types/) codelist (see the values in the 'Template' column), or using the 'offline/print' code if the described document is published offline. For example, web pages have a format of 'text/html'.",
        "enum" : [ "application/1d-interleaved-parityfec", "application/3gpdash-qoe-report+xml", "application/3gpp-ims+xml", "application/A2L", "application/activemessage", "application/activity+json", "application/alto-costmap+json", "application/alto-costmapfilter+json", "application/alto-directory+json", "application/alto-endpointprop+json", "application/alto-endpointpropparams+json", "application/alto-endpointcost+json", "application/alto-endpointcostparams+json", "application/alto-error+json", "application/alto-networkmapfilter+json", "application/alto-networkmap+json", "application/alto-updatestreamcontrol+json", "application/alto-updatestreamparams+json", "application/AML", "application/andrew-inset", "application/applefile", "application/ATF", "application/ATFX", "application/atom+xml", "application/atomcat+xml", "application/atomdeleted+xml", "application/atomicmail", "application/atomsvc+xml", "application/atsc-dwd+xml", "application/atsc-dynamic-event-message", "application/atsc-held+xml", "application/atsc-rdt+json", "application/atsc-rsat+xml", "application/ATXML", "application/auth-policy+xml", "application/bacnet-xdd+zip", "application/batch-SMTP", "application/beep+xml", "application/calendar+json", "application/calendar+xml", "application/call-completion", "application/CALS-1840", "application/cap+xml", "application/cbor", "application/cbor-seq", "application/cccex", "application/ccmp+xml", "application/ccxml+xml", "application/CDFX+XML", "application/cdmi-capability", "application/cdmi-container", "application/cdmi-domain", "application/cdmi-object", "application/cdmi-queue", "application/cdni", "application/CEA", "application/cea-2018+xml", "application/cellml+xml", "application/cfw", "application/clue_info+xml", "application/clue+xml", "application/cms", "application/cnrp+xml", "application/coap-group+json", "application/coap-payload", "application/commonground", "application/conference-info+xml", "application/cpl+xml", "application/cose", "application/cose-key", "application/cose-key-set", "application/csrattrs", "application/csta+xml", "application/CSTAdata+xml", "application/csvm+json", "application/cwt", "application/cybercash", "application/dash+xml", "application/dashdelta", "application/davmount+xml", "application/dca-rft", "application/DCD", "application/dec-dx", "application/dialog-info+xml", "application/dicom", "application/dicom+json", "application/dicom+xml", "application/DII", "application/DIT", "application/dns", "application/dns+json", "application/dns-message", "application/dots+cbor", "application/dskpp+xml", "application/dssc+der", "application/dssc+xml", "application/dvcs", "application/ecmascript", "application/EDI-consent", "application/EDIFACT", "application/EDI-X12", "application/efi", "application/EmergencyCallData.Comment+xml", "application/EmergencyCallData.Control+xml", "application/EmergencyCallData.DeviceInfo+xml", "application/EmergencyCallData.eCall.MSD", "application/EmergencyCallData.ProviderInfo+xml", "application/EmergencyCallData.ServiceInfo+xml", "application/EmergencyCallData.SubscriberInfo+xml", "application/EmergencyCallData.VEDS+xml", "application/emotionml+xml", "application/encaprtp", "application/epp+xml", "application/epub+zip", "application/eshop", "application/example", "application/expect-ct-report+json", "application/fastinfoset", "application/fastsoap", "application/fdt+xml", "application/fhir+json", "application/fhir+xml", "application/fits", "application/flexfec", "application/font-sfnt", "application/font-tdpfr", "application/font-woff", "application/framework-attributes+xml", "application/geo+json", "application/geo+json-seq", "application/geopackage+sqlite3", "application/geoxacml+xml", "application/gltf-buffer", "application/gml+xml", "application/gzip", "application/H224", "application/held+xml", "application/http", "application/hyperstudio", "application/ibe-key-request+xml", "application/ibe-pkg-reply+xml", "application/ibe-pp-data", "application/iges", "application/im-iscomposing+xml", "application/index", "application/index.cmd", "application/index.obj", "application/index.response", "application/index.vnd", "application/inkml+xml", "application/IOTP", "application/ipfix", "application/ipp", "application/ISUP", "application/its+xml", "application/javascript", "application/jf2feed+json", "application/jose", "application/jose+json", "application/jrd+json", "application/json", "application/json-patch+json", "application/json-seq", "application/jwk+json", "application/jwk-set+json", "application/jwt", "application/kpml-request+xml", "application/kpml-response+xml", "application/ld+json", "application/lgr+xml", "application/link-format", "application/load-control+xml", "application/lost+xml", "application/lostsync+xml", "application/lpf+zip", "application/LXF", "application/mac-binhex40", "application/macwriteii", "application/mads+xml", "application/marc", "application/marcxml+xml", "application/mathematica", "application/mbms-associated-procedure-description+xml", "application/mbms-deregister+xml", "application/mbms-envelope+xml", "application/mbms-msk-response+xml", "application/mbms-msk+xml", "application/mbms-protection-description+xml", "application/mbms-reception-report+xml", "application/mbms-register-response+xml", "application/mbms-register+xml", "application/mbms-schedule+xml", "application/mbms-user-service-description+xml", "application/mbox", "application/media_control+xml", "application/media-policy-dataset+xml", "application/mediaservercontrol+xml", "application/merge-patch+json", "application/metalink4+xml", "application/mets+xml", "application/MF4", "application/mikey", "application/mipc", "application/mmt-aei+xml", "application/mmt-usd+xml", "application/mods+xml", "application/moss-keys", "application/moss-signature", "application/mosskey-data", "application/mosskey-request", "application/mp21", "application/mp4", "application/mpeg4-generic", "application/mpeg4-iod", "application/mpeg4-iod-xmt", "application/mrb-consumer+xml", "application/mrb-publish+xml", "application/msc-ivr+xml", "application/msc-mixer+xml", "application/msword", "application/mud+json", "application/multipart-core", "application/mxf", "application/n-quads", "application/n-triples", "application/nasdata", "application/news-checkgroups", "application/news-groupinfo", "application/news-transmission", "application/nlsml+xml", "application/node", "application/nss", "application/ocsp-request", "application/ocsp-response", "application/octet-stream", "application/ODA", "application/odm+xml", "application/ODX", "application/oebps-package+xml", "application/ogg", "application/oscore", "application/oxps", "application/p2p-overlay+xml", "application/passport", "application/patch-ops-error+xml", "application/pdf", "application/PDX", "application/pem-certificate-chain", "application/pgp-encrypted", "application/pgp-signature", "application/pidf-diff+xml", "application/pidf+xml", "application/pkcs10", "application/pkcs7-mime", "application/pkcs7-signature", "application/pkcs8", "application/pkcs8-encrypted", "application/pkcs12", "application/pkix-attr-cert", "application/pkix-cert", "application/pkix-crl", "application/pkix-pkipath", "application/pkixcmp", "application/pls+xml", "application/poc-settings+xml", "application/postscript", "application/ppsp-tracker+json", "application/problem+json", "application/problem+xml", "application/provenance+xml", "application/prs.alvestrand.titrax-sheet", "application/prs.cww", "application/prs.hpub+zip", "application/prs.nprend", "application/prs.plucker", "application/prs.rdf-xml-crypt", "application/prs.xsf+xml", "application/pskc+xml", "application/pvd+json", "application/rdf+xml", "application/route-apd+xml", "application/route-s-tsid+xml", "application/route-usd+xml", "application/QSIG", "application/raptorfec", "application/rdap+json", "application/reginfo+xml", "application/relax-ng-compact-syntax", "application/remote-printing", "application/reputon+json", "application/resource-lists-diff+xml", "application/resource-lists+xml", "application/rfc+xml", "application/riscos", "application/rlmi+xml", "application/rls-services+xml", "application/rpki-ghostbusters", "application/rpki-manifest", "application/rpki-publication", "application/rpki-roa", "application/rpki-updown", "application/rtf", "application/rtploopback", "application/rtx", "application/samlassertion+xml", "application/samlmetadata+xml", "application/sbe", "application/sbml+xml", "application/scaip+xml", "application/scim+json", "application/scvp-cv-request", "application/scvp-cv-response", "application/scvp-vp-request", "application/scvp-vp-response", "application/sdp", "application/secevent+jwt", "application/senml-etch+cbor", "application/senml-etch+json", "application/senml-exi", "application/senml+cbor", "application/senml+json", "application/senml+xml", "application/sensml-exi", "application/sensml+cbor", "application/sensml+json", "application/sensml+xml", "application/sep-exi", "application/sep+xml", "application/session-info", "application/set-payment", "application/set-payment-initiation", "application/set-registration", "application/set-registration-initiation", "application/SGML", "application/sgml-open-catalog", "application/shf+xml", "application/sieve", "application/simple-filter+xml", "application/simple-message-summary", "application/simpleSymbolContainer", "application/sipc", "application/slate", "application/smil", "application/smil+xml", "application/smpte336m", "application/soap+fastinfoset", "application/soap+xml", "application/spirits-event+xml", "application/sql", "application/srgs", "application/srgs+xml", "application/sru+xml", "application/ssml+xml", "application/stix+json", "application/swid+xml", "application/tamp-apex-update", "application/tamp-apex-update-confirm", "application/tamp-community-update", "application/tamp-community-update-confirm", "application/tamp-error", "application/tamp-sequence-adjust", "application/tamp-sequence-adjust-confirm", "application/tamp-status-query", "application/tamp-status-response", "application/tamp-update", "application/tamp-update-confirm", "application/taxii+json", "application/td+json", "application/tei+xml", "application/TETRA_ISI", "application/thraud+xml", "application/timestamp-query", "application/timestamp-reply", "application/timestamped-data", "application/tlsrpt+gzip", "application/tlsrpt+json", "application/tnauthlist", "application/trickle-ice-sdpfrag", "application/trig", "application/ttml+xml", "application/tve-trigger", "application/tzif", "application/tzif-leap", "application/ulpfec", "application/urc-grpsheet+xml", "application/urc-ressheet+xml", "application/urc-targetdesc+xml", "application/urc-uisocketdesc+xml", "application/vcard+json", "application/vcard+xml", "application/vemmi", "application/vnd.1000minds.decision-model+xml", "application/vnd.3gpp.access-transfer-events+xml", "application/vnd.3gpp.bsf+xml", "application/vnd.3gpp.GMOP+xml", "application/vnd.3gpp.mc-signalling-ear", "application/vnd.3gpp.mcdata-affiliation-command+xml", "application/vnd.3gpp.mcdata-info+xml", "application/vnd.3gpp.mcdata-payload", "application/vnd.3gpp.mcdata-service-config+xml", "application/vnd.3gpp.mcdata-signalling", "application/vnd.3gpp.mcdata-ue-config+xml", "application/vnd.3gpp.mcdata-user-profile+xml", "application/vnd.3gpp.mcptt-affiliation-command+xml", "application/vnd.3gpp.mcptt-floor-request+xml", "application/vnd.3gpp.mcptt-info+xml", "application/vnd.3gpp.mcptt-location-info+xml", "application/vnd.3gpp.mcptt-mbms-usage-info+xml", "application/vnd.3gpp.mcptt-service-config+xml", "application/vnd.3gpp.mcptt-signed+xml", "application/vnd.3gpp.mcptt-ue-config+xml", "application/vnd.3gpp.mcptt-ue-init-config+xml", "application/vnd.3gpp.mcptt-user-profile+xml", "application/vnd.3gpp.mcvideo-affiliation-command+xml", "application/vnd.3gpp.mcvideo-affiliation-info+xml", "application/vnd.3gpp.mcvideo-info+xml", "application/vnd.3gpp.mcvideo-location-info+xml", "application/vnd.3gpp.mcvideo-mbms-usage-info+xml", "application/vnd.3gpp.mcvideo-service-config+xml", "application/vnd.3gpp.mcvideo-transmission-request+xml", "application/vnd.3gpp.mcvideo-ue-config+xml", "application/vnd.3gpp.mcvideo-user-profile+xml", "application/vnd.3gpp.mid-call+xml", "application/vnd.3gpp.pic-bw-large", "application/vnd.3gpp.pic-bw-small", "application/vnd.3gpp.pic-bw-var", "application/vnd.3gpp-prose-pc3ch+xml", "application/vnd.3gpp-prose+xml", "application/vnd.3gpp.sms", "application/vnd.3gpp.sms+xml", "application/vnd.3gpp.srvcc-ext+xml", "application/vnd.3gpp.SRVCC-info+xml", "application/vnd.3gpp.state-and-event-info+xml", "application/vnd.3gpp.ussd+xml", "application/vnd.3gpp-v2x-local-service-information", "application/vnd.3gpp2.bcmcsinfo+xml", "application/vnd.3gpp2.sms", "application/vnd.3gpp2.tcap", "application/vnd.3lightssoftware.imagescal", "application/vnd.3M.Post-it-Notes", "application/vnd.accpac.simply.aso", "application/vnd.accpac.simply.imp", "application/vnd.acucobol", "application/vnd.acucorp", "application/vnd.adobe.flash.movie", "application/vnd.adobe.formscentral.fcdt", "application/vnd.adobe.fxp", "application/vnd.adobe.partial-upload", "application/vnd.adobe.xdp+xml", "application/vnd.adobe.xfdf", "application/vnd.aether.imp", "application/vnd.afpc.afplinedata", "application/vnd.afpc.afplinedata-pagedef", "application/vnd.afpc.foca-charset", "application/vnd.afpc.foca-codedfont", "application/vnd.afpc.foca-codepage", "application/vnd.afpc.modca", "application/vnd.afpc.modca-formdef", "application/vnd.afpc.modca-mediummap", "application/vnd.afpc.modca-objectcontainer", "application/vnd.afpc.modca-overlay", "application/vnd.afpc.modca-pagesegment", "application/vnd.ah-barcode", "application/vnd.ahead.space", "application/vnd.airzip.filesecure.azf", "application/vnd.airzip.filesecure.azs", "application/vnd.amadeus+json", "application/vnd.amazon.mobi8-ebook", "application/vnd.americandynamics.acc", "application/vnd.amiga.ami", "application/vnd.amundsen.maze+xml", "application/vnd.android.ota", "application/vnd.anki", "application/vnd.anser-web-certificate-issue-initiation", "application/vnd.antix.game-component", "application/vnd.apache.thrift.binary", "application/vnd.apache.thrift.compact", "application/vnd.apache.thrift.json", "application/vnd.api+json", "application/vnd.aplextor.warrp+json", "application/vnd.apothekende.reservation+json", "application/vnd.apple.installer+xml", "application/vnd.apple.keynote", "application/vnd.apple.mpegurl", "application/vnd.apple.numbers", "application/vnd.apple.pages", "application/vnd.arastra.swi", "application/vnd.aristanetworks.swi", "application/vnd.artisan+json", "application/vnd.artsquare", "application/vnd.astraea-software.iota", "application/vnd.audiograph", "application/vnd.autopackage", "application/vnd.avalon+json", "application/vnd.avistar+xml", "application/vnd.balsamiq.bmml+xml", "application/vnd.banana-accounting", "application/vnd.bbf.usp.error", "application/vnd.bbf.usp.msg", "application/vnd.bbf.usp.msg+json", "application/vnd.balsamiq.bmpr", "application/vnd.bekitzur-stech+json", "application/vnd.bint.med-content", "application/vnd.biopax.rdf+xml", "application/vnd.blink-idb-value-wrapper", "application/vnd.blueice.multipass", "application/vnd.bluetooth.ep.oob", "application/vnd.bluetooth.le.oob", "application/vnd.bmi", "application/vnd.bpf", "application/vnd.bpf3", "application/vnd.businessobjects", "application/vnd.byu.uapi+json", "application/vnd.cab-jscript", "application/vnd.canon-cpdl", "application/vnd.canon-lips", "application/vnd.capasystems-pg+json", "application/vnd.cendio.thinlinc.clientconf", "application/vnd.century-systems.tcp_stream", "application/vnd.chemdraw+xml", "application/vnd.chess-pgn", "application/vnd.chipnuts.karaoke-mmd", "application/vnd.ciedi", "application/vnd.cinderella", "application/vnd.cirpack.isdn-ext", "application/vnd.citationstyles.style+xml", "application/vnd.claymore", "application/vnd.cloanto.rp9", "application/vnd.clonk.c4group", "application/vnd.cluetrust.cartomobile-config", "application/vnd.cluetrust.cartomobile-config-pkg", "application/vnd.coffeescript", "application/vnd.collabio.xodocuments.document", "application/vnd.collabio.xodocuments.document-template", "application/vnd.collabio.xodocuments.presentation", "application/vnd.collabio.xodocuments.presentation-template", "application/vnd.collabio.xodocuments.spreadsheet", "application/vnd.collabio.xodocuments.spreadsheet-template", "application/vnd.collection.doc+json", "application/vnd.collection+json", "application/vnd.collection.next+json", "application/vnd.comicbook-rar", "application/vnd.comicbook+zip", "application/vnd.commerce-battelle", "application/vnd.commonspace", "application/vnd.coreos.ignition+json", "application/vnd.cosmocaller", "application/vnd.contact.cmsg", "application/vnd.crick.clicker", "application/vnd.crick.clicker.keyboard", "application/vnd.crick.clicker.palette", "application/vnd.crick.clicker.template", "application/vnd.crick.clicker.wordbank", "application/vnd.criticaltools.wbs+xml", "application/vnd.cryptii.pipe+json", "application/vnd.crypto-shade-file", "application/vnd.ctc-posml", "application/vnd.ctct.ws+xml", "application/vnd.cups-pdf", "application/vnd.cups-postscript", "application/vnd.cups-ppd", "application/vnd.cups-raster", "application/vnd.cups-raw", "application/vnd.curl", "application/vnd.cyan.dean.root+xml", "application/vnd.cybank", "application/vnd.d2l.coursepackage1p0+zip", "application/vnd.dart", "application/vnd.data-vision.rdz", "application/vnd.datapackage+json", "application/vnd.dataresource+json", "application/vnd.dbf", "application/vnd.debian.binary-package", "application/vnd.dece.data", "application/vnd.dece.ttml+xml", "application/vnd.dece.unspecified", "application/vnd.dece.zip", "application/vnd.denovo.fcselayout-link", "application/vnd.desmume.movie", "application/vnd.dir-bi.plate-dl-nosuffix", "application/vnd.dm.delegation+xml", "application/vnd.dna", "application/vnd.document+json", "application/vnd.dolby.mobile.1", "application/vnd.dolby.mobile.2", "application/vnd.doremir.scorecloud-binary-document", "application/vnd.dpgraph", "application/vnd.dreamfactory", "application/vnd.drive+json", "application/vnd.dtg.local", "application/vnd.dtg.local.flash", "application/vnd.dtg.local.html", "application/vnd.dvb.ait", "application/vnd.dvb.dvbisl+xml", "application/vnd.dvb.dvbj", "application/vnd.dvb.esgcontainer", "application/vnd.dvb.ipdcdftnotifaccess", "application/vnd.dvb.ipdcesgaccess", "application/vnd.dvb.ipdcesgaccess2", "application/vnd.dvb.ipdcesgpdd", "application/vnd.dvb.ipdcroaming", "application/vnd.dvb.iptv.alfec-base", "application/vnd.dvb.iptv.alfec-enhancement", "application/vnd.dvb.notif-aggregate-root+xml", "application/vnd.dvb.notif-container+xml", "application/vnd.dvb.notif-generic+xml", "application/vnd.dvb.notif-ia-msglist+xml", "application/vnd.dvb.notif-ia-registration-request+xml", "application/vnd.dvb.notif-ia-registration-response+xml", "application/vnd.dvb.notif-init+xml", "application/vnd.dvb.pfr", "application/vnd.dvb.service", "application/vnd.dxr", "application/vnd.dynageo", "application/vnd.dzr", "application/vnd.easykaraoke.cdgdownload", "application/vnd.ecip.rlp", "application/vnd.ecdis-update", "application/vnd.ecowin.chart", "application/vnd.ecowin.filerequest", "application/vnd.ecowin.fileupdate", "application/vnd.ecowin.series", "application/vnd.ecowin.seriesrequest", "application/vnd.ecowin.seriesupdate", "application/vnd.efi.img", "application/vnd.efi.iso", "application/vnd.emclient.accessrequest+xml", "application/vnd.enliven", "application/vnd.enphase.envoy", "application/vnd.eprints.data+xml", "application/vnd.epson.esf", "application/vnd.epson.msf", "application/vnd.epson.quickanime", "application/vnd.epson.salt", "application/vnd.epson.ssf", "application/vnd.ericsson.quickcall", "application/vnd.espass-espass+zip", "application/vnd.eszigno3+xml", "application/vnd.etsi.aoc+xml", "application/vnd.etsi.asic-s+zip", "application/vnd.etsi.asic-e+zip", "application/vnd.etsi.cug+xml", "application/vnd.etsi.iptvcommand+xml", "application/vnd.etsi.iptvdiscovery+xml", "application/vnd.etsi.iptvprofile+xml", "application/vnd.etsi.iptvsad-bc+xml", "application/vnd.etsi.iptvsad-cod+xml", "application/vnd.etsi.iptvsad-npvr+xml", "application/vnd.etsi.iptvservice+xml", "application/vnd.etsi.iptvsync+xml", "application/vnd.etsi.iptvueprofile+xml", "application/vnd.etsi.mcid+xml", "application/vnd.etsi.mheg5", "application/vnd.etsi.overload-control-policy-dataset+xml", "application/vnd.etsi.pstn+xml", "application/vnd.etsi.sci+xml", "application/vnd.etsi.simservs+xml", "application/vnd.etsi.timestamp-token", "application/vnd.etsi.tsl+xml", "application/vnd.etsi.tsl.der", "application/vnd.evolv.ecig.profile", "application/vnd.evolv.ecig.settings", "application/vnd.evolv.ecig.theme", "application/vnd.eudora.data", "application/vnd.exstream-empower+zip", "application/vnd.exstream-package", "application/vnd.ezpix-album", "application/vnd.ezpix-package", "application/vnd.f-secure.mobile", "application/vnd.fastcopy-disk-image", "application/vnd.fdf", "application/vnd.fdsn.mseed", "application/vnd.fdsn.seed", "application/vnd.ffsns", "application/vnd.ficlab.flb+zip", "application/vnd.filmit.zfc", "application/vnd.fints", "application/vnd.firemonkeys.cloudcell", "application/vnd.FloGraphIt", "application/vnd.fluxtime.clip", "application/vnd.font-fontforge-sfd", "application/vnd.framemaker", "application/vnd.frogans.fnc", "application/vnd.frogans.ltf", "application/vnd.fsc.weblaunch", "application/vnd.fujitsu.oasys", "application/vnd.fujitsu.oasys2", "application/vnd.fujitsu.oasys3", "application/vnd.fujitsu.oasysgp", "application/vnd.fujitsu.oasysprs", "application/vnd.fujixerox.ART4", "application/vnd.fujixerox.ART-EX", "application/vnd.fujixerox.ddd", "application/vnd.fujixerox.docuworks", "application/vnd.fujixerox.docuworks.binder", "application/vnd.fujixerox.docuworks.container", "application/vnd.fujixerox.HBPL", "application/vnd.fut-misnet", "application/vnd.futoin+cbor", "application/vnd.futoin+json", "application/vnd.fuzzysheet", "application/vnd.genomatix.tuxedo", "application/vnd.gentics.grd+json", "application/vnd.geo+json", "application/vnd.geocube+xml", "application/vnd.geogebra.file", "application/vnd.geogebra.tool", "application/vnd.geometry-explorer", "application/vnd.geonext", "application/vnd.geoplan", "application/vnd.geospace", "application/vnd.gerber", "application/vnd.globalplatform.card-content-mgt", "application/vnd.globalplatform.card-content-mgt-response", "application/vnd.gmx", "application/vnd.google-earth.kml+xml", "application/vnd.google-earth.kmz", "application/vnd.gov.sk.e-form+xml", "application/vnd.gov.sk.e-form+zip", "application/vnd.gov.sk.xmldatacontainer+xml", "application/vnd.grafeq", "application/vnd.gridmp", "application/vnd.groove-account", "application/vnd.groove-help", "application/vnd.groove-identity-message", "application/vnd.groove-injector", "application/vnd.groove-tool-message", "application/vnd.groove-tool-template", "application/vnd.groove-vcard", "application/vnd.hal+json", "application/vnd.hal+xml", "application/vnd.HandHeld-Entertainment+xml", "application/vnd.hbci", "application/vnd.hc+json", "application/vnd.hcl-bireports", "application/vnd.hdt", "application/vnd.heroku+json", "application/vnd.hhe.lesson-player", "application/vnd.hp-HPGL", "application/vnd.hp-hpid", "application/vnd.hp-hps", "application/vnd.hp-jlyt", "application/vnd.hp-PCL", "application/vnd.hp-PCLXL", "application/vnd.httphone", "application/vnd.hydrostatix.sof-data", "application/vnd.hyper-item+json", "application/vnd.hyper+json", "application/vnd.hyperdrive+json", "application/vnd.hzn-3d-crossword", "application/vnd.ibm.afplinedata", "application/vnd.ibm.electronic-media", "application/vnd.ibm.MiniPay", "application/vnd.ibm.modcap", "application/vnd.ibm.rights-management", "application/vnd.ibm.secure-container", "application/vnd.iccprofile", "application/vnd.ieee.1905", "application/vnd.igloader", "application/vnd.imagemeter.folder+zip", "application/vnd.imagemeter.image+zip", "application/vnd.immervision-ivp", "application/vnd.immervision-ivu", "application/vnd.ims.imsccv1p1", "application/vnd.ims.imsccv1p2", "application/vnd.ims.imsccv1p3", "application/vnd.ims.lis.v2.result+json", "application/vnd.ims.lti.v2.toolconsumerprofile+json", "application/vnd.ims.lti.v2.toolproxy.id+json", "application/vnd.ims.lti.v2.toolproxy+json", "application/vnd.ims.lti.v2.toolsettings+json", "application/vnd.ims.lti.v2.toolsettings.simple+json", "application/vnd.informedcontrol.rms+xml", "application/vnd.infotech.project", "application/vnd.infotech.project+xml", "application/vnd.informix-visionary", "application/vnd.innopath.wamp.notification", "application/vnd.insors.igm", "application/vnd.intercon.formnet", "application/vnd.intergeo", "application/vnd.intertrust.digibox", "application/vnd.intertrust.nncp", "application/vnd.intu.qbo", "application/vnd.intu.qfx", "application/vnd.iptc.g2.catalogitem+xml", "application/vnd.iptc.g2.conceptitem+xml", "application/vnd.iptc.g2.knowledgeitem+xml", "application/vnd.iptc.g2.newsitem+xml", "application/vnd.iptc.g2.newsmessage+xml", "application/vnd.iptc.g2.packageitem+xml", "application/vnd.iptc.g2.planningitem+xml", "application/vnd.ipunplugged.rcprofile", "application/vnd.irepository.package+xml", "application/vnd.is-xpr", "application/vnd.isac.fcs", "application/vnd.jam", "application/vnd.iso11783-10+zip", "application/vnd.japannet-directory-service", "application/vnd.japannet-jpnstore-wakeup", "application/vnd.japannet-payment-wakeup", "application/vnd.japannet-registration", "application/vnd.japannet-registration-wakeup", "application/vnd.japannet-setstore-wakeup", "application/vnd.japannet-verification", "application/vnd.japannet-verification-wakeup", "application/vnd.jcp.javame.midlet-rms", "application/vnd.jisp", "application/vnd.joost.joda-archive", "application/vnd.jsk.isdn-ngn", "application/vnd.kahootz", "application/vnd.kde.karbon", "application/vnd.kde.kchart", "application/vnd.kde.kformula", "application/vnd.kde.kivio", "application/vnd.kde.kontour", "application/vnd.kde.kpresenter", "application/vnd.kde.kspread", "application/vnd.kde.kword", "application/vnd.kenameaapp", "application/vnd.kidspiration", "application/vnd.Kinar", "application/vnd.koan", "application/vnd.kodak-descriptor", "application/vnd.las", "application/vnd.las.las+json", "application/vnd.las.las+xml", "application/vnd.laszip", "application/vnd.leap+json", "application/vnd.liberty-request+xml", "application/vnd.llamagraphics.life-balance.desktop", "application/vnd.llamagraphics.life-balance.exchange+xml", "application/vnd.logipipe.circuit+zip", "application/vnd.loom", "application/vnd.lotus-1-2-3", "application/vnd.lotus-approach", "application/vnd.lotus-freelance", "application/vnd.lotus-notes", "application/vnd.lotus-organizer", "application/vnd.lotus-screencam", "application/vnd.lotus-wordpro", "application/vnd.macports.portpkg", "application/vnd.mapbox-vector-tile", "application/vnd.marlin.drm.actiontoken+xml", "application/vnd.marlin.drm.conftoken+xml", "application/vnd.marlin.drm.license+xml", "application/vnd.marlin.drm.mdcf", "application/vnd.mason+json", "application/vnd.maxmind.maxmind-db", "application/vnd.mcd", "application/vnd.medcalcdata", "application/vnd.mediastation.cdkey", "application/vnd.meridian-slingshot", "application/vnd.MFER", "application/vnd.mfmp", "application/vnd.micro+json", "application/vnd.micrografx.flo", "application/vnd.micrografx.igx", "application/vnd.microsoft.portable-executable", "application/vnd.microsoft.windows.thumbnail-cache", "application/vnd.miele+json", "application/vnd.mif", "application/vnd.minisoft-hp3000-save", "application/vnd.mitsubishi.misty-guard.trustweb", "application/vnd.Mobius.DAF", "application/vnd.Mobius.DIS", "application/vnd.Mobius.MBK", "application/vnd.Mobius.MQY", "application/vnd.Mobius.MSL", "application/vnd.Mobius.PLC", "application/vnd.Mobius.TXF", "application/vnd.mophun.- application", "application/vnd.mophun.certificate", "application/vnd.motorola.flexsuite", "application/vnd.motorola.flexsuite.adsi", "application/vnd.motorola.flexsuite.fis", "application/vnd.motorola.flexsuite.gotap", "application/vnd.motorola.flexsuite.kmr", "application/vnd.motorola.flexsuite.ttc", "application/vnd.motorola.flexsuite.wem", "application/vnd.motorola.iprm", "application/vnd.mozilla.xul+xml", "application/vnd.ms-artgalry", "application/vnd.ms-asf", "application/vnd.ms-cab-compressed", "application/vnd.ms-3mfdocument", "application/vnd.ms-excel", "application/vnd.ms-excel.addin.macroEnabled.12", "application/vnd.ms-excel.sheet.binary.macroEnabled.12", "application/vnd.ms-excel.sheet.macroEnabled.12", "application/vnd.ms-excel.template.macroEnabled.12", "application/vnd.ms-fontobject", "application/vnd.ms-htmlhelp", "application/vnd.ms-ims", "application/vnd.ms-lrm", "application/vnd.ms-office.activeX+xml", "application/vnd.ms-officetheme", "application/vnd.ms-playready.initiator+xml", "application/vnd.ms-powerpoint", "application/vnd.ms-powerpoint.addin.macroEnabled.12", "application/vnd.ms-powerpoint.presentation.macroEnabled.12", "application/vnd.ms-powerpoint.slide.macroEnabled.12", "application/vnd.ms-powerpoint.slideshow.macroEnabled.12", "application/vnd.ms-powerpoint.template.macroEnabled.12", "application/vnd.ms-PrintDeviceCapabilities+xml", "application/vnd.ms-PrintSchemaTicket+xml", "application/vnd.ms-project", "application/vnd.ms-tnef", "application/vnd.ms-windows.devicepairing", "application/vnd.ms-windows.nwprinting.oob", "application/vnd.ms-windows.printerpairing", "application/vnd.ms-windows.wsd.oob", "application/vnd.ms-wmdrm.lic-chlg-req", "application/vnd.ms-wmdrm.lic-resp", "application/vnd.ms-wmdrm.meter-chlg-req", "application/vnd.ms-wmdrm.meter-resp", "application/vnd.ms-word.document.macroEnabled.12", "application/vnd.ms-word.template.macroEnabled.12", "application/vnd.ms-works", "application/vnd.ms-wpl", "application/vnd.ms-xpsdocument", "application/vnd.msa-disk-image", "application/vnd.mseq", "application/vnd.msign", "application/vnd.multiad.creator", "application/vnd.multiad.creator.cif", "application/vnd.musician", "application/vnd.music-niff", "application/vnd.muvee.style", "application/vnd.mynfc", "application/vnd.ncd.control", "application/vnd.ncd.reference", "application/vnd.nearst.inv+json", "application/vnd.nervana", "application/vnd.netfpx", "application/vnd.neurolanguage.nlu", "application/vnd.nimn", "application/vnd.nintendo.snes.rom", "application/vnd.nintendo.nitro.rom", "application/vnd.nitf", "application/vnd.noblenet-directory", "application/vnd.noblenet-sealer", "application/vnd.noblenet-web", "application/vnd.nokia.catalogs", "application/vnd.nokia.conml+wbxml", "application/vnd.nokia.conml+xml", "application/vnd.nokia.iptv.config+xml", "application/vnd.nokia.iSDS-radio-presets", "application/vnd.nokia.landmark+wbxml", "application/vnd.nokia.landmark+xml", "application/vnd.nokia.landmarkcollection+xml", "application/vnd.nokia.ncd", "application/vnd.nokia.n-gage.ac+xml", "application/vnd.nokia.n-gage.data", "application/vnd.nokia.n-gage.symbian.install", "application/vnd.nokia.pcd+wbxml", "application/vnd.nokia.pcd+xml", "application/vnd.nokia.radio-preset", "application/vnd.nokia.radio-presets", "application/vnd.novadigm.EDM", "application/vnd.novadigm.EDX", "application/vnd.novadigm.EXT", "application/vnd.ntt-local.content-share", "application/vnd.ntt-local.file-transfer", "application/vnd.ntt-local.ogw_remote-access", "application/vnd.ntt-local.sip-ta_remote", "application/vnd.ntt-local.sip-ta_tcp_stream", "application/vnd.oasis.opendocument.chart", "application/vnd.oasis.opendocument.chart-template", "application/vnd.oasis.opendocument.database", "application/vnd.oasis.opendocument.formula", "application/vnd.oasis.opendocument.formula-template", "application/vnd.oasis.opendocument.graphics", "application/vnd.oasis.opendocument.graphics-template", "application/vnd.oasis.opendocument.image", "application/vnd.oasis.opendocument.image-template", "application/vnd.oasis.opendocument.presentation", "application/vnd.oasis.opendocument.presentation-template", "application/vnd.oasis.opendocument.spreadsheet", "application/vnd.oasis.opendocument.spreadsheet-template", "application/vnd.oasis.opendocument.text", "application/vnd.oasis.opendocument.text-master", "application/vnd.oasis.opendocument.text-template", "application/vnd.oasis.opendocument.text-web", "application/vnd.obn", "application/vnd.ocf+cbor", "application/vnd.oci.image.manifest.v1+json", "application/vnd.oftn.l10n+json", "application/vnd.oipf.contentaccessdownload+xml", "application/vnd.oipf.contentaccessstreaming+xml", "application/vnd.oipf.cspg-hexbinary", "application/vnd.oipf.dae.svg+xml", "application/vnd.oipf.dae.xhtml+xml", "application/vnd.oipf.mippvcontrolmessage+xml", "application/vnd.oipf.pae.gem", "application/vnd.oipf.spdiscovery+xml", "application/vnd.oipf.spdlist+xml", "application/vnd.oipf.ueprofile+xml", "application/vnd.oipf.userprofile+xml", "application/vnd.olpc-sugar", "application/vnd.oma.bcast.associated-procedure-parameter+xml", "application/vnd.oma.bcast.drm-trigger+xml", "application/vnd.oma.bcast.imd+xml", "application/vnd.oma.bcast.ltkm", "application/vnd.oma.bcast.notification+xml", "application/vnd.oma.bcast.provisioningtrigger", "application/vnd.oma.bcast.sgboot", "application/vnd.oma.bcast.sgdd+xml", "application/vnd.oma.bcast.sgdu", "application/vnd.oma.bcast.simple-symbol-container", "application/vnd.oma.bcast.smartcard-trigger+xml", "application/vnd.oma.bcast.sprov+xml", "application/vnd.oma.bcast.stkm", "application/vnd.oma.cab-address-book+xml", "application/vnd.oma.cab-feature-handler+xml", "application/vnd.oma.cab-pcc+xml", "application/vnd.oma.cab-subs-invite+xml", "application/vnd.oma.cab-user-prefs+xml", "application/vnd.oma.dcd", "application/vnd.oma.dcdc", "application/vnd.oma.dd2+xml", "application/vnd.oma.drm.risd+xml", "application/vnd.oma.group-usage-list+xml", "application/vnd.oma.lwm2m+json", "application/vnd.oma.lwm2m+tlv", "application/vnd.oma.pal+xml", "application/vnd.oma.poc.detailed-progress-report+xml", "application/vnd.oma.poc.final-report+xml", "application/vnd.oma.poc.groups+xml", "application/vnd.oma.poc.invocation-descriptor+xml", "application/vnd.oma.poc.optimized-progress-report+xml", "application/vnd.oma.push", "application/vnd.oma.scidm.messages+xml", "application/vnd.oma.xcap-directory+xml", "application/vnd.omads-email+xml", "application/vnd.omads-file+xml", "application/vnd.omads-folder+xml", "application/vnd.omaloc-supl-init", "application/vnd.oma-scws-config", "application/vnd.oma-scws-http-request", "application/vnd.oma-scws-http-response", "application/vnd.onepager", "application/vnd.onepagertamp", "application/vnd.onepagertamx", "application/vnd.onepagertat", "application/vnd.onepagertatp", "application/vnd.onepagertatx", "application/vnd.openblox.game-binary", "application/vnd.openblox.game+xml", "application/vnd.openeye.oeb", "application/vnd.openstreetmap.data+xml", "application/vnd.openxmlformats-officedocument.custom-properties+xml", "application/vnd.openxmlformats-officedocument.customXmlProperties+xml", "application/vnd.openxmlformats-officedocument.drawing+xml", "application/vnd.openxmlformats-officedocument.drawingml.chart+xml", "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml", "application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml", "application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml", "application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml", "application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml", "application/vnd.openxmlformats-officedocument.extended-properties+xml", "application/vnd.openxmlformats-officedocument.presentationml.commentAuthors+xml", "application/vnd.openxmlformats-officedocument.presentationml.comments+xml", "application/vnd.openxmlformats-officedocument.presentationml.handoutMaster+xml", "application/vnd.openxmlformats-officedocument.presentationml.notesMaster+xml", "application/vnd.openxmlformats-officedocument.presentationml.notesSlide+xml", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml", "application/vnd.openxmlformats-officedocument.presentationml.presProps+xml", "application/vnd.openxmlformats-officedocument.presentationml.slide", "application/vnd.openxmlformats-officedocument.presentationml.slide+xml", "application/vnd.openxmlformats-officedocument.presentationml.slideLayout+xml", "application/vnd.openxmlformats-officedocument.presentationml.slideMaster+xml", "application/vnd.openxmlformats-officedocument.presentationml.slideshow", "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml", "application/vnd.openxmlformats-officedocument.presentationml.slideUpdateInfo+xml", "application/vnd.openxmlformats-officedocument.presentationml.tableStyles+xml", "application/vnd.openxmlformats-officedocument.presentationml.tags+xml", "application/vnd.openxmlformats-officedocument.presentationml.template", "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml", "application/vnd.openxmlformats-officedocument.presentationml.viewProps+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.template", "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml", "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml", "application/vnd.openxmlformats-officedocument.theme+xml", "application/vnd.openxmlformats-officedocument.themeOverride+xml", "application/vnd.openxmlformats-officedocument.vmlDrawing", "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml", "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml", "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml", "application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml", "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml", "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml", "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml", "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml", "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml", "application/vnd.openxmlformats-officedocument.wordprocessingml.template", "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml", "application/vnd.openxmlformats-officedocument.wordprocessingml.webSettings+xml", "application/vnd.openxmlformats-package.core-properties+xml", "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml", "application/vnd.openxmlformats-package.relationships+xml", "application/vnd.oracle.resource+json", "application/vnd.orange.indata", "application/vnd.osa.netdeploy", "application/vnd.osgeo.mapguide.package", "application/vnd.osgi.bundle", "application/vnd.osgi.dp", "application/vnd.osgi.subsystem", "application/vnd.otps.ct-kip+xml", "application/vnd.oxli.countgraph", "application/vnd.pagerduty+json", "application/vnd.palm", "application/vnd.panoply", "application/vnd.paos.xml", "application/vnd.patentdive", "application/vnd.patientecommsdoc", "application/vnd.pawaafile", "application/vnd.pcos", "application/vnd.pg.format", "application/vnd.pg.osasli", "application/vnd.piaccess.- application-licence", "application/vnd.picsel", "application/vnd.pmi.widget", "application/vnd.poc.group-advertisement+xml", "application/vnd.pocketlearn", "application/vnd.powerbuilder6", "application/vnd.powerbuilder6-s", "application/vnd.powerbuilder7", "application/vnd.powerbuilder75", "application/vnd.powerbuilder75-s", "application/vnd.powerbuilder7-s", "application/vnd.preminet", "application/vnd.previewsystems.box", "application/vnd.proteus.magazine", "application/vnd.psfs", "application/vnd.publishare-delta-tree", "application/vnd.pvi.ptid1", "application/vnd.pwg-multiplexed", "application/vnd.pwg-xhtml-print+xml", "application/vnd.qualcomm.brew-app-res", "application/vnd.quarantainenet", "application/vnd.Quark.QuarkXPress", "application/vnd.quobject-quoxdocument", "application/vnd.radisys.moml+xml", "application/vnd.radisys.msml-audit-conf+xml", "application/vnd.radisys.msml-audit-conn+xml", "application/vnd.radisys.msml-audit-dialog+xml", "application/vnd.radisys.msml-audit-stream+xml", "application/vnd.radisys.msml-audit+xml", "application/vnd.radisys.msml-conf+xml", "application/vnd.radisys.msml-dialog-base+xml", "application/vnd.radisys.msml-dialog-fax-detect+xml", "application/vnd.radisys.msml-dialog-fax-sendrecv+xml", "application/vnd.radisys.msml-dialog-group+xml", "application/vnd.radisys.msml-dialog-speech+xml", "application/vnd.radisys.msml-dialog-transform+xml", "application/vnd.radisys.msml-dialog+xml", "application/vnd.radisys.msml+xml", "application/vnd.rainstor.data", "application/vnd.rapid", "application/vnd.rar", "application/vnd.realvnc.bed", "application/vnd.recordare.musicxml", "application/vnd.recordare.musicxml+xml", "application/vnd.RenLearn.rlprint", "application/vnd.restful+json", "application/vnd.rig.cryptonote", "application/vnd.route66.link66+xml", "application/vnd.rs-274x", "application/vnd.ruckus.download", "application/vnd.s3sms", "application/vnd.sailingtracker.track", "application/vnd.sar", "application/vnd.sbm.cid", "application/vnd.sbm.mid2", "application/vnd.scribus", "application/vnd.sealed.3df", "application/vnd.sealed.csf", "application/vnd.sealed.doc", "application/vnd.sealed.eml", "application/vnd.sealed.mht", "application/vnd.sealed.net", "application/vnd.sealed.ppt", "application/vnd.sealed.tiff", "application/vnd.sealed.xls", "application/vnd.sealedmedia.softseal.html", "application/vnd.sealedmedia.softseal.pdf", "application/vnd.seemail", "application/vnd.sema", "application/vnd.semd", "application/vnd.semf", "application/vnd.shade-save-file", "application/vnd.shana.informed.formdata", "application/vnd.shana.informed.formtemplate", "application/vnd.shana.informed.interchange", "application/vnd.shana.informed.package", "application/vnd.shootproof+json", "application/vnd.shopkick+json", "application/vnd.shp", "application/vnd.shx", "application/vnd.sigrok.session", "application/vnd.SimTech-MindMapper", "application/vnd.siren+json", "application/vnd.smaf", "application/vnd.smart.notebook", "application/vnd.smart.teacher", "application/vnd.snesdev-page-table", "application/vnd.software602.filler.form+xml", "application/vnd.software602.filler.form-xml-zip", "application/vnd.solent.sdkm+xml", "application/vnd.spotfire.dxp", "application/vnd.spotfire.sfs", "application/vnd.sqlite3", "application/vnd.sss-cod", "application/vnd.sss-dtf", "application/vnd.sss-ntf", "application/vnd.stepmania.package", "application/vnd.stepmania.stepchart", "application/vnd.street-stream", "application/vnd.sun.wadl+xml", "application/vnd.sus-calendar", "application/vnd.svd", "application/vnd.swiftview-ics", "application/vnd.syncml.dm.notification", "application/vnd.syncml.dmddf+xml", "application/vnd.syncml.dmtnds+wbxml", "application/vnd.syncml.dmtnds+xml", "application/vnd.syncml.dmddf+wbxml", "application/vnd.syncml.dm+wbxml", "application/vnd.syncml.dm+xml", "application/vnd.syncml.ds.notification", "application/vnd.syncml+xml", "application/vnd.tableschema+json", "application/vnd.tao.intent-module-archive", "application/vnd.tcpdump.pcap", "application/vnd.think-cell.ppttc+json", "application/vnd.tml", "application/vnd.tmd.mediaflex.api+xml", "application/vnd.tmobile-livetv", "application/vnd.tri.onesource", "application/vnd.trid.tpt", "application/vnd.triscape.mxs", "application/vnd.trueapp", "application/vnd.truedoc", "application/vnd.ubisoft.webplayer", "application/vnd.ufdl", "application/vnd.uiq.theme", "application/vnd.umajin", "application/vnd.unity", "application/vnd.uoml+xml", "application/vnd.uplanet.alert", "application/vnd.uplanet.alert-wbxml", "application/vnd.uplanet.bearer-choice", "application/vnd.uplanet.bearer-choice-wbxml", "application/vnd.uplanet.cacheop", "application/vnd.uplanet.cacheop-wbxml", "application/vnd.uplanet.channel", "application/vnd.uplanet.channel-wbxml", "application/vnd.uplanet.list", "application/vnd.uplanet.listcmd", "application/vnd.uplanet.listcmd-wbxml", "application/vnd.uplanet.list-wbxml", "application/vnd.uri-map", "application/vnd.uplanet.signal", "application/vnd.valve.source.material", "application/vnd.vcx", "application/vnd.vd-study", "application/vnd.vectorworks", "application/vnd.vel+json", "application/vnd.verimatrix.vcas", "application/vnd.veryant.thin", "application/vnd.ves.encrypted", "application/vnd.vidsoft.vidconference", "application/vnd.visio", "application/vnd.visionary", "application/vnd.vividence.scriptfile", "application/vnd.vsf", "application/vnd.wap.sic", "application/vnd.wap.slc", "application/vnd.wap.wbxml", "application/vnd.wap.wmlc", "application/vnd.wap.wmlscriptc", "application/vnd.webturbo", "application/vnd.wfa.p2p", "application/vnd.wfa.wsc", "application/vnd.windows.devicepairing", "application/vnd.wmc", "application/vnd.wmf.bootstrap", "application/vnd.wolfram.mathematica", "application/vnd.wolfram.mathematica.package", "application/vnd.wolfram.player", "application/vnd.wordperfect", "application/vnd.wqd", "application/vnd.wrq-hp3000-labelled", "application/vnd.wt.stf", "application/vnd.wv.csp+xml", "application/vnd.wv.csp+wbxml", "application/vnd.wv.ssp+xml", "application/vnd.xacml+json", "application/vnd.xara", "application/vnd.xfdl", "application/vnd.xfdl.webform", "application/vnd.xmi+xml", "application/vnd.xmpie.cpkg", "application/vnd.xmpie.dpkg", "application/vnd.xmpie.plan", "application/vnd.xmpie.ppkg", "application/vnd.xmpie.xlim", "application/vnd.yamaha.hv-dic", "application/vnd.yamaha.hv-script", "application/vnd.yamaha.hv-voice", "application/vnd.yamaha.openscoreformat.osfpvg+xml", "application/vnd.yamaha.openscoreformat", "application/vnd.yamaha.remote-setup", "application/vnd.yamaha.smaf-audio", "application/vnd.yamaha.smaf-phrase", "application/vnd.yamaha.through-ngn", "application/vnd.yamaha.tunnel-udpencap", "application/vnd.yaoweme", "application/vnd.yellowriver-custom-menu", "application/vnd.youtube.yt", "application/vnd.zul", "application/vnd.zzazz.deck+xml", "application/voicexml+xml", "application/voucher-cms+json", "application/vq-rtcpxr", "application/watcherinfo+xml", "application/webpush-options+json", "application/whoispp-query", "application/whoispp-response", "application/widget", "application/wita", "application/wordperfect5.1", "application/wsdl+xml", "application/wspolicy+xml", "application/x-pki-message", "application/x-www-form-urlencoded", "application/x-x509-ca-cert", "application/x-x509-ca-ra-cert", "application/x-x509-next-ca-cert", "application/x400-bp", "application/xacml+xml", "application/xcap-att+xml", "application/xcap-caps+xml", "application/xcap-diff+xml", "application/xcap-el+xml", "application/xcap-error+xml", "application/xcap-ns+xml", "application/xcon-conference-info-diff+xml", "application/xcon-conference-info+xml", "application/xenc+xml", "application/xhtml+xml", "application/xliff+xml", "application/xml", "application/xml-dtd", "application/xml-external-parsed-entity", "application/xml-patch+xml", "application/xmpp+xml", "application/xop+xml", "application/xv+xml", "application/yang", "application/yang-data+json", "application/yang-data+xml", "application/yang-patch+json", "application/yang-patch+xml", "application/yin+xml", "application/zip", "application/zlib", "application/zstd", "audio/1d-interleaved-parityfec", "audio/32kadpcm", "audio/3gpp", "audio/3gpp2", "audio/aac", "audio/ac3", "audio/AMR", "audio/AMR-WB", "audio/amr-wb+", "audio/aptx", "audio/asc", "audio/ATRAC-ADVANCED-LOSSLESS", "audio/ATRAC-X", "audio/ATRAC3", "audio/basic", "audio/BV16", "audio/BV32", "audio/clearmode", "audio/CN", "audio/DAT12", "audio/dls", "audio/dsr-es201108", "audio/dsr-es202050", "audio/dsr-es202211", "audio/dsr-es202212", "audio/DV", "audio/DVI4", "audio/eac3", "audio/encaprtp", "audio/EVRC", "audio/EVRC-QCP", "audio/EVRC0", "audio/EVRC1", "audio/EVRCB", "audio/EVRCB0", "audio/EVRCB1", "audio/EVRCNW", "audio/EVRCNW0", "audio/EVRCNW1", "audio/EVRCWB", "audio/EVRCWB0", "audio/EVRCWB1", "audio/EVS", "audio/example", "audio/flexfec", "audio/fwdred", "audio/G711-0", "audio/G719", "audio/G7221", "audio/G722", "audio/G723", "audio/G726-16", "audio/G726-24", "audio/G726-32", "audio/G726-40", "audio/G728", "audio/G729", "audio/G729D", "audio/G729E", "audio/GSM", "audio/GSM-EFR", "audio/GSM-HR-08", "audio/iLBC", "audio/ip-mr_v2.5", "audio/L8", "audio/L16", "audio/L20", "audio/L24", "audio/LPC", "audio/MELP", "audio/MELP600", "audio/MELP1200", "audio/MELP2400", "audio/mhas", "audio/mobile-xmf", "audio/MPA", "audio/mp4", "audio/MP4A-LATM", "audio/mpa-robust", "audio/mpeg", "audio/mpeg4-generic", "audio/ogg", "audio/opus", "audio/PCMA", "audio/PCMA-WB", "audio/PCMU", "audio/PCMU-WB", "audio/prs.sid", "audio/raptorfec", "audio/RED", "audio/rtp-enc-aescm128", "audio/rtploopback", "audio/rtp-midi", "audio/rtx", "audio/SMV", "audio/SMV0", "audio/SMV-QCP", "audio/sp-midi", "audio/speex", "audio/t140c", "audio/t38", "audio/telephone-event", "audio/TETRA_ACELP", "audio/TETRA_ACELP_BB", "audio/tone", "audio/UEMCLIP", "audio/ulpfec", "audio/usac", "audio/VDVI", "audio/VMR-WB", "audio/vnd.3gpp.iufp", "audio/vnd.4SB", "audio/vnd.- audiokoz", "audio/vnd.CELP", "audio/vnd.cisco.nse", "audio/vnd.cmles.radio-events", "audio/vnd.cns.anp1", "audio/vnd.cns.inf1", "audio/vnd.dece.- audio", "audio/vnd.digital-winds", "audio/vnd.dlna.adts", "audio/vnd.dolby.heaac.1", "audio/vnd.dolby.heaac.2", "audio/vnd.dolby.mlp", "audio/vnd.dolby.mps", "audio/vnd.dolby.pl2", "audio/vnd.dolby.pl2x", "audio/vnd.dolby.pl2z", "audio/vnd.dolby.pulse.1", "audio/vnd.dra", "audio/vnd.dts", "audio/vnd.dts.hd", "audio/vnd.dts.uhd", "audio/vnd.dvb.file", "audio/vnd.everad.plj", "audio/vnd.hns.- audio", "audio/vnd.lucent.voice", "audio/vnd.ms-playready.media.pya", "audio/vnd.nokia.mobile-xmf", "audio/vnd.nortel.vbk", "audio/vnd.nuera.ecelp4800", "audio/vnd.nuera.ecelp7470", "audio/vnd.nuera.ecelp9600", "audio/vnd.octel.sbc", "audio/vnd.presonus.multitrack", "audio/vnd.qcelp", "audio/vnd.rhetorex.32kadpcm", "audio/vnd.rip", "audio/vnd.sealedmedia.softseal.mpeg", "audio/vnd.vmx.cvsd", "audio/vorbis", "audio/vorbis-config", "font/collection", "font/otf", "font/sfnt", "font/ttf", "font/woff", "font/woff2", "image/aces", "image/avci", "image/avcs", "image/bmp", "image/cgm", "image/dicom-rle", "image/emf", "image/example", "image/fits", "image/g3fax", "image/heic", "image/heic-sequence", "image/heif", "image/heif-sequence", "image/hej2k", "image/hsj2", "image/jls", "image/jp2", "image/jph", "image/jphc", "image/jpm", "image/jpx", "image/jxr", "image/jxrA", "image/jxrS", "image/jxs", "image/jxsc", "image/jxsi", "image/jxss", "image/naplps", "image/png", "image/prs.btif", "image/prs.pti", "image/pwg-raster", "image/t38", "image/tiff", "image/tiff-fx", "image/vnd.adobe.photoshop", "image/vnd.airzip.accelerator.azv", "image/vnd.cns.inf2", "image/vnd.dece.graphic", "image/vnd.djvu", "image/vnd.dwg", "image/vnd.dxf", "image/vnd.dvb.subtitle", "image/vnd.fastbidsheet", "image/vnd.fpx", "image/vnd.fst", "image/vnd.fujixerox.edmics-mmr", "image/vnd.fujixerox.edmics-rlc", "image/vnd.globalgraphics.pgb", "image/vnd.microsoft.icon", "image/vnd.mix", "image/vnd.ms-modi", "image/vnd.mozilla.apng", "image/vnd.net-fpx", "image/vnd.radiance", "image/vnd.sealed.png", "image/vnd.sealedmedia.softseal.gif", "image/vnd.sealedmedia.softseal.jpg", "image/vnd.svf", "image/vnd.tencent.tap", "image/vnd.valve.source.texture", "image/vnd.wap.wbmp", "image/vnd.xiff", "image/vnd.zbrush.pcx", "image/wmf" ]
      },
      "Language" : {
        "title" : "Language",
        "type" : "string",
        "description" : "The language of the linked document using either two-letter [ISO639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes), or extended [BCP47 language tags](http://www.w3.org/International/articles/language-tags/). The use of lowercase two-letter codes from [ISO639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) is recommended unless there is a clear user need for distinguishing the language subtype.",
        "nullable" : true,
        "enum" : [ "ab", "aa", "af", "sq", "am", "ar", "an", "as", "av", "ae", "ay", "az", "bm", "ba", "eu", "bn", "bh", "bi", "bs", "br", "bg", "my", "ca", "ch", "ce", "ny", "zh", "cv", "kw", "co", "cr", "hr", "cs", "da", "dv", "nl", "dz", "en", "eo", "et", "ee", "fo", "fj", "fi", "fr", "ff", "gl", "ka", "de", "el", "gn", "gu", "ht", "ha", "he", "hz", "hi", "ho", "hu", "ia", "id", "ie", "ga", "ig", "ik", "io", "is", "it", "iu", "ja", "jv", "kl", "kn", "kr", "ks", "kk", "km", "ki", "rw", "ky", "kv", "kg", "ko", "ku", "kj", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "gv", "mk", "mg", "ms", "ml", "mt", "mi", "mr", "mh", "mn", "na", "nv", "nd", "ne", "ng", "nb", "nn", "false", "ii", "nr", "oc", "oj", "cu", "om", "or", "os", "pa", "pi", "fa", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "sa", "sc", "sd", "se", "sm", "sg", "sr", "gd", "sn", "si", "sk", "sl", "so", "st", "es", "su", "sw", "ss", "sv", "ta", "te", "tg", "th", "ti", "bo", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "cy", "wo", "fy", "xh", "yi", "yo", "za", "zu" ]
      },
      "Document_2" : {
        "properties" : {
          "relatedLots" : {
            "title" : "Related lot(s)",
            "type" : "array",
            "description" : "If this document relates to a particular lot, provide the identifier(s) of the related lot(s) here.",
            "nullable" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "LotId" : {
        "type" : "string",
        "readOnly" : true,
        "example" : "1a"
      },
      "Organization" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Organization_1"
        }, {
          "$ref" : "#/components/schemas/Organization_2"
        }, {
          "type" : "object",
          "properties" : {
            "identifier" : {
              "$ref" : "#/components/schemas/Identifier_1"
            },
            "id" : {
              "$ref" : "#/components/schemas/OrgId"
            },
            "additionalIdentifiers" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Identifier_1"
              }
            },
            "address" : {
              "$ref" : "#/components/schemas/Address_1"
            },
            "contactPoint" : {
              "$ref" : "#/components/schemas/ContactPoint_1"
            },
            "details" : {
              "$ref" : "#/components/schemas/OrganizationDetail"
            },
            "roles" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/PartyRole_1"
              }
            }
          }
        } ]
      },
      "Organization_1" : {
        "title" : "Organization",
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "Common name",
            "type" : "string",
            "description" : "A common name for this organization or other participant in the contracting process. The identifier object provides a space for the formal legal name, and so this may either repeat that value, or may provide the common name by which this organization or entity is known. This field may also include details of the department or sub-unit involved in this contracting process.",
            "nullable" : true
          },
          "id" : {
            "title" : "Entity ID",
            "type" : "string",
            "description" : "The ID used for cross-referencing to this party from other sections of the release. This field may be built with the following structure {identifier.scheme}-{identifier.id}(-{department-identifier})."
          },
          "identifier" : {
            "title" : "Primary identifier",
            "description" : "The primary identifier for this organization or participant. Identifiers that uniquely pick out a legal entity should be preferred. Consult the [organization identifier guidance](https://standard.open-contracting.org/latest/en/schema/identifiers/) for the preferred scheme and identifier to use.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Identifier"
            } ]
          },
          "additionalIdentifiers" : {
            "title" : "Additional identifiers",
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of additional / supplemental identifiers for the organization or participant, using the [organization identifier guidance](https://standard.open-contracting.org/latest/en/schema/identifiers/). This can be used to provide an internally used identifier for this organization in addition to the primary legal entity identifier.",
            "items" : {
              "$ref" : "#/components/schemas/Identifier"
            }
          },
          "address" : {
            "title" : "Address",
            "description" : "An address. This may be the legally registered address of the organization, or may be a correspondence address for this particular contracting process.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Address"
            } ]
          },
          "contactPoint" : {
            "title" : "Contact point",
            "description" : "Contact details that can be used for this party.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/ContactPoint"
            } ]
          },
          "roles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartyRole"
            }
          },
          "details" : {
            "title" : "Details",
            "type" : "object",
            "description" : "Additional classification information about parties can be provided using partyDetail extensions that define particular fields and classification schemes.",
            "nullable" : true
          }
        },
        "description" : "A party (organization)"
      },
      "Identifier" : {
        "title" : "Identifier",
        "type" : "object",
        "properties" : {
          "scheme" : {
            "$ref" : "#/components/schemas/OrganizationScheme"
          },
          "id" : {
            "title" : "ID",
            "description" : "The identifier of the organization in the selected scheme.",
            "nullable" : true,
            "example" : "abc12345",
            "oneOf" : [ {
              "type" : "string"
            }, {
              "type" : "integer"
            } ]
          },
          "legalName" : {
            "title" : "Legal Name",
            "type" : "string",
            "description" : "The legally registered name of the organization.",
            "nullable" : true
          },
          "uri" : {
            "title" : "URI",
            "type" : "string",
            "description" : "A URI to identify the organization, such as those provided by [Open Corporates](http://www.opencorporates.com) or some other relevant URI provider. This is not for listing the website of the organization: that can be done through the URL field of the Organization contact point.",
            "format" : "uri",
            "nullable" : true
          }
        },
        "description" : "A unique identifier for a party (organization)."
      },
      "OrganizationScheme" : {
        "title" : "Organisation Scheme",
        "type" : "string",
        "description" : "Organization identifiers should be taken from an existing organization identifier list. The scheme field is used to indicate the list or register from which the identifier is taken. This value should be taken from the [Organization Identifier Scheme](https://standard.open-contracting.org/latest/en/schema/codelists/#organization-identifier-scheme) codelist.",
        "nullable" : true,
        "example" : "GB-COH",
        "enum" : [ "GB-COH", "GB-MPR", "GB-NIC", "GB-CHC", "GB-SC", "GB-WALEDU", "GB-SCOTEDU", "GB-GOR", "GB-LANI", "GB-NHS" ]
      },
      "Address" : {
        "title" : "Address",
        "type" : "object",
        "properties" : {
          "streetAddress" : {
            "title" : "Street address",
            "type" : "string",
            "description" : "The street address. For example, 1600 Amphitheatre Pkwy.",
            "nullable" : true
          },
          "locality" : {
            "title" : "Locality",
            "type" : "string",
            "description" : "The locality. For example, Mountain View.",
            "nullable" : true
          },
          "region" : {
            "title" : "Region",
            "type" : "string",
            "description" : "The region. For example, CA.",
            "nullable" : true
          },
          "postalCode" : {
            "title" : "Postal code",
            "type" : "string",
            "description" : "The postal code. For example, 94043.",
            "nullable" : true
          },
          "countryName" : {
            "title" : "Country name",
            "type" : "string",
            "description" : "The country name. For example, United States.",
            "nullable" : true
          }
        },
        "description" : "An address."
      },
      "ContactPoint" : {
        "title" : "Contact point",
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "Name",
            "type" : "string",
            "description" : "The name of the contact person, department, or contact point, for correspondence relating to this contracting process.",
            "nullable" : true
          },
          "email" : {
            "title" : "Email",
            "type" : "string",
            "description" : "The e-mail address of the contact point/person.",
            "nullable" : true
          },
          "telephone" : {
            "title" : "Telephone",
            "type" : "string",
            "description" : "The telephone number of the contact point/person. This should include the international dialing code.",
            "nullable" : true
          },
          "faxNumber" : {
            "title" : "Fax number",
            "type" : "string",
            "description" : "The fax number of the contact point/person. This should include the international dialing code.",
            "nullable" : true
          },
          "url" : {
            "title" : "URL",
            "type" : "string",
            "description" : "A web address for the contact point/person.",
            "format" : "uri",
            "nullable" : true
          }
        },
        "description" : "A person, contact point or department to contact in relation to this contracting process."
      },
      "PartyRole" : {
        "title" : "Party roles",
        "type" : "string",
        "description" : "The party's role(s) in the contracting process, using the open [partyRole](https://standard.open-contracting.org/latest/en/schema/codelists/#party-role) codelist.",
        "nullable" : true,
        "enum" : [ "buyer", "procuringEntity", "supplier", "tenderer", "funder", "enquirer", "payer", "payee", "reviewBody", "interestedParty" ]
      },
      "Organization_2" : {
        "properties" : {
          "details" : {
            "$ref" : "#/components/schemas/Organization_2_details"
          }
        }
      },
      "PartyScale" : {
        "title" : "Scale",
        "type" : "string",
        "description" : "The size or scale of the organization.",
        "nullable" : true,
        "enum" : [ "micro", "sme", "small", "medium", "large", "selfEmployed" ]
      },
      "Identifier_1" : {
        "title" : "Identifier",
        "description" : "A unique identifier for a party (organization).",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Identifier"
        }, {
          "type" : "object",
          "properties" : {
            "scheme" : {
              "$ref" : "#/components/schemas/OrganizationScheme_1"
            },
            "id" : {
              "example" : "abc1234"
            }
          }
        } ]
      },
      "OrganizationScheme_1" : {
        "title" : "Organisation Scheme",
        "type" : "string",
        "description" : "Organization identifiers should be taken from an existing organization identifier list. The scheme field is used to indicate the list or register from which the identifier is taken. This value should be taken from the [Organization Identifier Scheme](https://standard.open-contracting.org/1.1/en/schema/codelists/#organization-identifier-scheme) codelist.",
        "nullable" : true,
        "example" : "GB-COH",
        "enum" : [ "XI-DUNS", "GB-COH", "GB-MPR", "GB-NIC", "GB-CHC", "GB-SC", "GB-WALEDU", "GB-SCOTEDU", "GB-GOR", "GB-LANI", "GB-NHS" ]
      },
      "OrgId" : {
        "pattern" : "[A-Z]{2}(_([A-Z]+))?-[A-Z0-9_]+-[A-Z0-9]+",
        "type" : "string",
        "readOnly" : true,
        "example" : "GB-COH-05684804"
      },
      "Address_1" : {
        "type" : "object",
        "properties" : {
          "streetAddress" : {
            "description" : "The street address. For example, 1600 Amphitheatre Pkwy."
          },
          "locality" : {
            "description" : "The locality. For example, Mountain View."
          },
          "region" : {
            "description" : "The region. For example, CA."
          },
          "postalCode" : {
            "description" : "The postal code. For example, 94043."
          },
          "countryName" : {
            "description" : "The country name. For example, United States."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Address"
        }, {
          "$ref" : "#/components/schemas/Address_2"
        } ]
      },
      "Address_2" : {
        "properties" : {
          "countryCode" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CountryCode"
            } ]
          }
        }
      },
      "CountryCode" : {
        "title" : "Country code",
        "type" : "string",
        "description" : "The country where the address is located. If you need to use a user-assigned code from ISO 3166-1 alpha-2, [create an issue](https://github.com/open-contracting/standard/issues) to discuss its addition to the `country.csv` codelist.",
        "enum" : [ "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XK", "YE", "YT", "ZA", "ZM", "ZW" ]
      },
      "ContactPoint_1" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ContactPoint"
        } ]
      },
      "OrganizationDetail" : {
        "required" : [ "active", "companyType", "countryCode", "creationDate", "is_vcse", "scale", "status" ],
        "type" : "object",
        "properties" : {
          "scale" : {
            "description" : "The size or scale of the organization. (isSME = is(Scale=sme))"
          },
          "creationDate" : {
            "type" : "string",
            "description" : "Date of organisation creation",
            "example" : "DD/MM/YY"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "Country code of incorporation",
            "example" : "UK"
          },
          "companyType" : {
            "type" : "string",
            "description" : "Type of company",
            "example" : "Type of company"
          },
          "is_vcse" : {
            "type" : "boolean",
            "description" : "Is organisation a Voluntary, Community and Social Enterprise",
            "example" : false
          },
          "status" : {
            "type" : "string",
            "description" : "Organisation Status",
            "example" : "Organisation status"
          },
          "active" : {
            "type" : "boolean",
            "description" : "Is organisation active?",
            "example" : false
          },
          "organisationId" : {
            "type" : "string",
            "nullable" : true
          },
          "isSme" : {
            "type" : "boolean",
            "description" : "Indicates if the organisation qualifies a Small to Medium Enterprise"
          },
          "rightToBuy" : {
            "type" : "boolean"
          },
          "tradingName" : {
            "type" : "string",
            "description" : "Common name used for commercial purposes",
            "nullable" : true
          }
        },
        "description" : "Additional attributes for the Organization object required for CCS Organization Service"
      },
      "PartyRole_1" : {
        "type" : "string",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PartyRole"
        } ],
        "enum" : [ "frameworkOwner" ]
      },
      "DefineEventType" : {
        "type" : "string",
        "description" : "Define event type for POST/PUT (writes).  \nGeneric term for an event put out to the market. There are several types-\n\n  * EOI - Expression of Interest\n  * RFI - Request for Information\n  * PA  - Procurement Assessment\n  * FCA - Further Competition Assessment\n  * DAA - Direct Award Assessment\n  * DA  - Direct Award\n  * FC  - Further Competition\n",
        "enum" : [ "EOI", "RFI", "DA", "FC", "PA", "FCA", "DAA" ]
      },
      "AssessmentId" : {
        "type" : "integer",
        "description" : "Assessment ID provided when a new assessment is created.",
        "readOnly" : true,
        "example" : 1
      },
      "ProjectEventType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EventType"
        }, {
          "type" : "object",
          "properties" : {
            "mandatory" : {
              "type" : "boolean",
              "description" : "Indicates if the event must be carried out as part of the procurement.",
              "readOnly" : true
            },
            "templateGroups" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/TemplateGroup"
              }
            }
          }
        } ]
      },
      "TemplateGroup" : {
        "type" : "object",
        "properties" : {
          "templateGroupId" : {
            "$ref" : "#/components/schemas/TemplateGroupId"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of template",
            "readOnly" : true,
            "example" : "Round 2 template"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the Template",
            "example" : "Collects the data required for the second Further Competition Event"
          },
          "mandatoryTemplate" : {
            "type" : "boolean",
            "description" : "Indicates if the event must use the template out as part of the procurement.",
            "readOnly" : true
          },
          "inheritsFrom" : {
            "type" : "number",
            "format" : "integer",
            "example" : 1
          }
        }
      },
      "TemplateGroupId" : {
        "type" : "number",
        "description" : "Identifies a template group for an event that includes template documents and questions to be included in that event. More than one group will exist if you can run multiple events of the same type but with different.",
        "format" : "integer",
        "example" : 1
      },
      "EvalCriteria" : {
        "type" : "object",
        "description" : "Details of an Evaluation type. This is known as an Envelope or Criterion",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EvalCriteriaNonOCDS"
        }, {
          "$ref" : "#/components/schemas/EvalCriteriaOCDS"
        } ]
      },
      "EvalCriteriaNonOCDS" : {
        "type" : "object",
        "properties" : {
          "offlineAllowedNonOCDS" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "offlineNonOCDS" : {
            "type" : "boolean",
            "default" : false
          },
          "inheritanceNonOCDS" : {
            "$ref" : "#/components/schemas/DataTemplateInheritanceType"
          }
        },
        "description" : "Details of an Evaluation type. This is known as an Envelope or Criterion"
      },
      "DataTemplateInheritanceType" : {
        "type" : "string",
        "description" : "Objects within the DataTemplate may be inherited from a previous template. The inheritance may apply in the following ways-\n\n  * None - Not linked to any other template\n  * Part - Inherits from previous template but subsections have their own inheritance setting\n  * AsIs - Does not allow editing but will be included from previous template\n  * Edit - Inherits but can be updated\n",
        "readOnly" : true,
        "enum" : [ "None", "Part", "AsIs", "Edit" ]
      },
      "EvalCriteriaOCDS" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Identifier",
            "minLength" : 1,
            "type" : "string",
            "description" : "The identifier for this criterion. It must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid). See the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details.",
            "readOnly" : true
          },
          "title" : {
            "title" : "Title",
            "minLength" : 1,
            "type" : "string",
            "description" : "A title for this criterion.",
            "nullable" : true,
            "readOnly" : true
          },
          "description" : {
            "title" : "Description",
            "minLength" : 1,
            "type" : "string",
            "description" : "A description of this criterion. Structured information should be provided in its other fields.",
            "nullable" : true,
            "readOnly" : true
          },
          "relatesTo" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RelatesTo"
            }, {
              "readOnly" : true
            } ]
          },
          "relatedItems" : {
            "type" : "string",
            "readOnly" : true
          },
          "requirementGroups" : {
            "minItems" : 1,
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/QuestionGroup"
            }
          }
        },
        "description" : "Details of an Evaluation type. This is known as an Envelope or Criterion"
      },
      "RelatesTo" : {
        "title" : "Related schema element",
        "type" : "string",
        "description" : "The schema element that the criterion judges, evaluates or assesses. For example criterion may be defined against items or against bidders.",
        "nullable" : true,
        "enum" : [ "tenderer", "item" ]
      },
      "QuestionGroup" : {
        "type" : "object",
        "properties" : {
          "nonOCDS" : {
            "$ref" : "#/components/schemas/QuestionGroup_nonOCDS"
          },
          "OCDS" : {
            "$ref" : "#/components/schemas/QuestionGroup_OCDS"
          }
        },
        "description" : "This is an arbitrary grouping of questions to make it within an individual Evaluation. Known as a Requirement Group in OCDS"
      },
      "Question" : {
        "type" : "object",
        "properties" : {
          "nonOCDS" : {
            "$ref" : "#/components/schemas/Question_nonOCDS"
          },
          "OCDS" : {
            "$ref" : "#/components/schemas/Requirement"
          }
        },
        "description" : "A question that must be answered by the supplier as part of a tender or a question answered by the buyer to provide information to support the supplier."
      },
      "QuestionType" : {
        "type" : "string",
        "description" : "Type of question to be displayed\n  * Value (provides information in the expectedValue from buyer or supplier) \n  * Range (provides a range for the expectedValue from buyer)\n  * SingleSelect (Provides a single select from options from the buyer or supplier)\n  * MultiSelect (Provides a multi select from options from the buyer or supplier)\n  * SingleSelectWithOptions (Provides options from the buyer to use in a single select for the supplier)\n  * MultiSelectWithOptions (Provides options from the buyer to use in a multiselect select for the supplier)\n  * Document (Requires a document from a supplier)\n  * DocumentWithTemplate (provides document from the buyer to be used as a template for the supplier)\n  * Address (provides an address from buyer or supplier using a post code manual input)\n  * KeyValuePair (provides two related values)\n  * Text (provides an text field similar to text area in UI)\n  * Monetary (provides a field to input a monetary value)\n  * Integer (provides a field that will only allow monetary values)\n  * Date (provides input that will only allow a date) \n  * DateTime (provides input that will only allow a date and time)\n  * Percentage (provides input that will only allow a percentage value)\n  * ReadMe (provides guidance to the user)\n  * Duration (provides input that will allow a length of time to be specified)\n  * Table (provides input to define a table)\n",
        "enum" : [ "Value", "Range", "SingleSelect", "MultiSelect", "SingleSelectWithOptions", "MultiSelectWithOptions", "Document", "DocumentWithTemplate", "Address", "KeyValuePair", "Text", "Monetary", "Integer", "Date", "DateTime", "Percentage", "ReadMe", "Duration", "Table" ]
      },
      "TableDefinition" : {
        "type" : "object",
        "properties" : {
          "editableCols" : {
            "type" : "boolean"
          },
          "editableRows" : {
            "type" : "boolean"
          },
          "titles" : {
            "$ref" : "#/components/schemas/TableDefinition_titles"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TableData"
            }
          }
        }
      },
      "TitleDefinition" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "dataType" : {
            "type" : "string",
            "enum" : [ "string", "integer" ]
          }
        }
      },
      "TableData" : {
        "type" : "object",
        "properties" : {
          "row" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "ID of one of the rows specified title definition"
          },
          "cols" : {
            "type" : "array",
            "description" : "one item per column defined in title definition",
            "items" : {
              "oneOf" : [ {
                "type" : "string"
              }, {
                "type" : "integer"
              }, {
                "type" : "number"
              }, {
                "type" : "boolean"
              } ]
            }
          }
        }
      },
      "QuestionDependancy" : {
        "type" : "object",
        "properties" : {
          "dependentOnId" : {
            "type" : "string"
          },
          "dependencyType" : {
            "$ref" : "#/components/schemas/DependencyType"
          },
          "dependencyValue" : {
            "oneOf" : [ {
              "type" : "string",
              "format" : "date"
            }, {
              "type" : "integer"
            }, {
              "type" : "boolean"
            } ]
          }
        },
        "description" : "Describes the condition when this question should be shown based on another question."
      },
      "DependencyType" : {
        "type" : "string",
        "description" : "Type of relationship to dependent field\n  * GreaterThan (Dependent value greater than dependencyValue) \n  * EqualTo (Dependent value equal to the dependencyValue)\n  * LessThan (Dependent value less than the dependency value)\n  * Inside (Dependent value inside a range or period)\n  * Outside (Dependent value outside a range or period)\n  * NotNull (Any Dependent value has been provided)\n",
        "enum" : [ "GreaterThan", "EqualTo", "LessThan", "Inside", "Outside", "NotNull" ]
      },
      "QuestionRelationship" : {
        "type" : "object",
        "properties" : {
          "dependentOnId" : {
            "type" : "string"
          },
          "dependencyValue" : {
            "type" : "string"
          },
          "relationshipType" : {
            "$ref" : "#/components/schemas/RelationshipType"
          }
        },
        "description" : "Describes the relationships the answers provided to a question."
      },
      "RelationshipType" : {
        "type" : "string",
        "description" : "Type of relationship to dependent field\n  * GreaterThan (Question value greater than dependent question value) \n  * EqualTo (Question value equal to dependent question value)\n  * LessThan (Question value less than dependent question value)\n  * Inside (Question value inside a range or period defined in dependent question)\n  * Outside (Question value outside a range or period defined in dependent question)\n  * Alternative (Either question or dependent question may contain an answer not both)\n  * MultiAnswerGroup (Question value is part of multi answered questions)\n  * PercentageOf (Question value is should have minuum percentage)\n",
        "enum" : [ "GreaterThan", "EqualTo", "LessThan", "Inside", "Outside", "Alternative", "MultiAnswerGroup", "PercentageGroup", "PercentageOf" ]
      },
      "TimelineDependency" : {
        "type" : "object",
        "properties" : {
          "nonOCDS" : {
            "$ref" : "#/components/schemas/TimelineDependency_nonOCDS"
          },
          "OCDS" : {
            "$ref" : "#/components/schemas/Requirement"
          }
        },
        "description" : "A question for timeline dependency."
      },
      "Requirement" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Requirement_1"
        }, {
          "minProperties" : 1,
          "type" : "object",
          "properties" : {
            "expectedValue" : {
              "$ref" : "#/components/schemas/Value"
            },
            "minValue" : {
              "$ref" : "#/components/schemas/Value"
            },
            "maxValue" : {
              "$ref" : "#/components/schemas/Value"
            },
            "period" : {
              "$ref" : "#/components/schemas/Period_1"
            }
          }
        } ]
      },
      "Requirement_1" : {
        "title" : "Requirement",
        "minProperties" : 1,
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Requirement identifier",
            "minLength" : 1,
            "type" : "string",
            "description" : "The identifier for this requirement. It must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid). See the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details."
          },
          "title" : {
            "title" : "Requirement title",
            "minLength" : 1,
            "type" : "string",
            "description" : "The title of this atomic requirement.",
            "nullable" : true
          },
          "description" : {
            "title" : "Requirement description",
            "minLength" : 1,
            "type" : "string",
            "description" : "A free text description for this atomic requirement.",
            "nullable" : true
          },
          "dataType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DataType"
            } ]
          },
          "pattern" : {
            "title" : "Response validation pattern",
            "minLength" : 1,
            "type" : "string",
            "description" : "A regular expression against which validate the requirement response.",
            "nullable" : true
          },
          "expectedValue" : {
            "title" : "Expected value",
            "minLength" : 1,
            "description" : "Used to state the requirement when the response must be particular value.",
            "nullable" : true,
            "oneOf" : [ {
              "type" : "string"
            }, {
              "type" : "integer"
            }, {
              "type" : "number"
            }, {
              "type" : "boolean"
            } ]
          },
          "minValue" : {
            "title" : "Minimum value",
            "type" : "number",
            "description" : "Used to state the lower bound of the requirement when the response must be within a certain range.",
            "nullable" : true
          },
          "maxValue" : {
            "title" : "Maximum value",
            "type" : "number",
            "description" : "Used to state the upper bound of the requirement when the response must be within a certain range.",
            "nullable" : true
          },
          "period" : {
            "title" : "Period",
            "description" : "Used to specify a particular period the requirement applies to, for example the bidder's turnover in a given year.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Period"
            } ]
          }
        },
        "description" : "An atomic requirement. Requirements can specify the expected value that the response has to contain, or a range of threshold values within which the response has to fit in. The requirement may apply to a certain period of time."
      },
      "DataType" : {
        "title" : "Requirement datatype",
        "type" : "string",
        "description" : "The data type in which the requirement response must be provided.",
        "enum" : [ "string", "date-time", "number", "integer", "boolean" ]
      },
      "Period" : {
        "title" : "Period",
        "type" : "object",
        "properties" : {
          "startDate" : {
            "title" : "Start date",
            "type" : "string",
            "description" : "The start date for the period. When known, a precise start date must be provided.",
            "format" : "date-time",
            "nullable" : true
          },
          "endDate" : {
            "title" : "End date",
            "type" : "string",
            "description" : "The end date for the period. When known, a precise end date must be provided.",
            "format" : "date-time",
            "nullable" : true
          },
          "maxExtentDate" : {
            "title" : "Maximum extent",
            "type" : "string",
            "description" : "The period cannot be extended beyond this date. This field can be used to express the maximum available date for extension or renewal of this period.",
            "format" : "date-time",
            "nullable" : true
          },
          "durationInDays" : {
            "title" : "Duration (days)",
            "type" : "integer",
            "description" : "The maximum duration of this period in days. A user interface can collect or display this data in months or years as appropriate, and then convert it into days when storing this field. This field can be used when exact dates are not known. If a startDate and endDate are set, this field, if used, should be equal to the difference between startDate and endDate. Otherwise, if a startDate and maxExtentDate are set, this field, if used, should be equal to the difference between startDate and maxExtentDate.",
            "nullable" : true
          }
        },
        "description" : "Key events during a contracting process may have a known start date, end date, duration, or maximum extent (the latest date the period can extend to). In some cases, not all of these fields will have known or relevant values."
      },
      "Value" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Value_1"
        }, {
          "type" : "object",
          "properties" : {
            "currency" : {
              "$ref" : "#/components/schemas/Currency_1"
            }
          }
        } ]
      },
      "Value_1" : {
        "title" : "Value",
        "type" : "object",
        "properties" : {
          "amount" : {
            "title" : "Amount",
            "type" : "number",
            "description" : "Amount as a number.",
            "nullable" : true
          },
          "currency" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Currency"
            } ]
          }
        },
        "description" : "Financial values should be published with a currency attached."
      },
      "Currency" : {
        "title" : "Currency",
        "type" : "string",
        "description" : "Currency code [currency](https://standard.open-contracting.org/1.1/en/schema/codelists/#currency)\n      codelist.",
        "nullable" : true,
        "enum" : [ "ADP", "AED", "AFA", "AFN", "ALK", "ALL", "AMD", "ANG", "AOA", "AOK", "AON", "AOR", "ARA", "ARP", "ARS", "ARY", "ATS", "AUD", "AWG", "AYM", "AZM", "AZN", "BAD", "BAM", "BBD", "BDT", "BEC", "BEF", "BEL", "BGJ", "BGK", "BGL", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOP", "BOV", "BRB", "BRC", "BRE", "BRL", "BRN", "BRR", "BSD", "BTN", "BUK", "BWP", "BYB", "BYN", "BYR", "BZD", "CAD", "CDF", "CHC", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CSD", "CSJ", "CSK", "CUC", "CUP", "CVE", "CYP", "CZK", "DDM", "DEM", "DJF", "DKK", "DOP", "DZD", "ECS", "ECV", "EEK", "EGP", "ERN", "ESA", "ESB", "ESP", "ETB", "EUR", "FIM", "FJD", "FKP", "FRF", "GBP", "GEK", "GEL", "GHC", "GHP", "GHS", "GIP", "GMD", "GNE", "GNF", "GNS", "GQE", "GRD", "GTQ", "GWE", "GWP", "GYD", "HKD", "HNL", "HRD", "HRK", "HTG", "HUF", "IDR", "IEP", "ILP", "ILR", "ILS", "INR", "IQD", "IRR", "ISJ", "ISK", "ITL", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAJ", "LAK", "LBP", "LKR", "LRD", "LSL", "LSM", "LTL", "LTT", "LUC", "LUF", "LUL", "LVL", "LVR", "LYD", "MAD", "MDL", "MGA", "MGF", "MKD", "MLF", "MMK", "MNT", "MOP", "MRO", "MRU", "MTL", "MTP", "MUR", "MVQ", "MVR", "MWK", "MXN", "MXP", "MXV", "MYR", "MZE", "MZM", "MZN", "NAD", "NGN", "NIC", "NIO", "NLG", "NOK", "NPR", "NZD", "OMR", "PAB", "PEH", "PEI", "PEN", "PES", "PGK", "PHP", "PKR", "PLN", "PLZ", "PTE", "PYG", "QAR", "RHD", "ROK", "ROL", "RON", "RSD", "RUB", "RUR", "RWF", "SAR", "SBD", "SCR", "SDD", "SDG", "SDP", "SEK", "SGD", "SHP", "SIT", "SKK", "SLL", "SOS", "SRD", "SRG", "SSP", "STD", "STN", "SUR", "SVC", "SYP", "SZL", "THB", "TJR", "TJS", "TMM", "TMT", "TND", "TOP", "TPE", "TRL", "TRY", "TTD", "TWD", "TZS", "UAH", "UAK", "UGS", "UGW", "UGX", "USD", "USN", "USS", "UYI", "UYN", "UYP", "UYU", "UYW", "UZS", "VEB", "VEF", "VES", "VNC", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XDR", "XEU", "XFO", "XFU", "XOF", "XPD", "XPF", "XPT", "XRE", "XSU", "XTS", "XUA", "XXX", "YDD", "YER", "YUD", "YUM", "YUN", "ZAL", "ZAR", "ZMK", "ZMW", "ZRN", "ZRZ", "ZWC", "ZWD", "ZWL", "ZWN", "ZWR" ]
      },
      "Currency_1" : {
        "title" : "Currency",
        "type" : "string",
        "description" : "CCS currency code is always GBP representing the UK from the Currency code [currency](https://standard.open-contracting.org/1.1/en/schema/codelists/#currency)\n      codelist.",
        "enum" : [ "GBP" ]
      },
      "Period_1" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Period"
        } ]
      },
      "inline_response_400" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "Invalid request.",
            "default" : "Invalid request."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Errors"
        } ]
      },
      "inline_response_403" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "You are not authorized to access this resource.",
            "default" : "You are not authorized to access this resource."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Errors"
        } ]
      },
      "inline_response_429" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "The resource has recieved to many requests",
            "default" : "The resource has recieved to many requests"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Errors"
        } ]
      },
      "inline_response_500" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "An unknown error has occurred.",
            "default" : "An unknown error has occurred."
          }
        }
      },
      "inline_response_502" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "Gateway Error",
            "default" : "Gateway Error"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Errors"
        } ]
      },
      "inline_response_503" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "Service Unavailable",
            "default" : "Service Unavailable"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Errors"
        } ]
      },
      "inline_response_504" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "Gateway Timeout",
            "default" : "Gateway Timeout"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Errors"
        } ]
      },
      "inline_response_505" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "HTTP Version Not Supported",
            "default" : "HTTP Version Not Supported"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Errors"
        } ]
      },
      "inline_response_404" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "The resource you were looking for could not be found.",
            "default" : "The resource you were looking for could not be found."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Errors"
        } ]
      },
      "inline_response_410" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "Archived",
            "default" : "Archived"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Errors"
        } ]
      },
      "inline_response_201" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/LotBasicInfo"
        }, {
          "$ref" : "#/components/schemas/LotDeletionInfo"
        } ]
      },
      "lotid_suppliers_body" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Contact"
        }, {
          "$ref" : "#/components/schemas/Organization"
        } ]
      },
      "RouteToMarket_minContractLength" : {
        "type" : "object",
        "properties" : {
          "unit" : {
            "type" : "string",
            "description" : "The unit of the length value",
            "enum" : [ "day", "month", "year" ]
          },
          "length" : {
            "type" : "integer",
            "description" : "The number of units",
            "format" : "int64"
          }
        }
      },
      "LotRule_transactionData" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "name of the variable",
            "example" : "priceRisesLastPeriod"
          },
          "location" : {
            "type" : "string",
            "description" : "Path or other location of the data which can be evaluated by the application",
            "example" : "product.priceRises"
          }
        }
      },
      "Organization_2_details" : {
        "properties" : {
          "scale" : {
            "$ref" : "#/components/schemas/PartyScale"
          }
        }
      },
      "QuestionGroup_nonOCDS" : {
        "type" : "object",
        "properties" : {
          "prompt" : {
            "type" : "string",
            "description" : "Provides a prompt to request the user to answer the question.",
            "example" : "Specify each question you are requesting an answer to"
          },
          "task" : {
            "type" : "string",
            "description" : "Provides text to describe the task the user must undertake to define the question.",
            "example" : "Add Information you are looking for"
          },
          "mandatory" : {
            "type" : "boolean",
            "description" : "Defines if the user must answer the question to proceed.",
            "readOnly" : true
          },
          "order" : {
            "type" : "integer",
            "description" : "Defines an order of the qustion group to be displayed in UI"
          },
          "inheritance" : {
            "$ref" : "#/components/schemas/DataTemplateInheritanceType"
          }
        }
      },
      "QuestionGroup_OCDS" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Identifier",
            "minLength" : 1,
            "type" : "string",
            "description" : "The identifier for this question group. It must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid). See the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details.",
            "readOnly" : true
          },
          "description" : {
            "title" : "Description",
            "minLength" : 1,
            "type" : "string",
            "description" : "A description of this question group.",
            "nullable" : true
          },
          "requirements" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Question"
            }
          }
        }
      },
      "Question_nonOCDS_options" : {
        "type" : "object",
        "properties" : {
          "text" : {
            "type" : "string",
            "description" : "Defines the text to be displayed for an option"
          },
          "value" : {
            "type" : "string",
            "description" : "Defines value that the selection represents"
          },
          "selected" : {
            "type" : "boolean",
            "description" : "Indicates if the UI should show it as selected"
          },
          "tableDefinition" : {
            "$ref" : "#/components/schemas/TableDefinition"
          }
        }
      },
      "Question_nonOCDS_dependency" : {
        "type" : "object",
        "properties" : {
          "conditional" : {
            "$ref" : "#/components/schemas/QuestionDependancy"
          },
          "relationships" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionRelationship"
            }
          }
        },
        "description" : "Describes any dependency this question has on another question"
      },
      "Question_nonOCDS" : {
        "type" : "object",
        "properties" : {
          "questionType" : {
            "$ref" : "#/components/schemas/QuestionType"
          },
          "answered" : {
            "type" : "boolean",
            "description" : "Defines a the buyer or supplier has answered",
            "readOnly" : true
          },
          "mandatory" : {
            "type" : "boolean",
            "description" : "Defines a the buyer or supplier must answer the question before a tender or response is published",
            "readOnly" : true
          },
          "inheritance" : {
            "$ref" : "#/components/schemas/DataTemplateInheritanceType"
          },
          "multiAnswer" : {
            "type" : "boolean",
            "description" : "Defines a the buyer can add new questions of this type",
            "readOnly" : true
          },
          "order" : {
            "type" : "integer",
            "description" : "Defines an order of the question to be displayed in UI",
            "readOnly" : true
          },
          "length" : {
            "type" : "integer",
            "description" : "Defines the maximum length of the question answer to be displayed in UI"
          },
          "options" : {
            "type" : "array",
            "description" : "Defines options",
            "items" : {
              "$ref" : "#/components/schemas/Question_nonOCDS_options"
            }
          },
          "tableData" : {
            "$ref" : "#/components/schemas/TableDefinition"
          },
          "dependency" : {
            "$ref" : "#/components/schemas/Question_nonOCDS_dependency"
          },
          "timelineDependency" : {
            "$ref" : "#/components/schemas/TimelineDependency"
          }
        }
      },
      "TableDefinition_titles" : {
        "type" : "object",
        "properties" : {
          "columns" : {
            "type" : "array",
            "items" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/TitleDefinition"
              }, {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "minimum" : 0
                  }
                }
              } ]
            }
          },
          "rows" : {
            "type" : "array",
            "items" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/TitleDefinition"
              }, {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "minimum" : 1
                  }
                }
              } ]
            }
          }
        }
      },
      "TimelineDependency_nonOCDS" : {
        "type" : "object",
        "properties" : {
          "questionType" : {
            "$ref" : "#/components/schemas/QuestionType"
          },
          "answered" : {
            "type" : "boolean",
            "description" : "Defines a the buyer or supplier has answered",
            "readOnly" : true
          },
          "options" : {
            "type" : "array",
            "description" : "Defines options",
            "items" : {
              "$ref" : "#/components/schemas/Question_nonOCDS_options"
            }
          },
          "conditional" : {
            "$ref" : "#/components/schemas/QuestionDependancy"
          }
        }
      }
    },
    "responses" : {
      "400InvalidRequest" : {
        "description" : "The 400 (Bad Request) status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_400"
            }
          }
        }
      },
      "403Forbidden" : {
        "description" : "The 403 (Forbidden) status code indicates that the server understood the request but refuses to authorize it.  A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).\nIf authentication credentials were provided in the request, the server considers them insufficient to grant access.  The client SHOULD NOT automatically repeat the request with the same credentials.  The client MAY repeat the request with new or different credentials.  However, a request might be forbidden for reasons unrelated to the credentials.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_403"
            }
          }
        }
      },
      "429TooManyRequests" : {
        "description" : "Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_429"
            }
          }
        }
      },
      "500InternalServerError" : {
        "description" : "The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_500"
            }
          }
        }
      },
      "502BadGateway" : {
        "description" : "The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_502"
            }
          }
        }
      },
      "503ServiceUnavailable" : {
        "description" : "The 503 (Service Unavailable) status code indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field (Section 7.1.3) to suggest an appropriate amount of time for the client to wait before retrying the request.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_503"
            }
          }
        }
      },
      "504GatewayTimeout" : {
        "description" : "The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_504"
            }
          }
        }
      },
      "505HTTPVersionNotSupported" : {
        "description" : "The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_505"
            }
          }
        }
      },
      "404NotFound" : {
        "description" : "The 404 (Not Found) status code indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists.  A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 (Gone) status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_404"
            }
          }
        }
      },
      "410Gone" : {
        "description" : "The 410 (Gone) status code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.  If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) ought to be used instead.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_410"
            }
          }
        }
      }
    },
    "parameters" : {
      "EventTypeParam" : {
        "name" : "event-type",
        "in" : "path",
        "description" : "Event Type",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "$ref" : "#/components/schemas/DefineEventType"
        }
      },
      "AgreementParam" : {
        "name" : "agreement-id",
        "in" : "path",
        "description" : "Agreement",
        "required" : true,
        "schema" : {
          "$ref" : "#/components/schemas/AgreementId"
        }
      },
      "LotParam" : {
        "name" : "lot-id",
        "in" : "path",
        "description" : "Lot",
        "required" : true,
        "schema" : {
          "$ref" : "#/components/schemas/LotId"
        }
      }
    },
    "securitySchemes" : {
      "ApiKeyAuth" : {
        "type" : "apiKey",
        "name" : "X-API-KEY",
        "in" : "header"
      }
    }
  }
}